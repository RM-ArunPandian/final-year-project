{
	"id": "4e66d8642d2ae305e45be754a4099d34",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"main.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\ncontract CreditToken is ERC20, Ownable {\r\n    using SafeERC20 for ERC20;\r\n\r\n    uint256 public nextTokenId = 1;\r\n\r\n    struct Loan {\r\n        address borrower;\r\n        address lender;\r\n        uint256 amount;\r\n        uint256 interestAmount;\r\n        uint256 loanDuration;\r\n        uint256 dueDate;\r\n        bool repaid;\r\n        bool accepted;\r\n        bool canceled;\r\n        uint256 nftTokenId;\r\n        bool isNFTBurned;\r\n        string terms;\r\n    }\r\n\r\n    mapping(uint256 => Loan) public loans;\r\n    mapping(address => bool) public kycVerified;\r\n    uint256 public nextLoanId = 1;\r\n\r\n    event LoanIssued(uint256 loanId, address borrower, address lender, uint256 amount, uint256 interestAmount, uint256 nftTokenId, uint256 dueDate, string terms);\r\n    event LoanAccepted(uint256 loanId);\r\n    event LoanRepaid(uint256 loanId);\r\n    event LoanCanceled(uint256 loanId);\r\n    event DefaultedLoan(uint256 loanId);\r\n    event KYCVerified(address indexed user);\r\n    event NFTBurned(uint256 nftTokenId);\r\n\r\n    constructor() ERC20(\"CreditToken\", \"CRD\") Ownable(msg.sender) {\r\n        uint256 initialSupply = 1_000_000_000;\r\n        _mint(msg.sender, initialSupply);\r\n    }\r\n\r\n    function verifyKYC(address user) external onlyOwner {\r\n        kycVerified[user] = true;\r\n        emit KYCVerified(user);\r\n    }\r\n\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 0;\r\n    }\r\n\r\n    function issueLoan(\r\n        address borrower,\r\n        uint256 amount,\r\n        uint256 interestAmount,\r\n        string memory terms\r\n    ) external returns (uint256) {\r\n        require(kycVerified[borrower], \"Borrower must be KYC verified\");\r\n        require(balanceOf(msg.sender) >= amount, \"Insufficient funds\");\r\n        require(allowance(msg.sender, address(this)) >= amount, \"Allowance is not enough\");\r\n\r\n        uint256 loanDuration = 30;\r\n        _safeTransferFrom(msg.sender, address(this), amount);\r\n        uint256 nftTokenId = nextTokenId++;\r\n        uint256 loanId = nextLoanId++;\r\n\r\n        loans[loanId] = Loan({\r\n            borrower: borrower,\r\n            lender: msg.sender,\r\n            amount: amount,\r\n            interestAmount: interestAmount,\r\n            loanDuration: loanDuration,\r\n            dueDate: block.timestamp + (loanDuration * 1 days),\r\n            repaid: false,\r\n            accepted: false,\r\n            canceled: false,\r\n            nftTokenId: nftTokenId,\r\n            isNFTBurned: false,\r\n            terms: terms\r\n        });\r\n\r\n        emit LoanIssued(loanId, borrower, msg.sender, amount, interestAmount, nftTokenId, block.timestamp + (loanDuration * 1 days), terms);\r\n        return nftTokenId;\r\n    }\r\n\r\n    function acceptLoan(uint256 loanId) external {\r\n        Loan storage loan = loans[loanId];\r\n        require(msg.sender == loan.borrower, \"Only borrower can accept\");\r\n        require(!loan.accepted, \"Loan already accepted\");\r\n        loan.accepted = true;\r\n        _safeTransfer(loan.borrower, loan.amount);\r\n        emit LoanAccepted(loanId);\r\n    }\r\n\r\n    function repayLoan(uint256 loanId) external {\r\n        Loan storage loan = loans[loanId];\r\n        require(msg.sender == loan.borrower, \"Only borrower can repay\");\r\n        require(loan.accepted, \"Loan must be accepted first\");\r\n        require(!loan.repaid, \"Loan already repaid\");\r\n\r\n        uint256 totalAmount = loan.amount + loan.interestAmount;\r\n        _safeTransferFrom(msg.sender, loan.lender, totalAmount);\r\n        loan.repaid = true;\r\n        burnNFT(loan.nftTokenId);\r\n        emit LoanRepaid(loanId);\r\n    }\r\n\r\n    function burnNFT(uint256 nftTokenId) internal {\r\n        for (uint256 i = 1; i < nextLoanId; i++) {\r\n            if (loans[i].nftTokenId == nftTokenId) {\r\n                loans[i].isNFTBurned = true;\r\n                emit NFTBurned(nftTokenId);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    function isNFTBurned(uint256 nftTokenId) external view returns (bool) {\r\n        for (uint256 i = 1; i < nextLoanId; i++) {\r\n            if (loans[i].nftTokenId == nftTokenId) {\r\n                return loans[i].isNFTBurned;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function cancelLoan(uint256 loanId) external {\r\n        Loan storage loan = loans[loanId];\r\n        require(msg.sender == loan.lender, \"Only lender can cancel\");\r\n        require(!loan.canceled, \"Loan already cancelled\");\r\n        require(!loan.accepted, \"Cannot cancel an accepted loan\");\r\n        _safeTransfer(msg.sender, loan.amount);\r\n        loan.canceled = true;\r\n        emit LoanCanceled(loanId);\r\n    }\r\n\r\n    function checkDefault(uint256 loanId) external {\r\n        Loan storage loan = loans[loanId];\r\n        require(block.timestamp > loan.dueDate, \"Loan is still within repayment period\");\r\n        require(!loan.repaid, \"Loan already repaid\");\r\n        loan.canceled = true;\r\n        emit DefaultedLoan(loanId);\r\n    }\r\n\r\n    function timeUntilDue(uint256 loanId) external view returns (uint256) {\r\n        Loan storage loan = loans[loanId];\r\n        if (block.timestamp >= loan.dueDate) {\r\n            return 0;\r\n        } else {\r\n            return loan.dueDate - block.timestamp;\r\n        }\r\n    }\r\n\r\n    function _safeTransferFrom(address from, address to, uint256 amount) internal {\r\n        ERC20(address(this)).safeTransferFrom(from, to, amount);\r\n    }\r\n\r\n    function _safeTransfer(address to, uint256 amount) internal {\r\n        ERC20(address(this)).safeTransfer(to, amount);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 397,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 403,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 405,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 407,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 409,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205558d9f32c893362baa9f886c0063415bdbcdc2b63309f23eac1d495ae9a566b64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205558d9f32c893362baa9f886c0063415bdbcdc2b63309f23eac1d495ae9a566b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE PC 0xD9 RETURN 0x2C DUP10 CALLER PUSH3 0xBAA9F8 DUP7 0xC0 MOD CALLVALUE ISZERO 0xBD 0xBC 0xDC 0x2B PUSH4 0x309F23EA 0xC1 0xD4 SWAP6 0xAE SWAP11 JUMP PUSH12 0x64736F6C634300081A003300 ",
							"sourceMap": "698:8692:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205558d9f32c893362baa9f886c0063415bdbcdc2b63309f23eac1d495ae9a566b64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE PC 0xD9 RETURN 0x2C DUP10 CALLER PUSH3 0xBAA9F8 DUP7 0xC0 MOD CALLVALUE ISZERO 0xBD 0xBC 0xDC 0x2B PUSH4 0x309F23EA 0xC1 0xD4 SWAP6 0xAE SWAP11 JUMP PUSH12 0x64736F6C634300081A003300 ",
							"sourceMap": "698:8692:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205558d9f32c893362baa9f886c0063415bdbcdc2b63309f23eac1d495ae9a566b64736f6c634300081a0033",
									".code": [
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"main.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"main.sol": {
				"CreditToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "loanId",
									"type": "uint256"
								}
							],
							"name": "DefaultedLoan",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "KYCVerified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "loanId",
									"type": "uint256"
								}
							],
							"name": "LoanAccepted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "loanId",
									"type": "uint256"
								}
							],
							"name": "LoanCanceled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "loanId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "borrower",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "lender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "interestAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "nftTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "dueDate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "terms",
									"type": "string"
								}
							],
							"name": "LoanIssued",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "loanId",
									"type": "uint256"
								}
							],
							"name": "LoanRepaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "nftTokenId",
									"type": "uint256"
								}
							],
							"name": "NFTBurned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "loanId",
									"type": "uint256"
								}
							],
							"name": "acceptLoan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "loanId",
									"type": "uint256"
								}
							],
							"name": "cancelLoan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "loanId",
									"type": "uint256"
								}
							],
							"name": "checkDefault",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nftTokenId",
									"type": "uint256"
								}
							],
							"name": "isNFTBurned",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "borrower",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interestAmount",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "terms",
									"type": "string"
								}
							],
							"name": "issueLoan",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "kycVerified",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "loans",
							"outputs": [
								{
									"internalType": "address",
									"name": "borrower",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "lender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interestAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "loanDuration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "dueDate",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "repaid",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "accepted",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "canceled",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "nftTokenId",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isNFTBurned",
									"type": "bool"
								},
								{
									"internalType": "string",
									"name": "terms",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextLoanId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextTokenId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "loanId",
									"type": "uint256"
								}
							],
							"name": "repayLoan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "loanId",
									"type": "uint256"
								}
							],
							"name": "timeUntilDue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "verifyKYC",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"main.sol\":247:5716  contract CreditToken is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"main.sol\":356:357  1 */\n  0x01\n    /* \"main.sol\":327:357  uint256 public nextTokenId = 1 */\n  0x06\n  sstore\n    /* \"main.sol\":832:833  1 */\n  0x01\n    /* \"main.sol\":804:833  uint256 public nextLoanId = 1 */\n  0x09\n  sstore\n    /* \"main.sol\":1259:1420  constructor() ERC20(\"CreditToken\", \"CRD\") Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"main.sol\":1309:1319  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  0x437265646974546f6b656e000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4352440000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_11\n  swap2\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_14)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"main.sol\":1332:1353  uint256 initialSupply */\n  0x00\n    /* \"main.sol\":1356:1369  1_000_000_000 */\n  0x3b9aca00\n    /* \"main.sol\":1332:1369  uint256 initialSupply = 1_000_000_000 */\n  swap1\n  pop\n    /* \"main.sol\":1380:1412  _mint(msg.sender, initialSupply) */\n  tag_16\n    /* \"main.sol\":1386:1396  msg.sender */\n  caller\n    /* \"main.sol\":1398:1411  initialSupply */\n  dup3\n    /* \"main.sol\":1380:1385  _mint */\n  shl(0x20, tag_17)\n    /* \"main.sol\":1380:1412  _mint(msg.sender, initialSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"main.sol\":1321:1420  {... */\n  pop\n    /* \"main.sol\":247:5716  contract CreditToken is ERC20, Ownable {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_17:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_21\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_22\n  swap2\n  swap1\n  tag_12\n  jump\t// in\ntag_22:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_21:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_23\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_24)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_24:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_26\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_29)\ntag_26:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_30\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_31\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_32\n  jump\t// in\ntag_31:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_29:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_33\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_34)\ntag_33:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_34:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_35\n  swap2\n  swap1\n  tag_36\n  jump\t// in\ntag_35:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_37:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_38:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_39:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_40:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_67\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_67:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_69\n  tag_39\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":714:798   */\ntag_68:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_41:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_42:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_43:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_44:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_74\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_43\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1429:1468   */\n  tag_75\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_43\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_45:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_46:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_47:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_79\n    /* \"#utility.yul\":1818:1852   */\n  tag_80\n    /* \"#utility.yul\":1827:1851   */\n  tag_81\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_45\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":1818:1852   */\n  tag_46\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":1800:1853   */\n  tag_45\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_48:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_49:\n    /* \"#utility.yul\":2056:2095   */\n  tag_84\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_47\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":2117:2208   */\n  tag_85\n    /* \"#utility.yul\":2166:2207   */\n  tag_86\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_48\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_44\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_50:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_51:\n    /* \"#utility.yul\":2377:2409   */\n  tag_89\n  tag_50\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":2418:2483   */\n  tag_90\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_49\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_52:\n    /* \"#utility.yul\":2555:2675   */\ntag_92:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_94\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_95\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_51\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_92)\ntag_94:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_53:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_98\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_41\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":2906:2935   */\n  tag_99\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_42\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_100:\n    /* \"#utility.yul\":3133:3213   */\n  tag_101\n    /* \"#utility.yul\":3189:3211   */\n  tag_102\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_42\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_52\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_97:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_54:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_55:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_105\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_54\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_56:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_107\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_55\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_7:\n    /* \"#utility.yul\":3950:3987   */\n  tag_109\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_37\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_110\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_111\n  tag_38\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":4038:4094   */\ntag_110:\n    /* \"#utility.yul\":4118:4156   */\n  tag_112\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_40\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":4203:4270   */\n  tag_113\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_53\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_115\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_116:\n    /* \"#utility.yul\":5144:5211   */\n  tag_117\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_56\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_114)\n    /* \"#utility.yul\":4365:4983   */\ntag_115:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_118\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_41\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_119:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_121\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_119)\ntag_121:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_123\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_55\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_122:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_114:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5360   */\ntag_57:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5311:5353   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5304:5309   */\n  dup3\n    /* \"#utility.yul\":5300:5354   */\n  and\n    /* \"#utility.yul\":5289:5354   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5366:5462   */\ntag_58:\n    /* \"#utility.yul\":5403:5410   */\n  0x00\n    /* \"#utility.yul\":5432:5456   */\n  tag_126\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5432:5456   */\n  tag_57\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":5421:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5366:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5468:5586   */\ntag_59:\n    /* \"#utility.yul\":5555:5579   */\n  tag_128\n    /* \"#utility.yul\":5573:5578   */\n  dup2\n    /* \"#utility.yul\":5555:5579   */\n  tag_58\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":5550:5553   */\n  dup3\n    /* \"#utility.yul\":5543:5580   */\n  mstore\n    /* \"#utility.yul\":5468:5586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5814   */\ntag_12:\n    /* \"#utility.yul\":5685:5689   */\n  0x00\n    /* \"#utility.yul\":5723:5725   */\n  0x20\n    /* \"#utility.yul\":5712:5721   */\n  dup3\n    /* \"#utility.yul\":5708:5726   */\n  add\n    /* \"#utility.yul\":5700:5726   */\n  swap1\n  pop\n    /* \"#utility.yul\":5736:5807   */\n  tag_130\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5793:5802   */\n  dup4\n    /* \"#utility.yul\":5789:5806   */\n  add\n    /* \"#utility.yul\":5780:5786   */\n  dup5\n    /* \"#utility.yul\":5736:5807   */\n  tag_59\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":5592:5814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5820:6000   */\ntag_60:\n    /* \"#utility.yul\":5868:5945   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5865:5866   */\n  0x00\n    /* \"#utility.yul\":5858:5946   */\n  mstore\n    /* \"#utility.yul\":5965:5969   */\n  0x11\n    /* \"#utility.yul\":5962:5963   */\n  0x04\n    /* \"#utility.yul\":5955:5970   */\n  mstore\n    /* \"#utility.yul\":5989:5993   */\n  0x24\n    /* \"#utility.yul\":5986:5987   */\n  0x00\n    /* \"#utility.yul\":5979:5994   */\n  revert\n    /* \"#utility.yul\":6006:6197   */\ntag_28:\n    /* \"#utility.yul\":6046:6049   */\n  0x00\n    /* \"#utility.yul\":6065:6085   */\n  tag_133\n    /* \"#utility.yul\":6083:6084   */\n  dup3\n    /* \"#utility.yul\":6065:6085   */\n  tag_45\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":6060:6085   */\n  swap2\n  pop\n    /* \"#utility.yul\":6099:6119   */\n  tag_134\n    /* \"#utility.yul\":6117:6118   */\n  dup4\n    /* \"#utility.yul\":6099:6119   */\n  tag_45\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":6094:6119   */\n  swap3\n  pop\n    /* \"#utility.yul\":6142:6143   */\n  dup3\n    /* \"#utility.yul\":6139:6140   */\n  dup3\n    /* \"#utility.yul\":6135:6144   */\n  add\n    /* \"#utility.yul\":6128:6144   */\n  swap1\n  pop\n    /* \"#utility.yul\":6163:6166   */\n  dup1\n    /* \"#utility.yul\":6160:6161   */\n  dup3\n    /* \"#utility.yul\":6157:6167   */\n  gt\n    /* \"#utility.yul\":6154:6190   */\n  iszero\n  tag_135\n  jumpi\n    /* \"#utility.yul\":6170:6188   */\n  tag_136\n  tag_60\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":6154:6190   */\ntag_135:\n    /* \"#utility.yul\":6006:6197   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6203:6321   */\ntag_61:\n    /* \"#utility.yul\":6290:6314   */\n  tag_138\n    /* \"#utility.yul\":6308:6313   */\n  dup2\n    /* \"#utility.yul\":6290:6314   */\n  tag_45\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":6285:6288   */\n  dup3\n    /* \"#utility.yul\":6278:6315   */\n  mstore\n    /* \"#utility.yul\":6203:6321   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6327:6769   */\ntag_32:\n    /* \"#utility.yul\":6476:6480   */\n  0x00\n    /* \"#utility.yul\":6514:6516   */\n  0x60\n    /* \"#utility.yul\":6503:6512   */\n  dup3\n    /* \"#utility.yul\":6499:6517   */\n  add\n    /* \"#utility.yul\":6491:6517   */\n  swap1\n  pop\n    /* \"#utility.yul\":6527:6598   */\n  tag_140\n    /* \"#utility.yul\":6595:6596   */\n  0x00\n    /* \"#utility.yul\":6584:6593   */\n  dup4\n    /* \"#utility.yul\":6580:6597   */\n  add\n    /* \"#utility.yul\":6571:6577   */\n  dup7\n    /* \"#utility.yul\":6527:6598   */\n  tag_59\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":6608:6680   */\n  tag_141\n    /* \"#utility.yul\":6676:6678   */\n  0x20\n    /* \"#utility.yul\":6665:6674   */\n  dup4\n    /* \"#utility.yul\":6661:6679   */\n  add\n    /* \"#utility.yul\":6652:6658   */\n  dup6\n    /* \"#utility.yul\":6608:6680   */\n  tag_61\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":6690:6762   */\n  tag_142\n    /* \"#utility.yul\":6758:6760   */\n  0x40\n    /* \"#utility.yul\":6747:6756   */\n  dup4\n    /* \"#utility.yul\":6743:6761   */\n  add\n    /* \"#utility.yul\":6734:6740   */\n  dup5\n    /* \"#utility.yul\":6690:6762   */\n  tag_61\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":6327:6769   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6775:6997   */\ntag_36:\n    /* \"#utility.yul\":6868:6872   */\n  0x00\n    /* \"#utility.yul\":6906:6908   */\n  0x20\n    /* \"#utility.yul\":6895:6904   */\n  dup3\n    /* \"#utility.yul\":6891:6909   */\n  add\n    /* \"#utility.yul\":6883:6909   */\n  swap1\n  pop\n    /* \"#utility.yul\":6919:6990   */\n  tag_144\n    /* \"#utility.yul\":6987:6988   */\n  0x00\n    /* \"#utility.yul\":6976:6985   */\n  dup4\n    /* \"#utility.yul\":6972:6989   */\n  add\n    /* \"#utility.yul\":6963:6969   */\n  dup5\n    /* \"#utility.yul\":6919:6990   */\n  tag_61\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":6775:6997   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"main.sol\":247:5716  contract CreditToken is ERC20, Ownable {... */\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"main.sol\":247:5716  contract CreditToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xadfbe22f\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xadfbe22f\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xbdbfa3de\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xc2fdbdad\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xe1ec3c68\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa5410a66\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa6f5b3b3\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xab7b1c89\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x38d16011\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x38d16011\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x75794a3c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x759135a1\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x87c51459\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1a2ff598\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"main.sol\":1664:2915  function issueLoan(... */\n    tag_6:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"main.sol\":1564:1656  function decimals() public view virtual override returns (uint8) {... */\n    tag_8:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"main.sol\":1428:1556  function verifyKYC(address user) external onlyOwner {... */\n    tag_9:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      stop\n        /* \"main.sol\":327:357  uint256 public nextTokenId = 1 */\n    tag_12:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"main.sol\":4826:5139  function checkDefault(uint256 loanId) external {... */\n    tag_13:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      stop\n        /* \"main.sol\":804:833  uint256 public nextLoanId = 1 */\n    tag_14:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_15:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_16:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"main.sol\":754:797  mapping(address => bool) public kycVerified */\n    tag_17:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"main.sol\":5147:5421  function timeUntilDue(uint256 loanId) external view returns (uint256) {... */\n    tag_18:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_19:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"main.sol\":3281:3802  function repayLoan(uint256 loanId) external {... */\n    tag_20:\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n    tag_97:\n      stop\n        /* \"main.sol\":2923:3273  function acceptLoan(uint256 loanId) external {... */\n    tag_21:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      stop\n        /* \"main.sol\":4406:4818  function cancelLoan(uint256 loanId) external {... */\n    tag_22:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n    tag_103:\n      stop\n        /* \"main.sol\":4119:4398  function isNFTBurned(uint256 nftTokenId) external view returns (bool) {... */\n    tag_23:\n      tag_106\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_24:\n      tag_110\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      tag_113\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"main.sol\":710:747  mapping(uint256 => Loan) public loans */\n    tag_25:\n      tag_115\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_118\n      swap13\n      swap12\n      swap11\n      swap10\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_26:\n      tag_120\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_121\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_121:\n      tag_122\n      jump\t// in\n    tag_120:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_126\n      swap1\n      tag_125\n      jump\t// in\n    tag_126:\n      dup1\n      iszero\n      tag_127\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_128\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_127)\n    tag_128:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_129:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_129\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_127:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"main.sol\":1664:2915  function issueLoan(... */\n    tag_47:\n        /* \"main.sol\":1823:1830  uint256 */\n      0x00\n        /* \"main.sol\":1851:1862  kycVerified */\n      0x08\n        /* \"main.sol\":1851:1872  kycVerified[borrower] */\n      0x00\n        /* \"main.sol\":1863:1871  borrower */\n      dup7\n        /* \"main.sol\":1851:1872  kycVerified[borrower] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"main.sol\":1843:1906  require(kycVerified[borrower], \"Borrower must be KYC verified\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n        /* \"main.sol\":1950:1956  amount */\n      dup4\n        /* \"main.sol\":1925:1946  balanceOf(msg.sender) */\n      tag_140\n        /* \"main.sol\":1935:1945  msg.sender */\n      caller\n        /* \"main.sol\":1925:1934  balanceOf */\n      tag_64\n        /* \"main.sol\":1925:1946  balanceOf(msg.sender) */\n      jump\t// in\n    tag_140:\n        /* \"main.sol\":1925:1956  balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"main.sol\":1917:1979  require(balanceOf(msg.sender) >= amount, \"Insufficient funds\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_141:\n        /* \"main.sol\":2038:2044  amount */\n      dup4\n        /* \"main.sol\":1998:2034  allowance(msg.sender, address(this)) */\n      tag_144\n        /* \"main.sol\":2008:2018  msg.sender */\n      caller\n        /* \"main.sol\":2028:2032  this */\n      address\n        /* \"main.sol\":1998:2007  allowance */\n      tag_113\n        /* \"main.sol\":1998:2034  allowance(msg.sender, address(this)) */\n      jump\t// in\n    tag_144:\n        /* \"main.sol\":1998:2044  allowance(msg.sender, address(this)) >= amount */\n      lt\n      iszero\n        /* \"main.sol\":1990:2072  require(allowance(msg.sender, address(this)) >= amount, \"Allowance is not enough\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n        /* \"main.sol\":2085:2105  uint256 loanDuration */\n      0x00\n        /* \"main.sol\":2108:2110  30 */\n      0x1e\n        /* \"main.sol\":2085:2110  uint256 loanDuration = 30 */\n      swap1\n      pop\n        /* \"main.sol\":2121:2173  _safeTransferFrom(msg.sender, address(this), amount) */\n      tag_148\n        /* \"main.sol\":2139:2149  msg.sender */\n      caller\n        /* \"main.sol\":2159:2163  this */\n      address\n        /* \"main.sol\":2166:2172  amount */\n      dup8\n        /* \"main.sol\":2121:2138  _safeTransferFrom */\n      tag_149\n        /* \"main.sol\":2121:2173  _safeTransferFrom(msg.sender, address(this), amount) */\n      jump\t// in\n    tag_148:\n        /* \"main.sol\":2184:2202  uint256 nftTokenId */\n      0x00\n        /* \"main.sol\":2205:2216  nextTokenId */\n      0x06\n      0x00\n        /* \"main.sol\":2205:2218  nextTokenId++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_150\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"main.sol\":2184:2218  uint256 nftTokenId = nextTokenId++ */\n      swap1\n      pop\n        /* \"main.sol\":2229:2243  uint256 loanId */\n      0x00\n        /* \"main.sol\":2246:2256  nextLoanId */\n      0x09\n      0x00\n        /* \"main.sol\":2246:2258  nextLoanId++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_152\n      swap1\n      tag_151\n      jump\t// in\n    tag_152:\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"main.sol\":2229:2258  uint256 loanId = nextLoanId++ */\n      swap1\n      pop\n        /* \"main.sol\":2287:2735  Loan({... */\n      mload(0x40)\n      dup1\n      0x0180\n      add\n      0x40\n      mstore\n      dup1\n        /* \"main.sol\":2317:2325  borrower */\n      dup10\n        /* \"main.sol\":2287:2735  Loan({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"main.sol\":2348:2358  msg.sender */\n      caller\n        /* \"main.sol\":2287:2735  Loan({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"main.sol\":2381:2387  amount */\n      dup9\n        /* \"main.sol\":2287:2735  Loan({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"main.sol\":2418:2432  interestAmount */\n      dup8\n        /* \"main.sol\":2287:2735  Loan({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"main.sol\":2461:2473  loanDuration */\n      dup5\n        /* \"main.sol\":2287:2735  Loan({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"main.sol\":2531:2537  1 days */\n      0x015180\n        /* \"main.sol\":2516:2528  loanDuration */\n      dup6\n        /* \"main.sol\":2516:2537  loanDuration * 1 days */\n      tag_153\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n        /* \"main.sol\":2497:2512  block.timestamp */\n      timestamp\n        /* \"main.sol\":2497:2538  block.timestamp + (loanDuration * 1 days) */\n      tag_155\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n        /* \"main.sol\":2287:2735  Loan({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"main.sol\":2561:2566  false */\n      0x00\n        /* \"main.sol\":2287:2735  Loan({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n        /* \"main.sol\":2591:2596  false */\n      0x00\n        /* \"main.sol\":2287:2735  Loan({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n        /* \"main.sol\":2621:2626  false */\n      0x00\n        /* \"main.sol\":2287:2735  Loan({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n        /* \"main.sol\":2653:2663  nftTokenId */\n      dup4\n        /* \"main.sol\":2287:2735  Loan({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"main.sol\":2691:2696  false */\n      0x00\n        /* \"main.sol\":2287:2735  Loan({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n        /* \"main.sol\":2718:2723  terms */\n      dup7\n        /* \"main.sol\":2287:2735  Loan({... */\n      dup2\n      mstore\n      pop\n        /* \"main.sol\":2271:2276  loans */\n      0x07\n        /* \"main.sol\":2271:2284  loans[loanId] */\n      0x00\n        /* \"main.sol\":2277:2283  loanId */\n      dup4\n        /* \"main.sol\":2271:2284  loans[loanId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"main.sol\":2271:2735  loans[loanId] = Loan({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      sstore\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x06\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xe0\n      dup3\n      add\n      mload\n      dup2\n      0x06\n      add\n      exp(0x0100, 0x01)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x0100\n      dup3\n      add\n      mload\n      dup2\n      0x06\n      add\n      exp(0x0100, 0x02)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x0120\n      dup3\n      add\n      mload\n      dup2\n      0x07\n      add\n      sstore\n      0x0140\n      dup3\n      add\n      mload\n      dup2\n      0x08\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x0160\n      dup3\n      add\n      mload\n      dup2\n      0x09\n      add\n      swap1\n      dup2\n      tag_157\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      pop\n      swap1\n      pop\n      pop\n        /* \"main.sol\":2753:2879  LoanIssued(loanId, borrower, msg.sender, amount, interestAmount, nftTokenId, block.timestamp + (loanDuration * 1 days), terms) */\n      0x065f30d94790e6e129604916065477a26eebb0e2a87f79e6b05b21a0f662d947\n        /* \"main.sol\":2764:2770  loanId */\n      dup2\n        /* \"main.sol\":2772:2780  borrower */\n      dup10\n        /* \"main.sol\":2782:2792  msg.sender */\n      caller\n        /* \"main.sol\":2794:2800  amount */\n      dup11\n        /* \"main.sol\":2802:2816  interestAmount */\n      dup11\n        /* \"main.sol\":2818:2828  nftTokenId */\n      dup8\n        /* \"main.sol\":2864:2870  1 days */\n      0x015180\n        /* \"main.sol\":2849:2861  loanDuration */\n      dup11\n        /* \"main.sol\":2849:2870  loanDuration * 1 days */\n      tag_159\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_159:\n        /* \"main.sol\":2830:2845  block.timestamp */\n      timestamp\n        /* \"main.sol\":2830:2871  block.timestamp + (loanDuration * 1 days) */\n      tag_160\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_160:\n        /* \"main.sol\":2873:2878  terms */\n      dup13\n        /* \"main.sol\":2753:2879  LoanIssued(loanId, borrower, msg.sender, amount, interestAmount, nftTokenId, block.timestamp + (loanDuration * 1 days), terms) */\n      mload(0x40)\n      tag_161\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"main.sol\":2897:2907  nftTokenId */\n      dup2\n        /* \"main.sol\":2890:2907  return nftTokenId */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"main.sol\":1664:2915  function issueLoan(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"main.sol\":1564:1656  function decimals() public view virtual override returns (uint8) {... */\n    tag_55:\n        /* \"main.sol\":1622:1627  uint8 */\n      0x00\n        /* \"main.sol\":1564:1656  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"main.sol\":1428:1556  function verifyKYC(address user) external onlyOwner {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_171\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_172\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_171:\n        /* \"main.sol\":1511:1515  true */\n      0x01\n        /* \"main.sol\":1491:1502  kycVerified */\n      0x08\n        /* \"main.sol\":1491:1508  kycVerified[user] */\n      0x00\n        /* \"main.sol\":1503:1507  user */\n      dup4\n        /* \"main.sol\":1491:1508  kycVerified[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"main.sol\":1491:1515  kycVerified[user] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"main.sol\":1543:1547  user */\n      dup1\n        /* \"main.sol\":1531:1548  KYCVerified(user) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x65c84ee842eafc291d1272a6e3d10f8c454c4288e63f5db3f7be2b3012f321a9\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"main.sol\":1428:1556  function verifyKYC(address user) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_172\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"main.sol\":327:357  uint256 public nextTokenId = 1 */\n    tag_69:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"main.sol\":4826:5139  function checkDefault(uint256 loanId) external {... */\n    tag_74:\n        /* \"main.sol\":4884:4901  Loan storage loan */\n      0x00\n        /* \"main.sol\":4904:4909  loans */\n      0x07\n        /* \"main.sol\":4904:4917  loans[loanId] */\n      0x00\n        /* \"main.sol\":4910:4916  loanId */\n      dup4\n        /* \"main.sol\":4904:4917  loans[loanId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"main.sol\":4884:4917  Loan storage loan = loans[loanId] */\n      swap1\n      pop\n        /* \"main.sol\":4954:4958  loan */\n      dup1\n        /* \"main.sol\":4954:4966  loan.dueDate */\n      0x05\n      add\n      sload\n        /* \"main.sol\":4936:4951  block.timestamp */\n      timestamp\n        /* \"main.sol\":4936:4966  block.timestamp > loan.dueDate */\n      gt\n        /* \"main.sol\":4928:5008  require(block.timestamp > loan.dueDate, \"Loan is still within repayment period\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n        /* \"main.sol\":5028:5032  loan */\n      dup1\n        /* \"main.sol\":5028:5039  loan.repaid */\n      0x06\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"main.sol\":5027:5039  !loan.repaid */\n      iszero\n        /* \"main.sol\":5019:5063  require(!loan.repaid, \"Loan already repaid\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"main.sol\":5090:5094  true */\n      0x01\n        /* \"main.sol\":5074:5078  loan */\n      dup2\n        /* \"main.sol\":5074:5087  loan.canceled */\n      0x06\n      add\n      0x02\n        /* \"main.sol\":5074:5094  loan.canceled = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"main.sol\":5110:5131  DefaultedLoan(loanId) */\n      0x0ab9f35a07aca8965fede1a225ff17bd92f8d63aa4eb9a61ace1e99495e2980d\n        /* \"main.sol\":5124:5130  loanId */\n      dup3\n        /* \"main.sol\":5110:5131  DefaultedLoan(loanId) */\n      mload(0x40)\n      tag_187\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"main.sol\":4873:5139  {... */\n      pop\n        /* \"main.sol\":4826:5139  function checkDefault(uint256 loanId) external {... */\n      pop\n      jump\t// out\n        /* \"main.sol\":804:833  uint256 public nextLoanId = 1 */\n    tag_76:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_190\n      swap1\n      tag_125\n      jump\t// in\n    tag_190:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_191\n      swap1\n      tag_125\n      jump\t// in\n    tag_191:\n      dup1\n      iszero\n      tag_192\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_193\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_192)\n    tag_193:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_194:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_194\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_192:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"main.sol\":754:797  mapping(address => bool) public kycVerified */\n    tag_87:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"main.sol\":5147:5421  function timeUntilDue(uint256 loanId) external view returns (uint256) {... */\n    tag_91:\n        /* \"main.sol\":5208:5215  uint256 */\n      0x00\n        /* \"main.sol\":5228:5245  Loan storage loan */\n      dup1\n        /* \"main.sol\":5248:5253  loans */\n      0x07\n        /* \"main.sol\":5248:5261  loans[loanId] */\n      0x00\n        /* \"main.sol\":5254:5260  loanId */\n      dup5\n        /* \"main.sol\":5248:5261  loans[loanId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"main.sol\":5228:5261  Loan storage loan = loans[loanId] */\n      swap1\n      pop\n        /* \"main.sol\":5295:5299  loan */\n      dup1\n        /* \"main.sol\":5295:5307  loan.dueDate */\n      0x05\n      add\n      sload\n        /* \"main.sol\":5276:5291  block.timestamp */\n      timestamp\n        /* \"main.sol\":5276:5307  block.timestamp >= loan.dueDate */\n      lt\n        /* \"main.sol\":5272:5414  if (block.timestamp >= loan.dueDate) {... */\n      tag_196\n      jumpi\n        /* \"main.sol\":5331:5332  0 */\n      0x00\n        /* \"main.sol\":5324:5332  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_195)\n        /* \"main.sol\":5272:5414  if (block.timestamp >= loan.dueDate) {... */\n    tag_196:\n        /* \"main.sol\":5387:5402  block.timestamp */\n      timestamp\n        /* \"main.sol\":5372:5376  loan */\n      dup2\n        /* \"main.sol\":5372:5384  loan.dueDate */\n      0x05\n      add\n      sload\n        /* \"main.sol\":5372:5402  loan.dueDate - block.timestamp */\n      tag_198\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n        /* \"main.sol\":5365:5402  return loan.dueDate - block.timestamp */\n      swap2\n      pop\n      pop\n        /* \"main.sol\":5147:5421  function timeUntilDue(uint256 loanId) external view returns (uint256) {... */\n    tag_195:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_201\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_202\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"main.sol\":3281:3802  function repayLoan(uint256 loanId) external {... */\n    tag_99:\n        /* \"main.sol\":3336:3353  Loan storage loan */\n      0x00\n        /* \"main.sol\":3356:3361  loans */\n      0x07\n        /* \"main.sol\":3356:3369  loans[loanId] */\n      0x00\n        /* \"main.sol\":3362:3368  loanId */\n      dup4\n        /* \"main.sol\":3356:3369  loans[loanId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"main.sol\":3336:3369  Loan storage loan = loans[loanId] */\n      swap1\n      pop\n        /* \"main.sol\":3402:3406  loan */\n      dup1\n        /* \"main.sol\":3402:3415  loan.borrower */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"main.sol\":3388:3415  msg.sender == loan.borrower */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"main.sol\":3388:3398  msg.sender */\n      caller\n        /* \"main.sol\":3388:3415  msg.sender == loan.borrower */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"main.sol\":3380:3443  require(msg.sender == loan.borrower, \"Only borrower can repay\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_204:\n        /* \"main.sol\":3462:3466  loan */\n      dup1\n        /* \"main.sol\":3462:3475  loan.accepted */\n      0x06\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"main.sol\":3454:3507  require(loan.accepted, \"Loan must be accepted first\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_207:\n        /* \"main.sol\":3527:3531  loan */\n      dup1\n        /* \"main.sol\":3527:3538  loan.repaid */\n      0x06\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"main.sol\":3526:3538  !loan.repaid */\n      iszero\n        /* \"main.sol\":3518:3562  require(!loan.repaid, \"Loan already repaid\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap1\n      tag_186\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_210:\n        /* \"main.sol\":3575:3594  uint256 totalAmount */\n      0x00\n        /* \"main.sol\":3611:3615  loan */\n      dup2\n        /* \"main.sol\":3611:3630  loan.interestAmount */\n      0x03\n      add\n      sload\n        /* \"main.sol\":3597:3601  loan */\n      dup3\n        /* \"main.sol\":3597:3608  loan.amount */\n      0x02\n      add\n      sload\n        /* \"main.sol\":3597:3630  loan.amount + loan.interestAmount */\n      tag_212\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_212:\n        /* \"main.sol\":3575:3630  uint256 totalAmount = loan.amount + loan.interestAmount */\n      swap1\n      pop\n        /* \"main.sol\":3641:3696  _safeTransferFrom(msg.sender, loan.lender, totalAmount) */\n      tag_213\n        /* \"main.sol\":3659:3669  msg.sender */\n      caller\n        /* \"main.sol\":3671:3675  loan */\n      dup4\n        /* \"main.sol\":3671:3682  loan.lender */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"main.sol\":3684:3695  totalAmount */\n      dup4\n        /* \"main.sol\":3641:3658  _safeTransferFrom */\n      tag_149\n        /* \"main.sol\":3641:3696  _safeTransferFrom(msg.sender, loan.lender, totalAmount) */\n      jump\t// in\n    tag_213:\n        /* \"main.sol\":3721:3725  true */\n      0x01\n        /* \"main.sol\":3707:3711  loan */\n      dup3\n        /* \"main.sol\":3707:3718  loan.repaid */\n      0x06\n      add\n      0x00\n        /* \"main.sol\":3707:3725  loan.repaid = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"main.sol\":3736:3760  burnNFT(loan.nftTokenId) */\n      tag_214\n        /* \"main.sol\":3744:3748  loan */\n      dup3\n        /* \"main.sol\":3744:3759  loan.nftTokenId */\n      0x07\n      add\n      sload\n        /* \"main.sol\":3736:3743  burnNFT */\n      tag_215\n        /* \"main.sol\":3736:3760  burnNFT(loan.nftTokenId) */\n      jump\t// in\n    tag_214:\n        /* \"main.sol\":3776:3794  LoanRepaid(loanId) */\n      0x9a7851747cd7ffb3fe0a32caf3da48b31f27cebe131267051640f8b72fc47186\n        /* \"main.sol\":3787:3793  loanId */\n      dup4\n        /* \"main.sol\":3776:3794  LoanRepaid(loanId) */\n      mload(0x40)\n      tag_216\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"main.sol\":3325:3802  {... */\n      pop\n      pop\n        /* \"main.sol\":3281:3802  function repayLoan(uint256 loanId) external {... */\n      pop\n      jump\t// out\n        /* \"main.sol\":2923:3273  function acceptLoan(uint256 loanId) external {... */\n    tag_102:\n        /* \"main.sol\":2979:2996  Loan storage loan */\n      0x00\n        /* \"main.sol\":2999:3004  loans */\n      0x07\n        /* \"main.sol\":2999:3012  loans[loanId] */\n      0x00\n        /* \"main.sol\":3005:3011  loanId */\n      dup4\n        /* \"main.sol\":2999:3012  loans[loanId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"main.sol\":2979:3012  Loan storage loan = loans[loanId] */\n      swap1\n      pop\n        /* \"main.sol\":3045:3049  loan */\n      dup1\n        /* \"main.sol\":3045:3058  loan.borrower */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"main.sol\":3031:3058  msg.sender == loan.borrower */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"main.sol\":3031:3041  msg.sender */\n      caller\n        /* \"main.sol\":3031:3058  msg.sender == loan.borrower */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"main.sol\":3023:3087  require(msg.sender == loan.borrower, \"Only borrower can accept\") */\n      tag_218\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap1\n      tag_220\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_218:\n        /* \"main.sol\":3107:3111  loan */\n      dup1\n        /* \"main.sol\":3107:3120  loan.accepted */\n      0x06\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"main.sol\":3106:3120  !loan.accepted */\n      iszero\n        /* \"main.sol\":3098:3146  require(!loan.accepted, \"Loan already accepted\") */\n      tag_221\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_221:\n        /* \"main.sol\":3173:3177  true */\n      0x01\n        /* \"main.sol\":3157:3161  loan */\n      dup2\n        /* \"main.sol\":3157:3170  loan.accepted */\n      0x06\n      add\n      0x01\n        /* \"main.sol\":3157:3177  loan.accepted = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"main.sol\":3188:3229  _safeTransfer(loan.borrower, loan.amount) */\n      tag_224\n        /* \"main.sol\":3202:3206  loan */\n      dup2\n        /* \"main.sol\":3202:3215  loan.borrower */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"main.sol\":3217:3221  loan */\n      dup3\n        /* \"main.sol\":3217:3228  loan.amount */\n      0x02\n      add\n      sload\n        /* \"main.sol\":3188:3201  _safeTransfer */\n      tag_225\n        /* \"main.sol\":3188:3229  _safeTransfer(loan.borrower, loan.amount) */\n      jump\t// in\n    tag_224:\n        /* \"main.sol\":3245:3265  LoanAccepted(loanId) */\n      0x8313f00f3154c2e8509a2ee261c618804a495403d3ac94fe5fb833af9d13cb27\n        /* \"main.sol\":3258:3264  loanId */\n      dup3\n        /* \"main.sol\":3245:3265  LoanAccepted(loanId) */\n      mload(0x40)\n      tag_226\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"main.sol\":2968:3273  {... */\n      pop\n        /* \"main.sol\":2923:3273  function acceptLoan(uint256 loanId) external {... */\n      pop\n      jump\t// out\n        /* \"main.sol\":4406:4818  function cancelLoan(uint256 loanId) external {... */\n    tag_105:\n        /* \"main.sol\":4462:4479  Loan storage loan */\n      0x00\n        /* \"main.sol\":4482:4487  loans */\n      0x07\n        /* \"main.sol\":4482:4495  loans[loanId] */\n      0x00\n        /* \"main.sol\":4488:4494  loanId */\n      dup4\n        /* \"main.sol\":4482:4495  loans[loanId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"main.sol\":4462:4495  Loan storage loan = loans[loanId] */\n      swap1\n      pop\n        /* \"main.sol\":4528:4532  loan */\n      dup1\n        /* \"main.sol\":4528:4539  loan.lender */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"main.sol\":4514:4539  msg.sender == loan.lender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"main.sol\":4514:4524  msg.sender */\n      caller\n        /* \"main.sol\":4514:4539  msg.sender == loan.lender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"main.sol\":4506:4566  require(msg.sender == loan.lender, \"Only lender can cancel\") */\n      tag_228\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_228:\n        /* \"main.sol\":4586:4590  loan */\n      dup1\n        /* \"main.sol\":4586:4599  loan.canceled */\n      0x06\n      add\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"main.sol\":4585:4599  !loan.canceled */\n      iszero\n        /* \"main.sol\":4577:4626  require(!loan.canceled, \"Loan already cancelled\") */\n      tag_231\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_231:\n        /* \"main.sol\":4646:4650  loan */\n      dup1\n        /* \"main.sol\":4646:4659  loan.accepted */\n      0x06\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"main.sol\":4645:4659  !loan.accepted */\n      iszero\n        /* \"main.sol\":4637:4694  require(!loan.accepted, \"Cannot cancel an accepted loan\") */\n      tag_234\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_235\n      swap1\n      tag_236\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_234:\n        /* \"main.sol\":4705:4743  _safeTransfer(msg.sender, loan.amount) */\n      tag_237\n        /* \"main.sol\":4719:4729  msg.sender */\n      caller\n        /* \"main.sol\":4731:4735  loan */\n      dup3\n        /* \"main.sol\":4731:4742  loan.amount */\n      0x02\n      add\n      sload\n        /* \"main.sol\":4705:4718  _safeTransfer */\n      tag_225\n        /* \"main.sol\":4705:4743  _safeTransfer(msg.sender, loan.amount) */\n      jump\t// in\n    tag_237:\n        /* \"main.sol\":4770:4774  true */\n      0x01\n        /* \"main.sol\":4754:4758  loan */\n      dup2\n        /* \"main.sol\":4754:4767  loan.canceled */\n      0x06\n      add\n      0x02\n        /* \"main.sol\":4754:4774  loan.canceled = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"main.sol\":4790:4810  LoanCanceled(loanId) */\n      0xdb3578c2b080f19424234c3a83e34455b4b06e90bf24b62f4e13a9ed82fbf0ed\n        /* \"main.sol\":4803:4809  loanId */\n      dup3\n        /* \"main.sol\":4790:4810  LoanCanceled(loanId) */\n      mload(0x40)\n      tag_238\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"main.sol\":4451:4818  {... */\n      pop\n        /* \"main.sol\":4406:4818  function cancelLoan(uint256 loanId) external {... */\n      pop\n      jump\t// out\n        /* \"main.sol\":4119:4398  function isNFTBurned(uint256 nftTokenId) external view returns (bool) {... */\n    tag_108:\n        /* \"main.sol\":4183:4187  bool */\n      0x00\n        /* \"main.sol\":4205:4214  uint256 i */\n      dup1\n        /* \"main.sol\":4217:4218  1 */\n      0x01\n        /* \"main.sol\":4205:4218  uint256 i = 1 */\n      swap1\n      pop\n        /* \"main.sol\":4200:4368  for (uint256 i = 1; i < nextLoanId; i++) {... */\n    tag_240:\n        /* \"main.sol\":4224:4234  nextLoanId */\n      sload(0x09)\n        /* \"main.sol\":4220:4221  i */\n      dup2\n        /* \"main.sol\":4220:4234  i < nextLoanId */\n      lt\n        /* \"main.sol\":4200:4368  for (uint256 i = 1; i < nextLoanId; i++) {... */\n      iszero\n      tag_241\n      jumpi\n        /* \"main.sol\":4283:4293  nftTokenId */\n      dup3\n        /* \"main.sol\":4260:4265  loans */\n      0x07\n        /* \"main.sol\":4260:4268  loans[i] */\n      0x00\n        /* \"main.sol\":4266:4267  i */\n      dup4\n        /* \"main.sol\":4260:4268  loans[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"main.sol\":4260:4279  loans[i].nftTokenId */\n      0x07\n      add\n      sload\n        /* \"main.sol\":4260:4293  loans[i].nftTokenId == nftTokenId */\n      sub\n        /* \"main.sol\":4256:4357  if (loans[i].nftTokenId == nftTokenId) {... */\n      tag_243\n      jumpi\n        /* \"main.sol\":4321:4326  loans */\n      0x07\n        /* \"main.sol\":4321:4329  loans[i] */\n      0x00\n        /* \"main.sol\":4327:4328  i */\n      dup3\n        /* \"main.sol\":4321:4329  loans[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"main.sol\":4321:4341  loans[i].isNFTBurned */\n      0x08\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"main.sol\":4314:4341  return loans[i].isNFTBurned */\n      swap2\n      pop\n      pop\n      jump(tag_239)\n        /* \"main.sol\":4256:4357  if (loans[i].nftTokenId == nftTokenId) {... */\n    tag_243:\n        /* \"main.sol\":4236:4239  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"main.sol\":4200:4368  for (uint256 i = 1; i < nextLoanId; i++) {... */\n      jump(tag_240)\n    tag_241:\n      pop\n        /* \"main.sol\":4385:4390  false */\n      0x00\n        /* \"main.sol\":4378:4390  return false */\n      swap1\n      pop\n        /* \"main.sol\":4119:4398  function isNFTBurned(uint256 nftTokenId) external view returns (bool) {... */\n    tag_239:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"main.sol\":710:747  mapping(uint256 => Loan) public loans */\n    tag_117:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      dup1\n      0x06\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x06\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x06\n      add\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x07\n      add\n      sload\n      swap1\n      dup1\n      0x08\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x09\n      add\n      dup1\n      sload\n      tag_245\n      swap1\n      tag_125\n      jump\t// in\n    tag_245:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_246\n      swap1\n      tag_125\n      jump\t// in\n    tag_246:\n      dup1\n      iszero\n      tag_247\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_248\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_247)\n    tag_248:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_249:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_249\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_247:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      dup13\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_251\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_172\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_253\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_254\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_253:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_255\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_258\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_259\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"main.sol\":5429:5581  function _safeTransferFrom(address from, address to, uint256 amount) internal {... */\n    tag_149:\n        /* \"main.sol\":5518:5573  ERC20(address(this)).safeTransferFrom(from, to, amount) */\n      tag_261\n        /* \"main.sol\":5556:5560  from */\n      dup4\n        /* \"main.sol\":5562:5564  to */\n      dup4\n        /* \"main.sol\":5566:5572  amount */\n      dup4\n        /* \"main.sol\":5532:5536  this */\n      address\n        /* \"main.sol\":5518:5555  ERC20(address(this)).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_262\n      swap1\n        /* \"main.sol\":5518:5573  ERC20(address(this)).safeTransferFrom(from, to, amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_261:\n        /* \"main.sol\":5429:5581  function _safeTransferFrom(address from, address to, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_264\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_264:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10599:10616  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_265\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_266\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10714:10721  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10739  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10741:10746  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_267\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_268\n      jump\t// in\n    tag_267:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_269\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_259\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_271\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_272\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_273\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_274\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_275\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_276\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_278\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_279\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_79\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_279:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_280\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_281\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_281:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_282\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_282:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_280:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"main.sol\":3810:4111  function burnNFT(uint256 nftTokenId) internal {... */\n    tag_215:\n        /* \"main.sol\":3872:3881  uint256 i */\n      0x00\n        /* \"main.sol\":3884:3885  1 */\n      0x01\n        /* \"main.sol\":3872:3885  uint256 i = 1 */\n      swap1\n      pop\n        /* \"main.sol\":3867:4104  for (uint256 i = 1; i < nextLoanId; i++) {... */\n    tag_285:\n        /* \"main.sol\":3891:3901  nextLoanId */\n      sload(0x09)\n        /* \"main.sol\":3887:3888  i */\n      dup2\n        /* \"main.sol\":3887:3901  i < nextLoanId */\n      lt\n        /* \"main.sol\":3867:4104  for (uint256 i = 1; i < nextLoanId; i++) {... */\n      iszero\n      tag_286\n      jumpi\n        /* \"main.sol\":3950:3960  nftTokenId */\n      dup2\n        /* \"main.sol\":3927:3932  loans */\n      0x07\n        /* \"main.sol\":3927:3935  loans[i] */\n      0x00\n        /* \"main.sol\":3933:3934  i */\n      dup4\n        /* \"main.sol\":3927:3935  loans[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"main.sol\":3927:3946  loans[i].nftTokenId */\n      0x07\n      add\n      sload\n        /* \"main.sol\":3927:3960  loans[i].nftTokenId == nftTokenId */\n      sub\n        /* \"main.sol\":3923:4093  if (loans[i].nftTokenId == nftTokenId) {... */\n      tag_288\n      jumpi\n        /* \"main.sol\":4004:4008  true */\n      0x01\n        /* \"main.sol\":3981:3986  loans */\n      0x07\n        /* \"main.sol\":3981:3989  loans[i] */\n      0x00\n        /* \"main.sol\":3987:3988  i */\n      dup4\n        /* \"main.sol\":3981:3989  loans[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"main.sol\":3981:4001  loans[i].isNFTBurned */\n      0x08\n      add\n      0x00\n        /* \"main.sol\":3981:4008  loans[i].isNFTBurned = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"main.sol\":4032:4053  NFTBurned(nftTokenId) */\n      0x3c176691ca154a2f6fe978a2a633a33ee77dbe2902e67a75400720845a4b2ce1\n        /* \"main.sol\":4042:4052  nftTokenId */\n      dup3\n        /* \"main.sol\":4032:4053  NFTBurned(nftTokenId) */\n      mload(0x40)\n      tag_289\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"main.sol\":4072:4077  break */\n      jump(tag_286)\n        /* \"main.sol\":3923:4093  if (loans[i].nftTokenId == nftTokenId) {... */\n    tag_288:\n        /* \"main.sol\":3903:3906  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"main.sol\":3867:4104  for (uint256 i = 1; i < nextLoanId; i++) {... */\n      jump(tag_285)\n    tag_286:\n      pop\n        /* \"main.sol\":3810:4111  function burnNFT(uint256 nftTokenId) internal {... */\n      pop\n      jump\t// out\n        /* \"main.sol\":5589:5713  function _safeTransfer(address to, uint256 amount) internal {... */\n    tag_225:\n        /* \"main.sol\":5660:5705  ERC20(address(this)).safeTransfer(to, amount) */\n      tag_291\n        /* \"main.sol\":5694:5696  to */\n      dup3\n        /* \"main.sol\":5698:5704  amount */\n      dup3\n        /* \"main.sol\":5674:5678  this */\n      address\n        /* \"main.sol\":5660:5693  ERC20(address(this)).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_292\n      swap1\n        /* \"main.sol\":5660:5705  ERC20(address(this)).safeTransfer(to, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_291:\n        /* \"main.sol\":5589:5713  function _safeTransfer(address to, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_294\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_295\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_294:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_296\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_297\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_297:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_298\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_299\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_299:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_298:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_262:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_301\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_302\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_303\n      jump\t// in\n    tag_302:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_304\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_301:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_306\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_307\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_307:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_308)\n    tag_306:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_309\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_310\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_268\n      jump\t// in\n    tag_310:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_309:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_308:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_311\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_312)\n    tag_311:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_312:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_313\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_313:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_292:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_315\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_316\n      swap3\n      swap2\n      swap1\n      tag_317\n      jump\t// in\n    tag_316:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_304\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_315:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_304:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7766:7784  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7794:7813  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7932:7936  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7930  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7922:7926  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7916:7927  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7909:7913  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7903:7907  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7899:7914  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7889:7894  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7882:7887  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7877:7937  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7989:7996  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n      tag_319\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8033:8037  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8027:8038  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8078:8094  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8075:8076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8070:8073  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8055:8095  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8124:8140  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8119:8122  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8112:8141  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n    tag_319:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8182:8198  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8168:8198  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8232:8233  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8226:8234  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8211:8234  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7848:8244  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8272:8273  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8268  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8273  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_320\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8325:8326  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8321  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8326  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_321)\n    tag_320:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8289  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8302  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8307  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_321:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_322\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8382:8387  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8349:8389  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_323\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_323:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_322:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7756:8406  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_324:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_325:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_326:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_327:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_328:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_401\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_324\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":711:782   */\n      tag_402\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_325\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_403\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_326\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":881:910   */\n      tag_404\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_327\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_33:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_406\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_328\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1242:1317   */\n    tag_329:\n        /* \"#utility.yul\":1275:1281   */\n      0x00\n        /* \"#utility.yul\":1308:1310   */\n      0x40\n        /* \"#utility.yul\":1302:1311   */\n      mload\n        /* \"#utility.yul\":1292:1311   */\n      swap1\n      pop\n        /* \"#utility.yul\":1242:1317   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_330:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1446:1563   */\n    tag_331:\n        /* \"#utility.yul\":1555:1556   */\n      0x00\n        /* \"#utility.yul\":1552:1553   */\n      dup1\n        /* \"#utility.yul\":1545:1557   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_332:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_333:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_412\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_332\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_334:\n        /* \"#utility.yul\":1876:1900   */\n      tag_414\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_333\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_415\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_415:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_335:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_417\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_334\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_336:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_337:\n        /* \"#utility.yul\":2232:2256   */\n      tag_420\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_336\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_421\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_421:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_338:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_423\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_337\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_36:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_426\n      tag_330\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":2525:2644   */\n    tag_425:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_427\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_335\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_428\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_338\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_339:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_340:\n        /* \"#utility.yul\":3089:3110   */\n      tag_431\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_339\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_39:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_433\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_340\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_341:\n        /* \"#utility.yul\":3426:3450   */\n      tag_435\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_336\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_43:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_437\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_341\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:3808   */\n    tag_342:\n        /* \"#utility.yul\":3800:3801   */\n      0x00\n        /* \"#utility.yul\":3797:3798   */\n      dup1\n        /* \"#utility.yul\":3790:3802   */\n      revert\n        /* \"#utility.yul\":3814:3931   */\n    tag_343:\n        /* \"#utility.yul\":3923:3924   */\n      0x00\n        /* \"#utility.yul\":3920:3921   */\n      dup1\n        /* \"#utility.yul\":3913:3925   */\n      revert\n        /* \"#utility.yul\":3937:4117   */\n    tag_344:\n        /* \"#utility.yul\":3985:4062   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3982:3983   */\n      0x00\n        /* \"#utility.yul\":3975:4063   */\n      mstore\n        /* \"#utility.yul\":4082:4086   */\n      0x41\n        /* \"#utility.yul\":4079:4080   */\n      0x04\n        /* \"#utility.yul\":4072:4087   */\n      mstore\n        /* \"#utility.yul\":4106:4110   */\n      0x24\n        /* \"#utility.yul\":4103:4104   */\n      0x00\n        /* \"#utility.yul\":4096:4111   */\n      revert\n        /* \"#utility.yul\":4123:4404   */\n    tag_345:\n        /* \"#utility.yul\":4206:4233   */\n      tag_442\n        /* \"#utility.yul\":4228:4232   */\n      dup3\n        /* \"#utility.yul\":4206:4233   */\n      tag_327\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":4198:4204   */\n      dup2\n        /* \"#utility.yul\":4194:4234   */\n      add\n        /* \"#utility.yul\":4336:4342   */\n      dup2\n        /* \"#utility.yul\":4324:4334   */\n      dup2\n        /* \"#utility.yul\":4321:4343   */\n      lt\n        /* \"#utility.yul\":4300:4318   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4288:4298   */\n      dup3\n        /* \"#utility.yul\":4285:4319   */\n      gt\n        /* \"#utility.yul\":4282:4344   */\n      or\n        /* \"#utility.yul\":4279:4367   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":4347:4365   */\n      tag_444\n      tag_344\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":4279:4367   */\n    tag_443:\n        /* \"#utility.yul\":4387:4397   */\n      dup1\n        /* \"#utility.yul\":4383:4385   */\n      0x40\n        /* \"#utility.yul\":4376:4398   */\n      mstore\n        /* \"#utility.yul\":4166:4404   */\n      pop\n        /* \"#utility.yul\":4123:4404   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4539   */\n    tag_346:\n        /* \"#utility.yul\":4444:4450   */\n      0x00\n        /* \"#utility.yul\":4471:4491   */\n      tag_446\n      tag_329\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":4461:4491   */\n      swap1\n      pop\n        /* \"#utility.yul\":4500:4533   */\n      tag_447\n        /* \"#utility.yul\":4528:4532   */\n      dup3\n        /* \"#utility.yul\":4520:4526   */\n      dup3\n        /* \"#utility.yul\":4500:4533   */\n      tag_345\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":4410:4539   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4545:4853   */\n    tag_347:\n        /* \"#utility.yul\":4607:4611   */\n      0x00\n        /* \"#utility.yul\":4697:4715   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4689:4695   */\n      dup3\n        /* \"#utility.yul\":4686:4716   */\n      gt\n        /* \"#utility.yul\":4683:4739   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":4719:4737   */\n      tag_450\n      tag_344\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":4683:4739   */\n    tag_449:\n        /* \"#utility.yul\":4757:4786   */\n      tag_451\n        /* \"#utility.yul\":4779:4785   */\n      dup3\n        /* \"#utility.yul\":4757:4786   */\n      tag_327\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":4749:4786   */\n      swap1\n      pop\n        /* \"#utility.yul\":4841:4845   */\n      0x20\n        /* \"#utility.yul\":4835:4839   */\n      dup2\n        /* \"#utility.yul\":4831:4846   */\n      add\n        /* \"#utility.yul\":4823:4846   */\n      swap1\n      pop\n        /* \"#utility.yul\":4545:4853   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4859:5007   */\n    tag_348:\n        /* \"#utility.yul\":4957:4963   */\n      dup3\n        /* \"#utility.yul\":4952:4955   */\n      dup2\n        /* \"#utility.yul\":4947:4950   */\n      dup4\n        /* \"#utility.yul\":4934:4964   */\n      calldatacopy\n        /* \"#utility.yul\":4998:4999   */\n      0x00\n        /* \"#utility.yul\":4989:4995   */\n      dup4\n        /* \"#utility.yul\":4984:4987   */\n      dup4\n        /* \"#utility.yul\":4980:4996   */\n      add\n        /* \"#utility.yul\":4973:5000   */\n      mstore\n        /* \"#utility.yul\":4859:5007   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5013:5438   */\n    tag_349:\n        /* \"#utility.yul\":5091:5096   */\n      0x00\n        /* \"#utility.yul\":5116:5182   */\n      tag_454\n        /* \"#utility.yul\":5132:5181   */\n      tag_455\n        /* \"#utility.yul\":5174:5180   */\n      dup5\n        /* \"#utility.yul\":5132:5181   */\n      tag_347\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":5116:5182   */\n      tag_346\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":5107:5182   */\n      swap1\n      pop\n        /* \"#utility.yul\":5205:5211   */\n      dup3\n        /* \"#utility.yul\":5198:5203   */\n      dup2\n        /* \"#utility.yul\":5191:5212   */\n      mstore\n        /* \"#utility.yul\":5243:5247   */\n      0x20\n        /* \"#utility.yul\":5236:5241   */\n      dup2\n        /* \"#utility.yul\":5232:5248   */\n      add\n        /* \"#utility.yul\":5281:5284   */\n      dup5\n        /* \"#utility.yul\":5272:5278   */\n      dup5\n        /* \"#utility.yul\":5267:5270   */\n      dup5\n        /* \"#utility.yul\":5263:5279   */\n      add\n        /* \"#utility.yul\":5260:5285   */\n      gt\n        /* \"#utility.yul\":5257:5369   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":5288:5367   */\n      tag_457\n      tag_343\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":5257:5369   */\n    tag_456:\n        /* \"#utility.yul\":5378:5432   */\n      tag_458\n        /* \"#utility.yul\":5425:5431   */\n      dup5\n        /* \"#utility.yul\":5420:5423   */\n      dup3\n        /* \"#utility.yul\":5415:5418   */\n      dup6\n        /* \"#utility.yul\":5378:5432   */\n      tag_348\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":5097:5438   */\n      pop\n        /* \"#utility.yul\":5013:5438   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5458:5798   */\n    tag_350:\n        /* \"#utility.yul\":5514:5519   */\n      0x00\n        /* \"#utility.yul\":5563:5566   */\n      dup3\n        /* \"#utility.yul\":5556:5560   */\n      0x1f\n        /* \"#utility.yul\":5548:5554   */\n      dup4\n        /* \"#utility.yul\":5544:5561   */\n      add\n        /* \"#utility.yul\":5540:5567   */\n      slt\n        /* \"#utility.yul\":5530:5652   */\n      tag_460\n      jumpi\n        /* \"#utility.yul\":5571:5650   */\n      tag_461\n      tag_342\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":5530:5652   */\n    tag_460:\n        /* \"#utility.yul\":5688:5694   */\n      dup2\n        /* \"#utility.yul\":5675:5695   */\n      calldataload\n        /* \"#utility.yul\":5713:5792   */\n      tag_462\n        /* \"#utility.yul\":5788:5791   */\n      dup5\n        /* \"#utility.yul\":5780:5786   */\n      dup3\n        /* \"#utility.yul\":5773:5777   */\n      0x20\n        /* \"#utility.yul\":5765:5771   */\n      dup7\n        /* \"#utility.yul\":5761:5778   */\n      add\n        /* \"#utility.yul\":5713:5792   */\n      tag_349\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":5704:5792   */\n      swap2\n      pop\n        /* \"#utility.yul\":5520:5798   */\n      pop\n        /* \"#utility.yul\":5458:5798   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5804:6749   */\n    tag_46:\n        /* \"#utility.yul\":5900:5906   */\n      0x00\n        /* \"#utility.yul\":5908:5914   */\n      dup1\n        /* \"#utility.yul\":5916:5922   */\n      0x00\n        /* \"#utility.yul\":5924:5930   */\n      dup1\n        /* \"#utility.yul\":5973:5976   */\n      0x80\n        /* \"#utility.yul\":5961:5970   */\n      dup6\n        /* \"#utility.yul\":5952:5959   */\n      dup8\n        /* \"#utility.yul\":5948:5971   */\n      sub\n        /* \"#utility.yul\":5944:5977   */\n      slt\n        /* \"#utility.yul\":5941:6061   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":5980:6059   */\n      tag_465\n      tag_330\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":5941:6061   */\n    tag_464:\n        /* \"#utility.yul\":6100:6101   */\n      0x00\n        /* \"#utility.yul\":6125:6178   */\n      tag_466\n        /* \"#utility.yul\":6170:6177   */\n      dup8\n        /* \"#utility.yul\":6161:6167   */\n      dup3\n        /* \"#utility.yul\":6150:6159   */\n      dup9\n        /* \"#utility.yul\":6146:6168   */\n      add\n        /* \"#utility.yul\":6125:6178   */\n      tag_335\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":6115:6178   */\n      swap5\n      pop\n        /* \"#utility.yul\":6071:6188   */\n      pop\n        /* \"#utility.yul\":6227:6229   */\n      0x20\n        /* \"#utility.yul\":6253:6306   */\n      tag_467\n        /* \"#utility.yul\":6298:6305   */\n      dup8\n        /* \"#utility.yul\":6289:6295   */\n      dup3\n        /* \"#utility.yul\":6278:6287   */\n      dup9\n        /* \"#utility.yul\":6274:6296   */\n      add\n        /* \"#utility.yul\":6253:6306   */\n      tag_338\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":6243:6306   */\n      swap4\n      pop\n        /* \"#utility.yul\":6198:6316   */\n      pop\n        /* \"#utility.yul\":6355:6357   */\n      0x40\n        /* \"#utility.yul\":6381:6434   */\n      tag_468\n        /* \"#utility.yul\":6426:6433   */\n      dup8\n        /* \"#utility.yul\":6417:6423   */\n      dup3\n        /* \"#utility.yul\":6406:6415   */\n      dup9\n        /* \"#utility.yul\":6402:6424   */\n      add\n        /* \"#utility.yul\":6381:6434   */\n      tag_338\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":6371:6434   */\n      swap3\n      pop\n        /* \"#utility.yul\":6326:6444   */\n      pop\n        /* \"#utility.yul\":6511:6513   */\n      0x60\n        /* \"#utility.yul\":6500:6509   */\n      dup6\n        /* \"#utility.yul\":6496:6514   */\n      add\n        /* \"#utility.yul\":6483:6515   */\n      calldataload\n        /* \"#utility.yul\":6542:6560   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6534:6540   */\n      dup2\n        /* \"#utility.yul\":6531:6561   */\n      gt\n        /* \"#utility.yul\":6528:6645   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":6564:6643   */\n      tag_470\n      tag_331\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":6528:6645   */\n    tag_469:\n        /* \"#utility.yul\":6669:6732   */\n      tag_471\n        /* \"#utility.yul\":6724:6731   */\n      dup8\n        /* \"#utility.yul\":6715:6721   */\n      dup3\n        /* \"#utility.yul\":6704:6713   */\n      dup9\n        /* \"#utility.yul\":6700:6722   */\n      add\n        /* \"#utility.yul\":6669:6732   */\n      tag_350\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":6659:6732   */\n      swap2\n      pop\n        /* \"#utility.yul\":6454:6742   */\n      pop\n        /* \"#utility.yul\":5804:6749   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6755:7374   */\n    tag_51:\n        /* \"#utility.yul\":6832:6838   */\n      0x00\n        /* \"#utility.yul\":6840:6846   */\n      dup1\n        /* \"#utility.yul\":6848:6854   */\n      0x00\n        /* \"#utility.yul\":6897:6899   */\n      0x60\n        /* \"#utility.yul\":6885:6894   */\n      dup5\n        /* \"#utility.yul\":6876:6883   */\n      dup7\n        /* \"#utility.yul\":6872:6895   */\n      sub\n        /* \"#utility.yul\":6868:6900   */\n      slt\n        /* \"#utility.yul\":6865:6984   */\n      iszero\n      tag_473\n      jumpi\n        /* \"#utility.yul\":6903:6982   */\n      tag_474\n      tag_330\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":6865:6984   */\n    tag_473:\n        /* \"#utility.yul\":7023:7024   */\n      0x00\n        /* \"#utility.yul\":7048:7101   */\n      tag_475\n        /* \"#utility.yul\":7093:7100   */\n      dup7\n        /* \"#utility.yul\":7084:7090   */\n      dup3\n        /* \"#utility.yul\":7073:7082   */\n      dup8\n        /* \"#utility.yul\":7069:7091   */\n      add\n        /* \"#utility.yul\":7048:7101   */\n      tag_335\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":7038:7101   */\n      swap4\n      pop\n        /* \"#utility.yul\":6994:7111   */\n      pop\n        /* \"#utility.yul\":7150:7152   */\n      0x20\n        /* \"#utility.yul\":7176:7229   */\n      tag_476\n        /* \"#utility.yul\":7221:7228   */\n      dup7\n        /* \"#utility.yul\":7212:7218   */\n      dup3\n        /* \"#utility.yul\":7201:7210   */\n      dup8\n        /* \"#utility.yul\":7197:7219   */\n      add\n        /* \"#utility.yul\":7176:7229   */\n      tag_335\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":7166:7229   */\n      swap3\n      pop\n        /* \"#utility.yul\":7121:7239   */\n      pop\n        /* \"#utility.yul\":7278:7280   */\n      0x40\n        /* \"#utility.yul\":7304:7357   */\n      tag_477\n        /* \"#utility.yul\":7349:7356   */\n      dup7\n        /* \"#utility.yul\":7340:7346   */\n      dup3\n        /* \"#utility.yul\":7329:7338   */\n      dup8\n        /* \"#utility.yul\":7325:7347   */\n      add\n        /* \"#utility.yul\":7304:7357   */\n      tag_338\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":7294:7357   */\n      swap2\n      pop\n        /* \"#utility.yul\":7249:7367   */\n      pop\n        /* \"#utility.yul\":6755:7374   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7380:7466   */\n    tag_351:\n        /* \"#utility.yul\":7415:7422   */\n      0x00\n        /* \"#utility.yul\":7455:7459   */\n      0xff\n        /* \"#utility.yul\":7448:7453   */\n      dup3\n        /* \"#utility.yul\":7444:7460   */\n      and\n        /* \"#utility.yul\":7433:7460   */\n      swap1\n      pop\n        /* \"#utility.yul\":7380:7466   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7472:7584   */\n    tag_352:\n        /* \"#utility.yul\":7555:7577   */\n      tag_480\n        /* \"#utility.yul\":7571:7576   */\n      dup2\n        /* \"#utility.yul\":7555:7577   */\n      tag_351\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":7550:7553   */\n      dup3\n        /* \"#utility.yul\":7543:7578   */\n      mstore\n        /* \"#utility.yul\":7472:7584   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7590:7804   */\n    tag_57:\n        /* \"#utility.yul\":7679:7683   */\n      0x00\n        /* \"#utility.yul\":7717:7719   */\n      0x20\n        /* \"#utility.yul\":7706:7715   */\n      dup3\n        /* \"#utility.yul\":7702:7720   */\n      add\n        /* \"#utility.yul\":7694:7720   */\n      swap1\n      pop\n        /* \"#utility.yul\":7730:7797   */\n      tag_482\n        /* \"#utility.yul\":7794:7795   */\n      0x00\n        /* \"#utility.yul\":7783:7792   */\n      dup4\n        /* \"#utility.yul\":7779:7796   */\n      add\n        /* \"#utility.yul\":7770:7776   */\n      dup5\n        /* \"#utility.yul\":7730:7797   */\n      tag_352\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":7590:7804   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7810:8139   */\n    tag_60:\n        /* \"#utility.yul\":7869:7875   */\n      0x00\n        /* \"#utility.yul\":7918:7920   */\n      0x20\n        /* \"#utility.yul\":7906:7915   */\n      dup3\n        /* \"#utility.yul\":7897:7904   */\n      dup5\n        /* \"#utility.yul\":7893:7916   */\n      sub\n        /* \"#utility.yul\":7889:7921   */\n      slt\n        /* \"#utility.yul\":7886:8005   */\n      iszero\n      tag_484\n      jumpi\n        /* \"#utility.yul\":7924:8003   */\n      tag_485\n      tag_330\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":7886:8005   */\n    tag_484:\n        /* \"#utility.yul\":8044:8045   */\n      0x00\n        /* \"#utility.yul\":8069:8122   */\n      tag_486\n        /* \"#utility.yul\":8114:8121   */\n      dup5\n        /* \"#utility.yul\":8105:8111   */\n      dup3\n        /* \"#utility.yul\":8094:8103   */\n      dup6\n        /* \"#utility.yul\":8090:8112   */\n      add\n        /* \"#utility.yul\":8069:8122   */\n      tag_335\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":8059:8122   */\n      swap2\n      pop\n        /* \"#utility.yul\":8015:8132   */\n      pop\n        /* \"#utility.yul\":7810:8139   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8145:8474   */\n    tag_73:\n        /* \"#utility.yul\":8204:8210   */\n      0x00\n        /* \"#utility.yul\":8253:8255   */\n      0x20\n        /* \"#utility.yul\":8241:8250   */\n      dup3\n        /* \"#utility.yul\":8232:8239   */\n      dup5\n        /* \"#utility.yul\":8228:8251   */\n      sub\n        /* \"#utility.yul\":8224:8256   */\n      slt\n        /* \"#utility.yul\":8221:8340   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":8259:8338   */\n      tag_489\n      tag_330\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":8221:8340   */\n    tag_488:\n        /* \"#utility.yul\":8379:8380   */\n      0x00\n        /* \"#utility.yul\":8404:8457   */\n      tag_490\n        /* \"#utility.yul\":8449:8456   */\n      dup5\n        /* \"#utility.yul\":8440:8446   */\n      dup3\n        /* \"#utility.yul\":8429:8438   */\n      dup6\n        /* \"#utility.yul\":8425:8447   */\n      add\n        /* \"#utility.yul\":8404:8457   */\n      tag_338\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":8394:8457   */\n      swap2\n      pop\n        /* \"#utility.yul\":8350:8467   */\n      pop\n        /* \"#utility.yul\":8145:8474   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8480:8598   */\n    tag_353:\n        /* \"#utility.yul\":8567:8591   */\n      tag_492\n        /* \"#utility.yul\":8585:8590   */\n      dup2\n        /* \"#utility.yul\":8567:8591   */\n      tag_333\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":8562:8565   */\n      dup3\n        /* \"#utility.yul\":8555:8592   */\n      mstore\n        /* \"#utility.yul\":8480:8598   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8604:8826   */\n    tag_81:\n        /* \"#utility.yul\":8697:8701   */\n      0x00\n        /* \"#utility.yul\":8735:8737   */\n      0x20\n        /* \"#utility.yul\":8724:8733   */\n      dup3\n        /* \"#utility.yul\":8720:8738   */\n      add\n        /* \"#utility.yul\":8712:8738   */\n      swap1\n      pop\n        /* \"#utility.yul\":8748:8819   */\n      tag_494\n        /* \"#utility.yul\":8816:8817   */\n      0x00\n        /* \"#utility.yul\":8805:8814   */\n      dup4\n        /* \"#utility.yul\":8801:8818   */\n      add\n        /* \"#utility.yul\":8792:8798   */\n      dup5\n        /* \"#utility.yul\":8748:8819   */\n      tag_353\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":8604:8826   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8832:9306   */\n    tag_112:\n        /* \"#utility.yul\":8900:8906   */\n      0x00\n        /* \"#utility.yul\":8908:8914   */\n      dup1\n        /* \"#utility.yul\":8957:8959   */\n      0x40\n        /* \"#utility.yul\":8945:8954   */\n      dup4\n        /* \"#utility.yul\":8936:8943   */\n      dup6\n        /* \"#utility.yul\":8932:8955   */\n      sub\n        /* \"#utility.yul\":8928:8960   */\n      slt\n        /* \"#utility.yul\":8925:9044   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":8963:9042   */\n      tag_497\n      tag_330\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":8925:9044   */\n    tag_496:\n        /* \"#utility.yul\":9083:9084   */\n      0x00\n        /* \"#utility.yul\":9108:9161   */\n      tag_498\n        /* \"#utility.yul\":9153:9160   */\n      dup6\n        /* \"#utility.yul\":9144:9150   */\n      dup3\n        /* \"#utility.yul\":9133:9142   */\n      dup7\n        /* \"#utility.yul\":9129:9151   */\n      add\n        /* \"#utility.yul\":9108:9161   */\n      tag_335\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":9098:9161   */\n      swap3\n      pop\n        /* \"#utility.yul\":9054:9171   */\n      pop\n        /* \"#utility.yul\":9210:9212   */\n      0x20\n        /* \"#utility.yul\":9236:9289   */\n      tag_499\n        /* \"#utility.yul\":9281:9288   */\n      dup6\n        /* \"#utility.yul\":9272:9278   */\n      dup3\n        /* \"#utility.yul\":9261:9270   */\n      dup7\n        /* \"#utility.yul\":9257:9279   */\n      add\n        /* \"#utility.yul\":9236:9289   */\n      tag_335\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":9226:9289   */\n      swap2\n      pop\n        /* \"#utility.yul\":9181:9299   */\n      pop\n        /* \"#utility.yul\":8832:9306   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9312:10800   */\n    tag_119:\n        /* \"#utility.yul\":9711:9715   */\n      0x00\n        /* \"#utility.yul\":9749:9752   */\n      0x0180\n        /* \"#utility.yul\":9738:9747   */\n      dup3\n        /* \"#utility.yul\":9734:9753   */\n      add\n        /* \"#utility.yul\":9726:9753   */\n      swap1\n      pop\n        /* \"#utility.yul\":9763:9834   */\n      tag_501\n        /* \"#utility.yul\":9831:9832   */\n      0x00\n        /* \"#utility.yul\":9820:9829   */\n      dup4\n        /* \"#utility.yul\":9816:9833   */\n      add\n        /* \"#utility.yul\":9807:9813   */\n      dup16\n        /* \"#utility.yul\":9763:9834   */\n      tag_353\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":9844:9916   */\n      tag_502\n        /* \"#utility.yul\":9912:9914   */\n      0x20\n        /* \"#utility.yul\":9901:9910   */\n      dup4\n        /* \"#utility.yul\":9897:9915   */\n      add\n        /* \"#utility.yul\":9888:9894   */\n      dup15\n        /* \"#utility.yul\":9844:9916   */\n      tag_353\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":9926:9998   */\n      tag_503\n        /* \"#utility.yul\":9994:9996   */\n      0x40\n        /* \"#utility.yul\":9983:9992   */\n      dup4\n        /* \"#utility.yul\":9979:9997   */\n      add\n        /* \"#utility.yul\":9970:9976   */\n      dup14\n        /* \"#utility.yul\":9926:9998   */\n      tag_341\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":10008:10080   */\n      tag_504\n        /* \"#utility.yul\":10076:10078   */\n      0x60\n        /* \"#utility.yul\":10065:10074   */\n      dup4\n        /* \"#utility.yul\":10061:10079   */\n      add\n        /* \"#utility.yul\":10052:10058   */\n      dup13\n        /* \"#utility.yul\":10008:10080   */\n      tag_341\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":10090:10163   */\n      tag_505\n        /* \"#utility.yul\":10158:10161   */\n      0x80\n        /* \"#utility.yul\":10147:10156   */\n      dup4\n        /* \"#utility.yul\":10143:10162   */\n      add\n        /* \"#utility.yul\":10134:10140   */\n      dup12\n        /* \"#utility.yul\":10090:10163   */\n      tag_341\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":10173:10246   */\n      tag_506\n        /* \"#utility.yul\":10241:10244   */\n      0xa0\n        /* \"#utility.yul\":10230:10239   */\n      dup4\n        /* \"#utility.yul\":10226:10245   */\n      add\n        /* \"#utility.yul\":10217:10223   */\n      dup11\n        /* \"#utility.yul\":10173:10246   */\n      tag_341\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":10256:10323   */\n      tag_507\n        /* \"#utility.yul\":10318:10321   */\n      0xc0\n        /* \"#utility.yul\":10307:10316   */\n      dup4\n        /* \"#utility.yul\":10303:10322   */\n      add\n        /* \"#utility.yul\":10294:10300   */\n      dup10\n        /* \"#utility.yul\":10256:10323   */\n      tag_340\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":10333:10400   */\n      tag_508\n        /* \"#utility.yul\":10395:10398   */\n      0xe0\n        /* \"#utility.yul\":10384:10393   */\n      dup4\n        /* \"#utility.yul\":10380:10399   */\n      add\n        /* \"#utility.yul\":10371:10377   */\n      dup9\n        /* \"#utility.yul\":10333:10400   */\n      tag_340\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":10410:10477   */\n      tag_509\n        /* \"#utility.yul\":10472:10475   */\n      0x0100\n        /* \"#utility.yul\":10461:10470   */\n      dup4\n        /* \"#utility.yul\":10457:10476   */\n      add\n        /* \"#utility.yul\":10448:10454   */\n      dup8\n        /* \"#utility.yul\":10410:10477   */\n      tag_340\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":10487:10560   */\n      tag_510\n        /* \"#utility.yul\":10555:10558   */\n      0x0120\n        /* \"#utility.yul\":10544:10553   */\n      dup4\n        /* \"#utility.yul\":10540:10559   */\n      add\n        /* \"#utility.yul\":10531:10537   */\n      dup7\n        /* \"#utility.yul\":10487:10560   */\n      tag_341\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":10570:10638   */\n      tag_511\n        /* \"#utility.yul\":10633:10636   */\n      0x0140\n        /* \"#utility.yul\":10622:10631   */\n      dup4\n        /* \"#utility.yul\":10618:10637   */\n      add\n        /* \"#utility.yul\":10608:10615   */\n      dup6\n        /* \"#utility.yul\":10570:10638   */\n      tag_340\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":10686:10695   */\n      dup2\n        /* \"#utility.yul\":10680:10684   */\n      dup2\n        /* \"#utility.yul\":10676:10696   */\n      sub\n        /* \"#utility.yul\":10670:10673   */\n      0x0160\n        /* \"#utility.yul\":10659:10668   */\n      dup4\n        /* \"#utility.yul\":10655:10674   */\n      add\n        /* \"#utility.yul\":10648:10697   */\n      mstore\n        /* \"#utility.yul\":10714:10793   */\n      tag_512\n        /* \"#utility.yul\":10788:10792   */\n      dup2\n        /* \"#utility.yul\":10778:10785   */\n      dup5\n        /* \"#utility.yul\":10714:10793   */\n      tag_328\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":10706:10793   */\n      swap1\n      pop\n        /* \"#utility.yul\":9312:10800   */\n      swap14\n      swap13\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10806:10986   */\n    tag_354:\n        /* \"#utility.yul\":10854:10931   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10851:10852   */\n      0x00\n        /* \"#utility.yul\":10844:10932   */\n      mstore\n        /* \"#utility.yul\":10951:10955   */\n      0x22\n        /* \"#utility.yul\":10948:10949   */\n      0x04\n        /* \"#utility.yul\":10941:10956   */\n      mstore\n        /* \"#utility.yul\":10975:10979   */\n      0x24\n        /* \"#utility.yul\":10972:10973   */\n      0x00\n        /* \"#utility.yul\":10965:10980   */\n      revert\n        /* \"#utility.yul\":10992:11312   */\n    tag_125:\n        /* \"#utility.yul\":11036:11042   */\n      0x00\n        /* \"#utility.yul\":11073:11074   */\n      0x02\n        /* \"#utility.yul\":11067:11071   */\n      dup3\n        /* \"#utility.yul\":11063:11075   */\n      div\n        /* \"#utility.yul\":11053:11075   */\n      swap1\n      pop\n        /* \"#utility.yul\":11120:11121   */\n      0x01\n        /* \"#utility.yul\":11114:11118   */\n      dup3\n        /* \"#utility.yul\":11110:11122   */\n      and\n        /* \"#utility.yul\":11141:11159   */\n      dup1\n        /* \"#utility.yul\":11131:11212   */\n      tag_515\n      jumpi\n        /* \"#utility.yul\":11197:11201   */\n      0x7f\n        /* \"#utility.yul\":11189:11195   */\n      dup3\n        /* \"#utility.yul\":11185:11202   */\n      and\n        /* \"#utility.yul\":11175:11202   */\n      swap2\n      pop\n        /* \"#utility.yul\":11131:11212   */\n    tag_515:\n        /* \"#utility.yul\":11259:11261   */\n      0x20\n        /* \"#utility.yul\":11251:11257   */\n      dup3\n        /* \"#utility.yul\":11248:11262   */\n      lt\n        /* \"#utility.yul\":11228:11246   */\n      dup2\n        /* \"#utility.yul\":11225:11263   */\n      sub\n        /* \"#utility.yul\":11222:11306   */\n      tag_516\n      jumpi\n        /* \"#utility.yul\":11278:11296   */\n      tag_517\n      tag_354\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":11222:11306   */\n    tag_516:\n        /* \"#utility.yul\":11043:11312   */\n      pop\n        /* \"#utility.yul\":10992:11312   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11318:11497   */\n    tag_355:\n        /* \"#utility.yul\":11458:11489   */\n      0x426f72726f776572206d757374206265204b5943207665726966696564000000\n        /* \"#utility.yul\":11454:11455   */\n      0x00\n        /* \"#utility.yul\":11446:11452   */\n      dup3\n        /* \"#utility.yul\":11442:11456   */\n      add\n        /* \"#utility.yul\":11435:11490   */\n      mstore\n        /* \"#utility.yul\":11318:11497   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11503:11869   */\n    tag_356:\n        /* \"#utility.yul\":11645:11648   */\n      0x00\n        /* \"#utility.yul\":11666:11733   */\n      tag_520\n        /* \"#utility.yul\":11730:11732   */\n      0x1d\n        /* \"#utility.yul\":11725:11728   */\n      dup4\n        /* \"#utility.yul\":11666:11733   */\n      tag_325\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":11659:11733   */\n      swap2\n      pop\n        /* \"#utility.yul\":11742:11835   */\n      tag_521\n        /* \"#utility.yul\":11831:11834   */\n      dup3\n        /* \"#utility.yul\":11742:11835   */\n      tag_355\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":11860:11862   */\n      0x20\n        /* \"#utility.yul\":11855:11858   */\n      dup3\n        /* \"#utility.yul\":11851:11863   */\n      add\n        /* \"#utility.yul\":11844:11863   */\n      swap1\n      pop\n        /* \"#utility.yul\":11503:11869   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11875:12294   */\n    tag_139:\n        /* \"#utility.yul\":12041:12045   */\n      0x00\n        /* \"#utility.yul\":12079:12081   */\n      0x20\n        /* \"#utility.yul\":12068:12077   */\n      dup3\n        /* \"#utility.yul\":12064:12082   */\n      add\n        /* \"#utility.yul\":12056:12082   */\n      swap1\n      pop\n        /* \"#utility.yul\":12128:12137   */\n      dup2\n        /* \"#utility.yul\":12122:12126   */\n      dup2\n        /* \"#utility.yul\":12118:12138   */\n      sub\n        /* \"#utility.yul\":12114:12115   */\n      0x00\n        /* \"#utility.yul\":12103:12112   */\n      dup4\n        /* \"#utility.yul\":12099:12116   */\n      add\n        /* \"#utility.yul\":12092:12139   */\n      mstore\n        /* \"#utility.yul\":12156:12287   */\n      tag_523\n        /* \"#utility.yul\":12282:12286   */\n      dup2\n        /* \"#utility.yul\":12156:12287   */\n      tag_356\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":12148:12287   */\n      swap1\n      pop\n        /* \"#utility.yul\":11875:12294   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12300:12468   */\n    tag_357:\n        /* \"#utility.yul\":12440:12460   */\n      0x496e73756666696369656e742066756e64730000000000000000000000000000\n        /* \"#utility.yul\":12436:12437   */\n      0x00\n        /* \"#utility.yul\":12428:12434   */\n      dup3\n        /* \"#utility.yul\":12424:12438   */\n      add\n        /* \"#utility.yul\":12417:12461   */\n      mstore\n        /* \"#utility.yul\":12300:12468   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12474:12840   */\n    tag_358:\n        /* \"#utility.yul\":12616:12619   */\n      0x00\n        /* \"#utility.yul\":12637:12704   */\n      tag_526\n        /* \"#utility.yul\":12701:12703   */\n      0x12\n        /* \"#utility.yul\":12696:12699   */\n      dup4\n        /* \"#utility.yul\":12637:12704   */\n      tag_325\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":12630:12704   */\n      swap2\n      pop\n        /* \"#utility.yul\":12713:12806   */\n      tag_527\n        /* \"#utility.yul\":12802:12805   */\n      dup3\n        /* \"#utility.yul\":12713:12806   */\n      tag_357\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":12831:12833   */\n      0x20\n        /* \"#utility.yul\":12826:12829   */\n      dup3\n        /* \"#utility.yul\":12822:12834   */\n      add\n        /* \"#utility.yul\":12815:12834   */\n      swap1\n      pop\n        /* \"#utility.yul\":12474:12840   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12846:13265   */\n    tag_143:\n        /* \"#utility.yul\":13012:13016   */\n      0x00\n        /* \"#utility.yul\":13050:13052   */\n      0x20\n        /* \"#utility.yul\":13039:13048   */\n      dup3\n        /* \"#utility.yul\":13035:13053   */\n      add\n        /* \"#utility.yul\":13027:13053   */\n      swap1\n      pop\n        /* \"#utility.yul\":13099:13108   */\n      dup2\n        /* \"#utility.yul\":13093:13097   */\n      dup2\n        /* \"#utility.yul\":13089:13109   */\n      sub\n        /* \"#utility.yul\":13085:13086   */\n      0x00\n        /* \"#utility.yul\":13074:13083   */\n      dup4\n        /* \"#utility.yul\":13070:13087   */\n      add\n        /* \"#utility.yul\":13063:13110   */\n      mstore\n        /* \"#utility.yul\":13127:13258   */\n      tag_529\n        /* \"#utility.yul\":13253:13257   */\n      dup2\n        /* \"#utility.yul\":13127:13258   */\n      tag_358\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":13119:13258   */\n      swap1\n      pop\n        /* \"#utility.yul\":12846:13265   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13271:13444   */\n    tag_359:\n        /* \"#utility.yul\":13411:13436   */\n      0x416c6c6f77616e6365206973206e6f7420656e6f756768000000000000000000\n        /* \"#utility.yul\":13407:13408   */\n      0x00\n        /* \"#utility.yul\":13399:13405   */\n      dup3\n        /* \"#utility.yul\":13395:13409   */\n      add\n        /* \"#utility.yul\":13388:13437   */\n      mstore\n        /* \"#utility.yul\":13271:13444   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13450:13816   */\n    tag_360:\n        /* \"#utility.yul\":13592:13595   */\n      0x00\n        /* \"#utility.yul\":13613:13680   */\n      tag_532\n        /* \"#utility.yul\":13677:13679   */\n      0x17\n        /* \"#utility.yul\":13672:13675   */\n      dup4\n        /* \"#utility.yul\":13613:13680   */\n      tag_325\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":13606:13680   */\n      swap2\n      pop\n        /* \"#utility.yul\":13689:13782   */\n      tag_533\n        /* \"#utility.yul\":13778:13781   */\n      dup3\n        /* \"#utility.yul\":13689:13782   */\n      tag_359\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":13807:13809   */\n      0x20\n        /* \"#utility.yul\":13802:13805   */\n      dup3\n        /* \"#utility.yul\":13798:13810   */\n      add\n        /* \"#utility.yul\":13791:13810   */\n      swap1\n      pop\n        /* \"#utility.yul\":13450:13816   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13822:14241   */\n    tag_147:\n        /* \"#utility.yul\":13988:13992   */\n      0x00\n        /* \"#utility.yul\":14026:14028   */\n      0x20\n        /* \"#utility.yul\":14015:14024   */\n      dup3\n        /* \"#utility.yul\":14011:14029   */\n      add\n        /* \"#utility.yul\":14003:14029   */\n      swap1\n      pop\n        /* \"#utility.yul\":14075:14084   */\n      dup2\n        /* \"#utility.yul\":14069:14073   */\n      dup2\n        /* \"#utility.yul\":14065:14085   */\n      sub\n        /* \"#utility.yul\":14061:14062   */\n      0x00\n        /* \"#utility.yul\":14050:14059   */\n      dup4\n        /* \"#utility.yul\":14046:14063   */\n      add\n        /* \"#utility.yul\":14039:14086   */\n      mstore\n        /* \"#utility.yul\":14103:14234   */\n      tag_535\n        /* \"#utility.yul\":14229:14233   */\n      dup2\n        /* \"#utility.yul\":14103:14234   */\n      tag_360\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":14095:14234   */\n      swap1\n      pop\n        /* \"#utility.yul\":13822:14241   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14247:14427   */\n    tag_361:\n        /* \"#utility.yul\":14295:14372   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14292:14293   */\n      0x00\n        /* \"#utility.yul\":14285:14373   */\n      mstore\n        /* \"#utility.yul\":14392:14396   */\n      0x11\n        /* \"#utility.yul\":14389:14390   */\n      0x04\n        /* \"#utility.yul\":14382:14397   */\n      mstore\n        /* \"#utility.yul\":14416:14420   */\n      0x24\n        /* \"#utility.yul\":14413:14414   */\n      0x00\n        /* \"#utility.yul\":14406:14421   */\n      revert\n        /* \"#utility.yul\":14433:14666   */\n    tag_151:\n        /* \"#utility.yul\":14472:14475   */\n      0x00\n        /* \"#utility.yul\":14495:14519   */\n      tag_538\n        /* \"#utility.yul\":14513:14518   */\n      dup3\n        /* \"#utility.yul\":14495:14519   */\n      tag_336\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":14486:14519   */\n      swap2\n      pop\n        /* \"#utility.yul\":14541:14607   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14534:14539   */\n      dup3\n        /* \"#utility.yul\":14531:14608   */\n      sub\n        /* \"#utility.yul\":14528:14631   */\n      tag_539\n      jumpi\n        /* \"#utility.yul\":14611:14629   */\n      tag_540\n      tag_361\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":14528:14631   */\n    tag_539:\n        /* \"#utility.yul\":14658:14659   */\n      0x01\n        /* \"#utility.yul\":14651:14656   */\n      dup3\n        /* \"#utility.yul\":14647:14660   */\n      add\n        /* \"#utility.yul\":14640:14660   */\n      swap1\n      pop\n        /* \"#utility.yul\":14433:14666   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14672:15082   */\n    tag_154:\n        /* \"#utility.yul\":14712:14719   */\n      0x00\n        /* \"#utility.yul\":14735:14755   */\n      tag_542\n        /* \"#utility.yul\":14753:14754   */\n      dup3\n        /* \"#utility.yul\":14735:14755   */\n      tag_336\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":14730:14755   */\n      swap2\n      pop\n        /* \"#utility.yul\":14769:14789   */\n      tag_543\n        /* \"#utility.yul\":14787:14788   */\n      dup4\n        /* \"#utility.yul\":14769:14789   */\n      tag_336\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":14764:14789   */\n      swap3\n      pop\n        /* \"#utility.yul\":14824:14825   */\n      dup3\n        /* \"#utility.yul\":14821:14822   */\n      dup3\n        /* \"#utility.yul\":14817:14826   */\n      mul\n        /* \"#utility.yul\":14846:14876   */\n      tag_544\n        /* \"#utility.yul\":14864:14875   */\n      dup2\n        /* \"#utility.yul\":14846:14876   */\n      tag_336\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":14835:14876   */\n      swap2\n      pop\n        /* \"#utility.yul\":15025:15026   */\n      dup3\n        /* \"#utility.yul\":15016:15023   */\n      dup3\n        /* \"#utility.yul\":15012:15027   */\n      div\n        /* \"#utility.yul\":15009:15010   */\n      dup5\n        /* \"#utility.yul\":15006:15028   */\n      eq\n        /* \"#utility.yul\":14986:14987   */\n      dup4\n        /* \"#utility.yul\":14979:14988   */\n      iszero\n        /* \"#utility.yul\":14959:15042   */\n      or\n        /* \"#utility.yul\":14936:15075   */\n      tag_545\n      jumpi\n        /* \"#utility.yul\":15055:15073   */\n      tag_546\n      tag_361\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":14936:15075   */\n    tag_545:\n        /* \"#utility.yul\":14720:15082   */\n      pop\n        /* \"#utility.yul\":14672:15082   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15088:15279   */\n    tag_156:\n        /* \"#utility.yul\":15128:15131   */\n      0x00\n        /* \"#utility.yul\":15147:15167   */\n      tag_548\n        /* \"#utility.yul\":15165:15166   */\n      dup3\n        /* \"#utility.yul\":15147:15167   */\n      tag_336\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":15142:15167   */\n      swap2\n      pop\n        /* \"#utility.yul\":15181:15201   */\n      tag_549\n        /* \"#utility.yul\":15199:15200   */\n      dup4\n        /* \"#utility.yul\":15181:15201   */\n      tag_336\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":15176:15201   */\n      swap3\n      pop\n        /* \"#utility.yul\":15224:15225   */\n      dup3\n        /* \"#utility.yul\":15221:15222   */\n      dup3\n        /* \"#utility.yul\":15217:15226   */\n      add\n        /* \"#utility.yul\":15210:15226   */\n      swap1\n      pop\n        /* \"#utility.yul\":15245:15248   */\n      dup1\n        /* \"#utility.yul\":15242:15243   */\n      dup3\n        /* \"#utility.yul\":15239:15249   */\n      gt\n        /* \"#utility.yul\":15236:15272   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":15252:15270   */\n      tag_551\n      tag_361\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":15236:15272   */\n    tag_550:\n        /* \"#utility.yul\":15088:15279   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15285:15426   */\n    tag_362:\n        /* \"#utility.yul\":15334:15338   */\n      0x00\n        /* \"#utility.yul\":15357:15360   */\n      dup2\n        /* \"#utility.yul\":15349:15360   */\n      swap1\n      pop\n        /* \"#utility.yul\":15380:15383   */\n      dup2\n        /* \"#utility.yul\":15377:15378   */\n      0x00\n        /* \"#utility.yul\":15370:15384   */\n      mstore\n        /* \"#utility.yul\":15414:15418   */\n      0x20\n        /* \"#utility.yul\":15411:15412   */\n      0x00\n        /* \"#utility.yul\":15401:15419   */\n      keccak256\n        /* \"#utility.yul\":15393:15419   */\n      swap1\n      pop\n        /* \"#utility.yul\":15285:15426   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15432:15525   */\n    tag_363:\n        /* \"#utility.yul\":15469:15475   */\n      0x00\n        /* \"#utility.yul\":15516:15518   */\n      0x20\n        /* \"#utility.yul\":15511:15513   */\n      0x1f\n        /* \"#utility.yul\":15504:15509   */\n      dup4\n        /* \"#utility.yul\":15500:15514   */\n      add\n        /* \"#utility.yul\":15496:15519   */\n      div\n        /* \"#utility.yul\":15486:15519   */\n      swap1\n      pop\n        /* \"#utility.yul\":15432:15525   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15531:15638   */\n    tag_364:\n        /* \"#utility.yul\":15575:15583   */\n      0x00\n        /* \"#utility.yul\":15625:15630   */\n      dup3\n        /* \"#utility.yul\":15619:15623   */\n      dup3\n        /* \"#utility.yul\":15615:15631   */\n      shl\n        /* \"#utility.yul\":15594:15631   */\n      swap1\n      pop\n        /* \"#utility.yul\":15531:15638   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15644:16037   */\n    tag_365:\n        /* \"#utility.yul\":15713:15719   */\n      0x00\n        /* \"#utility.yul\":15763:15764   */\n      0x08\n        /* \"#utility.yul\":15751:15761   */\n      dup4\n        /* \"#utility.yul\":15747:15765   */\n      mul\n        /* \"#utility.yul\":15786:15883   */\n      tag_556\n        /* \"#utility.yul\":15816:15882   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15805:15814   */\n      dup3\n        /* \"#utility.yul\":15786:15883   */\n      tag_364\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":15904:15943   */\n      tag_557\n        /* \"#utility.yul\":15934:15942   */\n      dup7\n        /* \"#utility.yul\":15923:15932   */\n      dup4\n        /* \"#utility.yul\":15904:15943   */\n      tag_364\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":15892:15943   */\n      swap6\n      pop\n        /* \"#utility.yul\":15976:15980   */\n      dup1\n        /* \"#utility.yul\":15972:15981   */\n      not\n        /* \"#utility.yul\":15965:15970   */\n      dup5\n        /* \"#utility.yul\":15961:15982   */\n      and\n        /* \"#utility.yul\":15952:15982   */\n      swap4\n      pop\n        /* \"#utility.yul\":16025:16029   */\n      dup1\n        /* \"#utility.yul\":16015:16023   */\n      dup7\n        /* \"#utility.yul\":16011:16030   */\n      and\n        /* \"#utility.yul\":16004:16009   */\n      dup5\n        /* \"#utility.yul\":16001:16031   */\n      or\n        /* \"#utility.yul\":15991:16031   */\n      swap3\n      pop\n        /* \"#utility.yul\":15720:16037   */\n      pop\n      pop\n        /* \"#utility.yul\":15644:16037   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16043:16103   */\n    tag_366:\n        /* \"#utility.yul\":16071:16074   */\n      0x00\n        /* \"#utility.yul\":16092:16097   */\n      dup2\n        /* \"#utility.yul\":16085:16097   */\n      swap1\n      pop\n        /* \"#utility.yul\":16043:16103   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16109:16251   */\n    tag_367:\n        /* \"#utility.yul\":16159:16168   */\n      0x00\n        /* \"#utility.yul\":16192:16245   */\n      tag_560\n        /* \"#utility.yul\":16210:16244   */\n      tag_561\n        /* \"#utility.yul\":16219:16243   */\n      tag_562\n        /* \"#utility.yul\":16237:16242   */\n      dup5\n        /* \"#utility.yul\":16219:16243   */\n      tag_336\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":16210:16244   */\n      tag_366\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":16192:16245   */\n      tag_336\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":16179:16245   */\n      swap1\n      pop\n        /* \"#utility.yul\":16109:16251   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16257:16332   */\n    tag_368:\n        /* \"#utility.yul\":16300:16303   */\n      0x00\n        /* \"#utility.yul\":16321:16326   */\n      dup2\n        /* \"#utility.yul\":16314:16326   */\n      swap1\n      pop\n        /* \"#utility.yul\":16257:16332   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16338:16607   */\n    tag_369:\n        /* \"#utility.yul\":16448:16487   */\n      tag_565\n        /* \"#utility.yul\":16479:16486   */\n      dup4\n        /* \"#utility.yul\":16448:16487   */\n      tag_367\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":16509:16600   */\n      tag_566\n        /* \"#utility.yul\":16558:16599   */\n      tag_567\n        /* \"#utility.yul\":16582:16598   */\n      dup3\n        /* \"#utility.yul\":16558:16599   */\n      tag_368\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":16550:16556   */\n      dup5\n        /* \"#utility.yul\":16543:16547   */\n      dup5\n        /* \"#utility.yul\":16537:16548   */\n      sload\n        /* \"#utility.yul\":16509:16600   */\n      tag_365\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":16503:16507   */\n      dup3\n        /* \"#utility.yul\":16496:16601   */\n      sstore\n        /* \"#utility.yul\":16414:16607   */\n      pop\n        /* \"#utility.yul\":16338:16607   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16613:16686   */\n    tag_370:\n        /* \"#utility.yul\":16658:16661   */\n      0x00\n        /* \"#utility.yul\":16613:16686   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":16692:16881   */\n    tag_371:\n        /* \"#utility.yul\":16769:16801   */\n      tag_570\n      tag_370\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":16810:16875   */\n      tag_571\n        /* \"#utility.yul\":16868:16874   */\n      dup2\n        /* \"#utility.yul\":16860:16866   */\n      dup5\n        /* \"#utility.yul\":16854:16858   */\n      dup5\n        /* \"#utility.yul\":16810:16875   */\n      tag_369\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":16745:16881   */\n      pop\n        /* \"#utility.yul\":16692:16881   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16887:17073   */\n    tag_372:\n        /* \"#utility.yul\":16947:17067   */\n    tag_573:\n        /* \"#utility.yul\":16964:16967   */\n      dup2\n        /* \"#utility.yul\":16957:16962   */\n      dup2\n        /* \"#utility.yul\":16954:16968   */\n      lt\n        /* \"#utility.yul\":16947:17067   */\n      iszero\n      tag_575\n      jumpi\n        /* \"#utility.yul\":17018:17057   */\n      tag_576\n        /* \"#utility.yul\":17055:17056   */\n      0x00\n        /* \"#utility.yul\":17048:17053   */\n      dup3\n        /* \"#utility.yul\":17018:17057   */\n      tag_371\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":16991:16992   */\n      0x01\n        /* \"#utility.yul\":16984:16989   */\n      dup2\n        /* \"#utility.yul\":16980:16993   */\n      add\n        /* \"#utility.yul\":16971:16993   */\n      swap1\n      pop\n        /* \"#utility.yul\":16947:17067   */\n      jump(tag_573)\n    tag_575:\n        /* \"#utility.yul\":16887:17073   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17079:17622   */\n    tag_373:\n        /* \"#utility.yul\":17180:17182   */\n      0x1f\n        /* \"#utility.yul\":17175:17178   */\n      dup3\n        /* \"#utility.yul\":17172:17183   */\n      gt\n        /* \"#utility.yul\":17169:17615   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":17214:17252   */\n      tag_579\n        /* \"#utility.yul\":17246:17251   */\n      dup2\n        /* \"#utility.yul\":17214:17252   */\n      tag_362\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":17298:17327   */\n      tag_580\n        /* \"#utility.yul\":17316:17326   */\n      dup5\n        /* \"#utility.yul\":17298:17327   */\n      tag_363\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":17288:17296   */\n      dup2\n        /* \"#utility.yul\":17284:17328   */\n      add\n        /* \"#utility.yul\":17481:17483   */\n      0x20\n        /* \"#utility.yul\":17469:17479   */\n      dup6\n        /* \"#utility.yul\":17466:17484   */\n      lt\n        /* \"#utility.yul\":17463:17512   */\n      iszero\n      tag_581\n      jumpi\n        /* \"#utility.yul\":17502:17510   */\n      dup2\n        /* \"#utility.yul\":17487:17510   */\n      swap1\n      pop\n        /* \"#utility.yul\":17463:17512   */\n    tag_581:\n        /* \"#utility.yul\":17525:17605   */\n      tag_582\n        /* \"#utility.yul\":17581:17603   */\n      tag_583\n        /* \"#utility.yul\":17599:17602   */\n      dup6\n        /* \"#utility.yul\":17581:17603   */\n      tag_363\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":17571:17579   */\n      dup4\n        /* \"#utility.yul\":17567:17604   */\n      add\n        /* \"#utility.yul\":17554:17565   */\n      dup3\n        /* \"#utility.yul\":17525:17605   */\n      tag_372\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":17184:17615   */\n      pop\n      pop\n        /* \"#utility.yul\":17169:17615   */\n    tag_578:\n        /* \"#utility.yul\":17079:17622   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17628:17745   */\n    tag_374:\n        /* \"#utility.yul\":17682:17690   */\n      0x00\n        /* \"#utility.yul\":17732:17737   */\n      dup3\n        /* \"#utility.yul\":17726:17730   */\n      dup3\n        /* \"#utility.yul\":17722:17738   */\n      shr\n        /* \"#utility.yul\":17701:17738   */\n      swap1\n      pop\n        /* \"#utility.yul\":17628:17745   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17751:17920   */\n    tag_375:\n        /* \"#utility.yul\":17795:17801   */\n      0x00\n        /* \"#utility.yul\":17828:17879   */\n      tag_586\n        /* \"#utility.yul\":17876:17877   */\n      0x00\n        /* \"#utility.yul\":17872:17878   */\n      not\n        /* \"#utility.yul\":17864:17869   */\n      dup5\n        /* \"#utility.yul\":17861:17862   */\n      0x08\n        /* \"#utility.yul\":17857:17870   */\n      mul\n        /* \"#utility.yul\":17828:17879   */\n      tag_374\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":17824:17880   */\n      not\n        /* \"#utility.yul\":17909:17913   */\n      dup1\n        /* \"#utility.yul\":17903:17907   */\n      dup4\n        /* \"#utility.yul\":17899:17914   */\n      and\n        /* \"#utility.yul\":17889:17914   */\n      swap2\n      pop\n        /* \"#utility.yul\":17802:17920   */\n      pop\n        /* \"#utility.yul\":17751:17920   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17925:18220   */\n    tag_376:\n        /* \"#utility.yul\":18001:18005   */\n      0x00\n        /* \"#utility.yul\":18147:18176   */\n      tag_588\n        /* \"#utility.yul\":18172:18175   */\n      dup4\n        /* \"#utility.yul\":18166:18170   */\n      dup4\n        /* \"#utility.yul\":18147:18176   */\n      tag_375\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":18139:18176   */\n      swap2\n      pop\n        /* \"#utility.yul\":18209:18212   */\n      dup3\n        /* \"#utility.yul\":18206:18207   */\n      0x02\n        /* \"#utility.yul\":18202:18213   */\n      mul\n        /* \"#utility.yul\":18196:18200   */\n      dup3\n        /* \"#utility.yul\":18193:18214   */\n      or\n        /* \"#utility.yul\":18185:18214   */\n      swap1\n      pop\n        /* \"#utility.yul\":17925:18220   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18225:19620   */\n    tag_158:\n        /* \"#utility.yul\":18342:18379   */\n      tag_590\n        /* \"#utility.yul\":18375:18378   */\n      dup3\n        /* \"#utility.yul\":18342:18379   */\n      tag_324\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":18444:18462   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":18436:18442   */\n      dup2\n        /* \"#utility.yul\":18433:18463   */\n      gt\n        /* \"#utility.yul\":18430:18486   */\n      iszero\n      tag_591\n      jumpi\n        /* \"#utility.yul\":18466:18484   */\n      tag_592\n      tag_344\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":18430:18486   */\n    tag_591:\n        /* \"#utility.yul\":18510:18548   */\n      tag_593\n        /* \"#utility.yul\":18542:18546   */\n      dup3\n        /* \"#utility.yul\":18536:18547   */\n      sload\n        /* \"#utility.yul\":18510:18548   */\n      tag_125\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":18595:18662   */\n      tag_594\n        /* \"#utility.yul\":18655:18661   */\n      dup3\n        /* \"#utility.yul\":18647:18653   */\n      dup3\n        /* \"#utility.yul\":18641:18645   */\n      dup6\n        /* \"#utility.yul\":18595:18662   */\n      tag_373\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":18689:18690   */\n      0x00\n        /* \"#utility.yul\":18713:18717   */\n      0x20\n        /* \"#utility.yul\":18700:18717   */\n      swap1\n      pop\n        /* \"#utility.yul\":18745:18747   */\n      0x1f\n        /* \"#utility.yul\":18737:18743   */\n      dup4\n        /* \"#utility.yul\":18734:18748   */\n      gt\n        /* \"#utility.yul\":18762:18763   */\n      0x01\n        /* \"#utility.yul\":18757:19375   */\n      dup2\n      eq\n      tag_596\n      jumpi\n        /* \"#utility.yul\":19419:19420   */\n      0x00\n        /* \"#utility.yul\":19436:19442   */\n      dup5\n        /* \"#utility.yul\":19433:19510   */\n      iszero\n      tag_597\n      jumpi\n        /* \"#utility.yul\":19485:19494   */\n      dup3\n        /* \"#utility.yul\":19480:19483   */\n      dup8\n        /* \"#utility.yul\":19476:19495   */\n      add\n        /* \"#utility.yul\":19470:19496   */\n      mload\n        /* \"#utility.yul\":19461:19496   */\n      swap1\n      pop\n        /* \"#utility.yul\":19433:19510   */\n    tag_597:\n        /* \"#utility.yul\":19536:19603   */\n      tag_598\n        /* \"#utility.yul\":19596:19602   */\n      dup6\n        /* \"#utility.yul\":19589:19594   */\n      dup3\n        /* \"#utility.yul\":19536:19603   */\n      tag_376\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":19530:19534   */\n      dup7\n        /* \"#utility.yul\":19523:19604   */\n      sstore\n        /* \"#utility.yul\":19392:19614   */\n      pop\n        /* \"#utility.yul\":18727:19614   */\n      jump(tag_595)\n        /* \"#utility.yul\":18757:19375   */\n    tag_596:\n        /* \"#utility.yul\":18809:18813   */\n      0x1f\n        /* \"#utility.yul\":18805:18814   */\n      not\n        /* \"#utility.yul\":18797:18803   */\n      dup5\n        /* \"#utility.yul\":18793:18815   */\n      and\n        /* \"#utility.yul\":18843:18880   */\n      tag_599\n        /* \"#utility.yul\":18875:18879   */\n      dup7\n        /* \"#utility.yul\":18843:18880   */\n      tag_362\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":18902:18903   */\n      0x00\n        /* \"#utility.yul\":18916:19124   */\n    tag_600:\n        /* \"#utility.yul\":18930:18937   */\n      dup3\n        /* \"#utility.yul\":18927:18928   */\n      dup2\n        /* \"#utility.yul\":18924:18938   */\n      lt\n        /* \"#utility.yul\":18916:19124   */\n      iszero\n      tag_602\n      jumpi\n        /* \"#utility.yul\":19009:19018   */\n      dup5\n        /* \"#utility.yul\":19004:19007   */\n      dup10\n        /* \"#utility.yul\":19000:19019   */\n      add\n        /* \"#utility.yul\":18994:19020   */\n      mload\n        /* \"#utility.yul\":18986:18992   */\n      dup3\n        /* \"#utility.yul\":18979:19021   */\n      sstore\n        /* \"#utility.yul\":19060:19061   */\n      0x01\n        /* \"#utility.yul\":19052:19058   */\n      dup3\n        /* \"#utility.yul\":19048:19062   */\n      add\n        /* \"#utility.yul\":19038:19062   */\n      swap2\n      pop\n        /* \"#utility.yul\":19107:19109   */\n      0x20\n        /* \"#utility.yul\":19096:19105   */\n      dup6\n        /* \"#utility.yul\":19092:19110   */\n      add\n        /* \"#utility.yul\":19079:19110   */\n      swap5\n      pop\n        /* \"#utility.yul\":18953:18957   */\n      0x20\n        /* \"#utility.yul\":18950:18951   */\n      dup2\n        /* \"#utility.yul\":18946:18958   */\n      add\n        /* \"#utility.yul\":18941:18958   */\n      swap1\n      pop\n        /* \"#utility.yul\":18916:19124   */\n      jump(tag_600)\n    tag_602:\n        /* \"#utility.yul\":19152:19158   */\n      dup7\n        /* \"#utility.yul\":19143:19150   */\n      dup4\n        /* \"#utility.yul\":19140:19159   */\n      lt\n        /* \"#utility.yul\":19137:19316   */\n      iszero\n      tag_603\n      jumpi\n        /* \"#utility.yul\":19210:19219   */\n      dup5\n        /* \"#utility.yul\":19205:19208   */\n      dup10\n        /* \"#utility.yul\":19201:19220   */\n      add\n        /* \"#utility.yul\":19195:19221   */\n      mload\n        /* \"#utility.yul\":19253:19301   */\n      tag_604\n        /* \"#utility.yul\":19295:19299   */\n      0x1f\n        /* \"#utility.yul\":19287:19293   */\n      dup10\n        /* \"#utility.yul\":19283:19300   */\n      and\n        /* \"#utility.yul\":19272:19281   */\n      dup3\n        /* \"#utility.yul\":19253:19301   */\n      tag_375\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":19245:19251   */\n      dup4\n        /* \"#utility.yul\":19238:19302   */\n      sstore\n        /* \"#utility.yul\":19160:19316   */\n      pop\n        /* \"#utility.yul\":19137:19316   */\n    tag_603:\n        /* \"#utility.yul\":19362:19363   */\n      0x01\n        /* \"#utility.yul\":19358:19359   */\n      0x02\n        /* \"#utility.yul\":19350:19356   */\n      dup9\n        /* \"#utility.yul\":19346:19360   */\n      mul\n        /* \"#utility.yul\":19342:19364   */\n      add\n        /* \"#utility.yul\":19336:19340   */\n      dup9\n        /* \"#utility.yul\":19329:19365   */\n      sstore\n        /* \"#utility.yul\":18764:19375   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":18727:19614   */\n    tag_595:\n      pop\n        /* \"#utility.yul\":18317:19620   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":18225:19620   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19626:20714   */\n    tag_162:\n        /* \"#utility.yul\":19935:19939   */\n      0x00\n        /* \"#utility.yul\":19973:19976   */\n      0x0100\n        /* \"#utility.yul\":19962:19971   */\n      dup3\n        /* \"#utility.yul\":19958:19977   */\n      add\n        /* \"#utility.yul\":19950:19977   */\n      swap1\n      pop\n        /* \"#utility.yul\":19987:20058   */\n      tag_606\n        /* \"#utility.yul\":20055:20056   */\n      0x00\n        /* \"#utility.yul\":20044:20053   */\n      dup4\n        /* \"#utility.yul\":20040:20057   */\n      add\n        /* \"#utility.yul\":20031:20037   */\n      dup12\n        /* \"#utility.yul\":19987:20058   */\n      tag_341\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":20068:20140   */\n      tag_607\n        /* \"#utility.yul\":20136:20138   */\n      0x20\n        /* \"#utility.yul\":20125:20134   */\n      dup4\n        /* \"#utility.yul\":20121:20139   */\n      add\n        /* \"#utility.yul\":20112:20118   */\n      dup11\n        /* \"#utility.yul\":20068:20140   */\n      tag_353\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":20150:20222   */\n      tag_608\n        /* \"#utility.yul\":20218:20220   */\n      0x40\n        /* \"#utility.yul\":20207:20216   */\n      dup4\n        /* \"#utility.yul\":20203:20221   */\n      add\n        /* \"#utility.yul\":20194:20200   */\n      dup10\n        /* \"#utility.yul\":20150:20222   */\n      tag_353\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":20232:20304   */\n      tag_609\n        /* \"#utility.yul\":20300:20302   */\n      0x60\n        /* \"#utility.yul\":20289:20298   */\n      dup4\n        /* \"#utility.yul\":20285:20303   */\n      add\n        /* \"#utility.yul\":20276:20282   */\n      dup9\n        /* \"#utility.yul\":20232:20304   */\n      tag_341\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":20314:20387   */\n      tag_610\n        /* \"#utility.yul\":20382:20385   */\n      0x80\n        /* \"#utility.yul\":20371:20380   */\n      dup4\n        /* \"#utility.yul\":20367:20386   */\n      add\n        /* \"#utility.yul\":20358:20364   */\n      dup8\n        /* \"#utility.yul\":20314:20387   */\n      tag_341\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":20397:20470   */\n      tag_611\n        /* \"#utility.yul\":20465:20468   */\n      0xa0\n        /* \"#utility.yul\":20454:20463   */\n      dup4\n        /* \"#utility.yul\":20450:20469   */\n      add\n        /* \"#utility.yul\":20441:20447   */\n      dup7\n        /* \"#utility.yul\":20397:20470   */\n      tag_341\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":20480:20553   */\n      tag_612\n        /* \"#utility.yul\":20548:20551   */\n      0xc0\n        /* \"#utility.yul\":20537:20546   */\n      dup4\n        /* \"#utility.yul\":20533:20552   */\n      add\n        /* \"#utility.yul\":20524:20530   */\n      dup6\n        /* \"#utility.yul\":20480:20553   */\n      tag_341\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":20601:20610   */\n      dup2\n        /* \"#utility.yul\":20595:20599   */\n      dup2\n        /* \"#utility.yul\":20591:20611   */\n      sub\n        /* \"#utility.yul\":20585:20588   */\n      0xe0\n        /* \"#utility.yul\":20574:20583   */\n      dup4\n        /* \"#utility.yul\":20570:20589   */\n      add\n        /* \"#utility.yul\":20563:20612   */\n      mstore\n        /* \"#utility.yul\":20629:20707   */\n      tag_613\n        /* \"#utility.yul\":20702:20706   */\n      dup2\n        /* \"#utility.yul\":20693:20699   */\n      dup5\n        /* \"#utility.yul\":20629:20707   */\n      tag_328\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":20621:20707   */\n      swap1\n      pop\n        /* \"#utility.yul\":19626:20714   */\n      swap10\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20720:20944   */\n    tag_377:\n        /* \"#utility.yul\":20860:20894   */\n      0x4c6f616e206973207374696c6c2077697468696e2072657061796d656e742070\n        /* \"#utility.yul\":20856:20857   */\n      0x00\n        /* \"#utility.yul\":20848:20854   */\n      dup3\n        /* \"#utility.yul\":20844:20858   */\n      add\n        /* \"#utility.yul\":20837:20895   */\n      mstore\n        /* \"#utility.yul\":20929:20936   */\n      0x6572696f64000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20924:20926   */\n      0x20\n        /* \"#utility.yul\":20916:20922   */\n      dup3\n        /* \"#utility.yul\":20912:20927   */\n      add\n        /* \"#utility.yul\":20905:20937   */\n      mstore\n        /* \"#utility.yul\":20720:20944   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20950:21316   */\n    tag_378:\n        /* \"#utility.yul\":21092:21095   */\n      0x00\n        /* \"#utility.yul\":21113:21180   */\n      tag_616\n        /* \"#utility.yul\":21177:21179   */\n      0x25\n        /* \"#utility.yul\":21172:21175   */\n      dup4\n        /* \"#utility.yul\":21113:21180   */\n      tag_325\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":21106:21180   */\n      swap2\n      pop\n        /* \"#utility.yul\":21189:21282   */\n      tag_617\n        /* \"#utility.yul\":21278:21281   */\n      dup3\n        /* \"#utility.yul\":21189:21282   */\n      tag_377\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":21307:21309   */\n      0x40\n        /* \"#utility.yul\":21302:21305   */\n      dup3\n        /* \"#utility.yul\":21298:21310   */\n      add\n        /* \"#utility.yul\":21291:21310   */\n      swap1\n      pop\n        /* \"#utility.yul\":20950:21316   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21322:21741   */\n    tag_183:\n        /* \"#utility.yul\":21488:21492   */\n      0x00\n        /* \"#utility.yul\":21526:21528   */\n      0x20\n        /* \"#utility.yul\":21515:21524   */\n      dup3\n        /* \"#utility.yul\":21511:21529   */\n      add\n        /* \"#utility.yul\":21503:21529   */\n      swap1\n      pop\n        /* \"#utility.yul\":21575:21584   */\n      dup2\n        /* \"#utility.yul\":21569:21573   */\n      dup2\n        /* \"#utility.yul\":21565:21585   */\n      sub\n        /* \"#utility.yul\":21561:21562   */\n      0x00\n        /* \"#utility.yul\":21550:21559   */\n      dup4\n        /* \"#utility.yul\":21546:21563   */\n      add\n        /* \"#utility.yul\":21539:21586   */\n      mstore\n        /* \"#utility.yul\":21603:21734   */\n      tag_619\n        /* \"#utility.yul\":21729:21733   */\n      dup2\n        /* \"#utility.yul\":21603:21734   */\n      tag_378\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":21595:21734   */\n      swap1\n      pop\n        /* \"#utility.yul\":21322:21741   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21747:21916   */\n    tag_379:\n        /* \"#utility.yul\":21887:21908   */\n      0x4c6f616e20616c72656164792072657061696400000000000000000000000000\n        /* \"#utility.yul\":21883:21884   */\n      0x00\n        /* \"#utility.yul\":21875:21881   */\n      dup3\n        /* \"#utility.yul\":21871:21885   */\n      add\n        /* \"#utility.yul\":21864:21909   */\n      mstore\n        /* \"#utility.yul\":21747:21916   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21922:22288   */\n    tag_380:\n        /* \"#utility.yul\":22064:22067   */\n      0x00\n        /* \"#utility.yul\":22085:22152   */\n      tag_622\n        /* \"#utility.yul\":22149:22151   */\n      0x13\n        /* \"#utility.yul\":22144:22147   */\n      dup4\n        /* \"#utility.yul\":22085:22152   */\n      tag_325\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":22078:22152   */\n      swap2\n      pop\n        /* \"#utility.yul\":22161:22254   */\n      tag_623\n        /* \"#utility.yul\":22250:22253   */\n      dup3\n        /* \"#utility.yul\":22161:22254   */\n      tag_379\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":22279:22281   */\n      0x20\n        /* \"#utility.yul\":22274:22277   */\n      dup3\n        /* \"#utility.yul\":22270:22282   */\n      add\n        /* \"#utility.yul\":22263:22282   */\n      swap1\n      pop\n        /* \"#utility.yul\":21922:22288   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22294:22713   */\n    tag_186:\n        /* \"#utility.yul\":22460:22464   */\n      0x00\n        /* \"#utility.yul\":22498:22500   */\n      0x20\n        /* \"#utility.yul\":22487:22496   */\n      dup3\n        /* \"#utility.yul\":22483:22501   */\n      add\n        /* \"#utility.yul\":22475:22501   */\n      swap1\n      pop\n        /* \"#utility.yul\":22547:22556   */\n      dup2\n        /* \"#utility.yul\":22541:22545   */\n      dup2\n        /* \"#utility.yul\":22537:22557   */\n      sub\n        /* \"#utility.yul\":22533:22534   */\n      0x00\n        /* \"#utility.yul\":22522:22531   */\n      dup4\n        /* \"#utility.yul\":22518:22535   */\n      add\n        /* \"#utility.yul\":22511:22558   */\n      mstore\n        /* \"#utility.yul\":22575:22706   */\n      tag_625\n        /* \"#utility.yul\":22701:22705   */\n      dup2\n        /* \"#utility.yul\":22575:22706   */\n      tag_380\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":22567:22706   */\n      swap1\n      pop\n        /* \"#utility.yul\":22294:22713   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22719:22913   */\n    tag_199:\n        /* \"#utility.yul\":22759:22763   */\n      0x00\n        /* \"#utility.yul\":22779:22799   */\n      tag_627\n        /* \"#utility.yul\":22797:22798   */\n      dup3\n        /* \"#utility.yul\":22779:22799   */\n      tag_336\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":22774:22799   */\n      swap2\n      pop\n        /* \"#utility.yul\":22813:22833   */\n      tag_628\n        /* \"#utility.yul\":22831:22832   */\n      dup4\n        /* \"#utility.yul\":22813:22833   */\n      tag_336\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":22808:22833   */\n      swap3\n      pop\n        /* \"#utility.yul\":22857:22858   */\n      dup3\n        /* \"#utility.yul\":22854:22855   */\n      dup3\n        /* \"#utility.yul\":22850:22859   */\n      sub\n        /* \"#utility.yul\":22842:22859   */\n      swap1\n      pop\n        /* \"#utility.yul\":22881:22882   */\n      dup2\n        /* \"#utility.yul\":22875:22879   */\n      dup2\n        /* \"#utility.yul\":22872:22883   */\n      gt\n        /* \"#utility.yul\":22869:22906   */\n      iszero\n      tag_629\n      jumpi\n        /* \"#utility.yul\":22886:22904   */\n      tag_630\n      tag_361\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":22869:22906   */\n    tag_629:\n        /* \"#utility.yul\":22719:22913   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22919:23092   */\n    tag_381:\n        /* \"#utility.yul\":23059:23084   */\n      0x4f6e6c7920626f72726f7765722063616e207265706179000000000000000000\n        /* \"#utility.yul\":23055:23056   */\n      0x00\n        /* \"#utility.yul\":23047:23053   */\n      dup3\n        /* \"#utility.yul\":23043:23057   */\n      add\n        /* \"#utility.yul\":23036:23085   */\n      mstore\n        /* \"#utility.yul\":22919:23092   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23098:23464   */\n    tag_382:\n        /* \"#utility.yul\":23240:23243   */\n      0x00\n        /* \"#utility.yul\":23261:23328   */\n      tag_633\n        /* \"#utility.yul\":23325:23327   */\n      0x17\n        /* \"#utility.yul\":23320:23323   */\n      dup4\n        /* \"#utility.yul\":23261:23328   */\n      tag_325\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":23254:23328   */\n      swap2\n      pop\n        /* \"#utility.yul\":23337:23430   */\n      tag_634\n        /* \"#utility.yul\":23426:23429   */\n      dup3\n        /* \"#utility.yul\":23337:23430   */\n      tag_381\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":23455:23457   */\n      0x20\n        /* \"#utility.yul\":23450:23453   */\n      dup3\n        /* \"#utility.yul\":23446:23458   */\n      add\n        /* \"#utility.yul\":23439:23458   */\n      swap1\n      pop\n        /* \"#utility.yul\":23098:23464   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23470:23889   */\n    tag_206:\n        /* \"#utility.yul\":23636:23640   */\n      0x00\n        /* \"#utility.yul\":23674:23676   */\n      0x20\n        /* \"#utility.yul\":23663:23672   */\n      dup3\n        /* \"#utility.yul\":23659:23677   */\n      add\n        /* \"#utility.yul\":23651:23677   */\n      swap1\n      pop\n        /* \"#utility.yul\":23723:23732   */\n      dup2\n        /* \"#utility.yul\":23717:23721   */\n      dup2\n        /* \"#utility.yul\":23713:23733   */\n      sub\n        /* \"#utility.yul\":23709:23710   */\n      0x00\n        /* \"#utility.yul\":23698:23707   */\n      dup4\n        /* \"#utility.yul\":23694:23711   */\n      add\n        /* \"#utility.yul\":23687:23734   */\n      mstore\n        /* \"#utility.yul\":23751:23882   */\n      tag_636\n        /* \"#utility.yul\":23877:23881   */\n      dup2\n        /* \"#utility.yul\":23751:23882   */\n      tag_382\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":23743:23882   */\n      swap1\n      pop\n        /* \"#utility.yul\":23470:23889   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23895:24072   */\n    tag_383:\n        /* \"#utility.yul\":24035:24064   */\n      0x4c6f616e206d7573742062652061636365707465642066697273740000000000\n        /* \"#utility.yul\":24031:24032   */\n      0x00\n        /* \"#utility.yul\":24023:24029   */\n      dup3\n        /* \"#utility.yul\":24019:24033   */\n      add\n        /* \"#utility.yul\":24012:24065   */\n      mstore\n        /* \"#utility.yul\":23895:24072   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24078:24444   */\n    tag_384:\n        /* \"#utility.yul\":24220:24223   */\n      0x00\n        /* \"#utility.yul\":24241:24308   */\n      tag_639\n        /* \"#utility.yul\":24305:24307   */\n      0x1b\n        /* \"#utility.yul\":24300:24303   */\n      dup4\n        /* \"#utility.yul\":24241:24308   */\n      tag_325\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":24234:24308   */\n      swap2\n      pop\n        /* \"#utility.yul\":24317:24410   */\n      tag_640\n        /* \"#utility.yul\":24406:24409   */\n      dup3\n        /* \"#utility.yul\":24317:24410   */\n      tag_383\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":24435:24437   */\n      0x20\n        /* \"#utility.yul\":24430:24433   */\n      dup3\n        /* \"#utility.yul\":24426:24438   */\n      add\n        /* \"#utility.yul\":24419:24438   */\n      swap1\n      pop\n        /* \"#utility.yul\":24078:24444   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24450:24869   */\n    tag_209:\n        /* \"#utility.yul\":24616:24620   */\n      0x00\n        /* \"#utility.yul\":24654:24656   */\n      0x20\n        /* \"#utility.yul\":24643:24652   */\n      dup3\n        /* \"#utility.yul\":24639:24657   */\n      add\n        /* \"#utility.yul\":24631:24657   */\n      swap1\n      pop\n        /* \"#utility.yul\":24703:24712   */\n      dup2\n        /* \"#utility.yul\":24697:24701   */\n      dup2\n        /* \"#utility.yul\":24693:24713   */\n      sub\n        /* \"#utility.yul\":24689:24690   */\n      0x00\n        /* \"#utility.yul\":24678:24687   */\n      dup4\n        /* \"#utility.yul\":24674:24691   */\n      add\n        /* \"#utility.yul\":24667:24714   */\n      mstore\n        /* \"#utility.yul\":24731:24862   */\n      tag_642\n        /* \"#utility.yul\":24857:24861   */\n      dup2\n        /* \"#utility.yul\":24731:24862   */\n      tag_384\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":24723:24862   */\n      swap1\n      pop\n        /* \"#utility.yul\":24450:24869   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24875:25049   */\n    tag_385:\n        /* \"#utility.yul\":25015:25041   */\n      0x4f6e6c7920626f72726f7765722063616e206163636570740000000000000000\n        /* \"#utility.yul\":25011:25012   */\n      0x00\n        /* \"#utility.yul\":25003:25009   */\n      dup3\n        /* \"#utility.yul\":24999:25013   */\n      add\n        /* \"#utility.yul\":24992:25042   */\n      mstore\n        /* \"#utility.yul\":24875:25049   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25055:25421   */\n    tag_386:\n        /* \"#utility.yul\":25197:25200   */\n      0x00\n        /* \"#utility.yul\":25218:25285   */\n      tag_645\n        /* \"#utility.yul\":25282:25284   */\n      0x18\n        /* \"#utility.yul\":25277:25280   */\n      dup4\n        /* \"#utility.yul\":25218:25285   */\n      tag_325\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":25211:25285   */\n      swap2\n      pop\n        /* \"#utility.yul\":25294:25387   */\n      tag_646\n        /* \"#utility.yul\":25383:25386   */\n      dup3\n        /* \"#utility.yul\":25294:25387   */\n      tag_385\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":25412:25414   */\n      0x20\n        /* \"#utility.yul\":25407:25410   */\n      dup3\n        /* \"#utility.yul\":25403:25415   */\n      add\n        /* \"#utility.yul\":25396:25415   */\n      swap1\n      pop\n        /* \"#utility.yul\":25055:25421   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25427:25846   */\n    tag_220:\n        /* \"#utility.yul\":25593:25597   */\n      0x00\n        /* \"#utility.yul\":25631:25633   */\n      0x20\n        /* \"#utility.yul\":25620:25629   */\n      dup3\n        /* \"#utility.yul\":25616:25634   */\n      add\n        /* \"#utility.yul\":25608:25634   */\n      swap1\n      pop\n        /* \"#utility.yul\":25680:25689   */\n      dup2\n        /* \"#utility.yul\":25674:25678   */\n      dup2\n        /* \"#utility.yul\":25670:25690   */\n      sub\n        /* \"#utility.yul\":25666:25667   */\n      0x00\n        /* \"#utility.yul\":25655:25664   */\n      dup4\n        /* \"#utility.yul\":25651:25668   */\n      add\n        /* \"#utility.yul\":25644:25691   */\n      mstore\n        /* \"#utility.yul\":25708:25839   */\n      tag_648\n        /* \"#utility.yul\":25834:25838   */\n      dup2\n        /* \"#utility.yul\":25708:25839   */\n      tag_386\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":25700:25839   */\n      swap1\n      pop\n        /* \"#utility.yul\":25427:25846   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25852:26023   */\n    tag_387:\n        /* \"#utility.yul\":25992:26015   */\n      0x4c6f616e20616c72656164792061636365707465640000000000000000000000\n        /* \"#utility.yul\":25988:25989   */\n      0x00\n        /* \"#utility.yul\":25980:25986   */\n      dup3\n        /* \"#utility.yul\":25976:25990   */\n      add\n        /* \"#utility.yul\":25969:26016   */\n      mstore\n        /* \"#utility.yul\":25852:26023   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26029:26395   */\n    tag_388:\n        /* \"#utility.yul\":26171:26174   */\n      0x00\n        /* \"#utility.yul\":26192:26259   */\n      tag_651\n        /* \"#utility.yul\":26256:26258   */\n      0x15\n        /* \"#utility.yul\":26251:26254   */\n      dup4\n        /* \"#utility.yul\":26192:26259   */\n      tag_325\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":26185:26259   */\n      swap2\n      pop\n        /* \"#utility.yul\":26268:26361   */\n      tag_652\n        /* \"#utility.yul\":26357:26360   */\n      dup3\n        /* \"#utility.yul\":26268:26361   */\n      tag_387\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":26386:26388   */\n      0x20\n        /* \"#utility.yul\":26381:26384   */\n      dup3\n        /* \"#utility.yul\":26377:26389   */\n      add\n        /* \"#utility.yul\":26370:26389   */\n      swap1\n      pop\n        /* \"#utility.yul\":26029:26395   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26401:26820   */\n    tag_223:\n        /* \"#utility.yul\":26567:26571   */\n      0x00\n        /* \"#utility.yul\":26605:26607   */\n      0x20\n        /* \"#utility.yul\":26594:26603   */\n      dup3\n        /* \"#utility.yul\":26590:26608   */\n      add\n        /* \"#utility.yul\":26582:26608   */\n      swap1\n      pop\n        /* \"#utility.yul\":26654:26663   */\n      dup2\n        /* \"#utility.yul\":26648:26652   */\n      dup2\n        /* \"#utility.yul\":26644:26664   */\n      sub\n        /* \"#utility.yul\":26640:26641   */\n      0x00\n        /* \"#utility.yul\":26629:26638   */\n      dup4\n        /* \"#utility.yul\":26625:26642   */\n      add\n        /* \"#utility.yul\":26618:26665   */\n      mstore\n        /* \"#utility.yul\":26682:26813   */\n      tag_654\n        /* \"#utility.yul\":26808:26812   */\n      dup2\n        /* \"#utility.yul\":26682:26813   */\n      tag_388\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":26674:26813   */\n      swap1\n      pop\n        /* \"#utility.yul\":26401:26820   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26826:26998   */\n    tag_389:\n        /* \"#utility.yul\":26966:26990   */\n      0x4f6e6c79206c656e6465722063616e2063616e63656c00000000000000000000\n        /* \"#utility.yul\":26962:26963   */\n      0x00\n        /* \"#utility.yul\":26954:26960   */\n      dup3\n        /* \"#utility.yul\":26950:26964   */\n      add\n        /* \"#utility.yul\":26943:26991   */\n      mstore\n        /* \"#utility.yul\":26826:26998   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27004:27370   */\n    tag_390:\n        /* \"#utility.yul\":27146:27149   */\n      0x00\n        /* \"#utility.yul\":27167:27234   */\n      tag_657\n        /* \"#utility.yul\":27231:27233   */\n      0x16\n        /* \"#utility.yul\":27226:27229   */\n      dup4\n        /* \"#utility.yul\":27167:27234   */\n      tag_325\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":27160:27234   */\n      swap2\n      pop\n        /* \"#utility.yul\":27243:27336   */\n      tag_658\n        /* \"#utility.yul\":27332:27335   */\n      dup3\n        /* \"#utility.yul\":27243:27336   */\n      tag_389\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":27361:27363   */\n      0x20\n        /* \"#utility.yul\":27356:27359   */\n      dup3\n        /* \"#utility.yul\":27352:27364   */\n      add\n        /* \"#utility.yul\":27345:27364   */\n      swap1\n      pop\n        /* \"#utility.yul\":27004:27370   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27376:27795   */\n    tag_230:\n        /* \"#utility.yul\":27542:27546   */\n      0x00\n        /* \"#utility.yul\":27580:27582   */\n      0x20\n        /* \"#utility.yul\":27569:27578   */\n      dup3\n        /* \"#utility.yul\":27565:27583   */\n      add\n        /* \"#utility.yul\":27557:27583   */\n      swap1\n      pop\n        /* \"#utility.yul\":27629:27638   */\n      dup2\n        /* \"#utility.yul\":27623:27627   */\n      dup2\n        /* \"#utility.yul\":27619:27639   */\n      sub\n        /* \"#utility.yul\":27615:27616   */\n      0x00\n        /* \"#utility.yul\":27604:27613   */\n      dup4\n        /* \"#utility.yul\":27600:27617   */\n      add\n        /* \"#utility.yul\":27593:27640   */\n      mstore\n        /* \"#utility.yul\":27657:27788   */\n      tag_660\n        /* \"#utility.yul\":27783:27787   */\n      dup2\n        /* \"#utility.yul\":27657:27788   */\n      tag_390\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":27649:27788   */\n      swap1\n      pop\n        /* \"#utility.yul\":27376:27795   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27801:27973   */\n    tag_391:\n        /* \"#utility.yul\":27941:27965   */\n      0x4c6f616e20616c72656164792063616e63656c6c656400000000000000000000\n        /* \"#utility.yul\":27937:27938   */\n      0x00\n        /* \"#utility.yul\":27929:27935   */\n      dup3\n        /* \"#utility.yul\":27925:27939   */\n      add\n        /* \"#utility.yul\":27918:27966   */\n      mstore\n        /* \"#utility.yul\":27801:27973   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27979:28345   */\n    tag_392:\n        /* \"#utility.yul\":28121:28124   */\n      0x00\n        /* \"#utility.yul\":28142:28209   */\n      tag_663\n        /* \"#utility.yul\":28206:28208   */\n      0x16\n        /* \"#utility.yul\":28201:28204   */\n      dup4\n        /* \"#utility.yul\":28142:28209   */\n      tag_325\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":28135:28209   */\n      swap2\n      pop\n        /* \"#utility.yul\":28218:28311   */\n      tag_664\n        /* \"#utility.yul\":28307:28310   */\n      dup3\n        /* \"#utility.yul\":28218:28311   */\n      tag_391\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":28336:28338   */\n      0x20\n        /* \"#utility.yul\":28331:28334   */\n      dup3\n        /* \"#utility.yul\":28327:28339   */\n      add\n        /* \"#utility.yul\":28320:28339   */\n      swap1\n      pop\n        /* \"#utility.yul\":27979:28345   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28351:28770   */\n    tag_233:\n        /* \"#utility.yul\":28517:28521   */\n      0x00\n        /* \"#utility.yul\":28555:28557   */\n      0x20\n        /* \"#utility.yul\":28544:28553   */\n      dup3\n        /* \"#utility.yul\":28540:28558   */\n      add\n        /* \"#utility.yul\":28532:28558   */\n      swap1\n      pop\n        /* \"#utility.yul\":28604:28613   */\n      dup2\n        /* \"#utility.yul\":28598:28602   */\n      dup2\n        /* \"#utility.yul\":28594:28614   */\n      sub\n        /* \"#utility.yul\":28590:28591   */\n      0x00\n        /* \"#utility.yul\":28579:28588   */\n      dup4\n        /* \"#utility.yul\":28575:28592   */\n      add\n        /* \"#utility.yul\":28568:28615   */\n      mstore\n        /* \"#utility.yul\":28632:28763   */\n      tag_666\n        /* \"#utility.yul\":28758:28762   */\n      dup2\n        /* \"#utility.yul\":28632:28763   */\n      tag_392\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":28624:28763   */\n      swap1\n      pop\n        /* \"#utility.yul\":28351:28770   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28776:28956   */\n    tag_393:\n        /* \"#utility.yul\":28916:28948   */\n      0x43616e6e6f742063616e63656c20616e206163636570746564206c6f616e0000\n        /* \"#utility.yul\":28912:28913   */\n      0x00\n        /* \"#utility.yul\":28904:28910   */\n      dup3\n        /* \"#utility.yul\":28900:28914   */\n      add\n        /* \"#utility.yul\":28893:28949   */\n      mstore\n        /* \"#utility.yul\":28776:28956   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28962:29328   */\n    tag_394:\n        /* \"#utility.yul\":29104:29107   */\n      0x00\n        /* \"#utility.yul\":29125:29192   */\n      tag_669\n        /* \"#utility.yul\":29189:29191   */\n      0x1e\n        /* \"#utility.yul\":29184:29187   */\n      dup4\n        /* \"#utility.yul\":29125:29192   */\n      tag_325\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":29118:29192   */\n      swap2\n      pop\n        /* \"#utility.yul\":29201:29294   */\n      tag_670\n        /* \"#utility.yul\":29290:29293   */\n      dup3\n        /* \"#utility.yul\":29201:29294   */\n      tag_393\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":29319:29321   */\n      0x20\n        /* \"#utility.yul\":29314:29317   */\n      dup3\n        /* \"#utility.yul\":29310:29322   */\n      add\n        /* \"#utility.yul\":29303:29322   */\n      swap1\n      pop\n        /* \"#utility.yul\":28962:29328   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29334:29753   */\n    tag_236:\n        /* \"#utility.yul\":29500:29504   */\n      0x00\n        /* \"#utility.yul\":29538:29540   */\n      0x20\n        /* \"#utility.yul\":29527:29536   */\n      dup3\n        /* \"#utility.yul\":29523:29541   */\n      add\n        /* \"#utility.yul\":29515:29541   */\n      swap1\n      pop\n        /* \"#utility.yul\":29587:29596   */\n      dup2\n        /* \"#utility.yul\":29581:29585   */\n      dup2\n        /* \"#utility.yul\":29577:29597   */\n      sub\n        /* \"#utility.yul\":29573:29574   */\n      0x00\n        /* \"#utility.yul\":29562:29571   */\n      dup4\n        /* \"#utility.yul\":29558:29575   */\n      add\n        /* \"#utility.yul\":29551:29598   */\n      mstore\n        /* \"#utility.yul\":29615:29746   */\n      tag_672\n        /* \"#utility.yul\":29741:29745   */\n      dup2\n        /* \"#utility.yul\":29615:29746   */\n      tag_394\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":29607:29746   */\n      swap1\n      pop\n        /* \"#utility.yul\":29334:29753   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29759:30201   */\n    tag_268:\n        /* \"#utility.yul\":29908:29912   */\n      0x00\n        /* \"#utility.yul\":29946:29948   */\n      0x60\n        /* \"#utility.yul\":29935:29944   */\n      dup3\n        /* \"#utility.yul\":29931:29949   */\n      add\n        /* \"#utility.yul\":29923:29949   */\n      swap1\n      pop\n        /* \"#utility.yul\":29959:30030   */\n      tag_674\n        /* \"#utility.yul\":30027:30028   */\n      0x00\n        /* \"#utility.yul\":30016:30025   */\n      dup4\n        /* \"#utility.yul\":30012:30029   */\n      add\n        /* \"#utility.yul\":30003:30009   */\n      dup7\n        /* \"#utility.yul\":29959:30030   */\n      tag_353\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":30040:30112   */\n      tag_675\n        /* \"#utility.yul\":30108:30110   */\n      0x20\n        /* \"#utility.yul\":30097:30106   */\n      dup4\n        /* \"#utility.yul\":30093:30111   */\n      add\n        /* \"#utility.yul\":30084:30090   */\n      dup6\n        /* \"#utility.yul\":30040:30112   */\n      tag_341\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":30122:30194   */\n      tag_676\n        /* \"#utility.yul\":30190:30192   */\n      0x40\n        /* \"#utility.yul\":30179:30188   */\n      dup4\n        /* \"#utility.yul\":30175:30193   */\n      add\n        /* \"#utility.yul\":30166:30172   */\n      dup5\n        /* \"#utility.yul\":30122:30194   */\n      tag_341\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":29759:30201   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30207:30649   */\n    tag_303:\n        /* \"#utility.yul\":30356:30360   */\n      0x00\n        /* \"#utility.yul\":30394:30396   */\n      0x60\n        /* \"#utility.yul\":30383:30392   */\n      dup3\n        /* \"#utility.yul\":30379:30397   */\n      add\n        /* \"#utility.yul\":30371:30397   */\n      swap1\n      pop\n        /* \"#utility.yul\":30407:30478   */\n      tag_678\n        /* \"#utility.yul\":30475:30476   */\n      0x00\n        /* \"#utility.yul\":30464:30473   */\n      dup4\n        /* \"#utility.yul\":30460:30477   */\n      add\n        /* \"#utility.yul\":30451:30457   */\n      dup7\n        /* \"#utility.yul\":30407:30478   */\n      tag_353\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":30488:30560   */\n      tag_679\n        /* \"#utility.yul\":30556:30558   */\n      0x20\n        /* \"#utility.yul\":30545:30554   */\n      dup4\n        /* \"#utility.yul\":30541:30559   */\n      add\n        /* \"#utility.yul\":30532:30538   */\n      dup6\n        /* \"#utility.yul\":30488:30560   */\n      tag_353\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":30570:30642   */\n      tag_680\n        /* \"#utility.yul\":30638:30640   */\n      0x40\n        /* \"#utility.yul\":30627:30636   */\n      dup4\n        /* \"#utility.yul\":30623:30641   */\n      add\n        /* \"#utility.yul\":30614:30620   */\n      dup5\n        /* \"#utility.yul\":30570:30642   */\n      tag_341\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":30207:30649   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30655:30987   */\n    tag_317:\n        /* \"#utility.yul\":30776:30780   */\n      0x00\n        /* \"#utility.yul\":30814:30816   */\n      0x40\n        /* \"#utility.yul\":30803:30812   */\n      dup3\n        /* \"#utility.yul\":30799:30817   */\n      add\n        /* \"#utility.yul\":30791:30817   */\n      swap1\n      pop\n        /* \"#utility.yul\":30827:30898   */\n      tag_682\n        /* \"#utility.yul\":30895:30896   */\n      0x00\n        /* \"#utility.yul\":30884:30893   */\n      dup4\n        /* \"#utility.yul\":30880:30897   */\n      add\n        /* \"#utility.yul\":30871:30877   */\n      dup6\n        /* \"#utility.yul\":30827:30898   */\n      tag_353\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":30908:30980   */\n      tag_683\n        /* \"#utility.yul\":30976:30978   */\n      0x20\n        /* \"#utility.yul\":30965:30974   */\n      dup4\n        /* \"#utility.yul\":30961:30979   */\n      add\n        /* \"#utility.yul\":30952:30958   */\n      dup5\n        /* \"#utility.yul\":30908:30980   */\n      tag_341\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":30655:30987   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e2f6cfef6bd258567900ab53aa842db56cefe0976b991d7f62bb424f4e82fedd64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1561": {
									"entryPoint": null,
									"id": 1561,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_426": {
									"entryPoint": null,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_729": {
									"entryPoint": 522,
									"id": 729,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 327,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_696": {
									"entryPoint": 655,
									"id": 696,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2168,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1625,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2000,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2057,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1247,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1202,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1517,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1385,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1526,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1563,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7000:12",
										"nodeType": "YulBlock",
										"src": "0:7000:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:12",
													"nodeType": "YulBlock",
													"src": "66:40:12",
													"statements": [
														{
															"nativeSrc": "77:22:12",
															"nodeType": "YulAssignment",
															"src": "77:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:12"
																},
																"nativeSrc": "87:12:12",
																"nodeType": "YulFunctionCall",
																"src": "87:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:12",
														"nodeType": "YulTypedName",
														"src": "49:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:12",
														"nodeType": "YulTypedName",
														"src": "59:6:12",
														"type": ""
													}
												],
												"src": "7:99:12"
											},
											{
												"body": {
													"nativeSrc": "140:152:12",
													"nodeType": "YulBlock",
													"src": "140:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:12",
																		"nodeType": "YulLiteral",
																		"src": "157:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:12",
																		"nodeType": "YulLiteral",
																		"src": "160:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:12"
																},
																"nativeSrc": "150:88:12",
																"nodeType": "YulFunctionCall",
																"src": "150:88:12"
															},
															"nativeSrc": "150:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:12",
																		"nodeType": "YulLiteral",
																		"src": "254:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:12",
																		"nodeType": "YulLiteral",
																		"src": "257:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:12"
																},
																"nativeSrc": "247:15:12",
																"nodeType": "YulFunctionCall",
																"src": "247:15:12"
															},
															"nativeSrc": "247:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:12",
																		"nodeType": "YulLiteral",
																		"src": "278:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:12",
																		"nodeType": "YulLiteral",
																		"src": "281:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:12"
																},
																"nativeSrc": "271:15:12",
																"nodeType": "YulFunctionCall",
																"src": "271:15:12"
															},
															"nativeSrc": "271:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:12"
											},
											{
												"body": {
													"nativeSrc": "326:152:12",
													"nodeType": "YulBlock",
													"src": "326:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:12",
																		"nodeType": "YulLiteral",
																		"src": "343:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:12",
																		"nodeType": "YulLiteral",
																		"src": "346:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:12"
																},
																"nativeSrc": "336:88:12",
																"nodeType": "YulFunctionCall",
																"src": "336:88:12"
															},
															"nativeSrc": "336:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:12",
																		"nodeType": "YulLiteral",
																		"src": "440:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:12",
																		"nodeType": "YulLiteral",
																		"src": "443:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:12"
																},
																"nativeSrc": "433:15:12",
																"nodeType": "YulFunctionCall",
																"src": "433:15:12"
															},
															"nativeSrc": "433:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:12",
																		"nodeType": "YulLiteral",
																		"src": "464:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:12",
																		"nodeType": "YulLiteral",
																		"src": "467:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:12"
																},
																"nativeSrc": "457:15:12",
																"nodeType": "YulFunctionCall",
																"src": "457:15:12"
															},
															"nativeSrc": "457:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:12"
											},
											{
												"body": {
													"nativeSrc": "535:269:12",
													"nodeType": "YulBlock",
													"src": "535:269:12",
													"statements": [
														{
															"nativeSrc": "545:22:12",
															"nodeType": "YulAssignment",
															"src": "545:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:12",
																		"nodeType": "YulLiteral",
																		"src": "565:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:12"
																},
																"nativeSrc": "555:12:12",
																"nodeType": "YulFunctionCall",
																"src": "555:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:12"
																}
															]
														},
														{
															"nativeSrc": "576:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:12",
																		"nodeType": "YulLiteral",
																		"src": "612:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:12"
																},
																"nativeSrc": "602:12:12",
																"nodeType": "YulFunctionCall",
																"src": "602:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:12",
																	"nodeType": "YulTypedName",
																	"src": "580:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:12",
																"nodeType": "YulBlock",
																"src": "653:51:12",
																"statements": [
																	{
																		"nativeSrc": "667:27:12",
																		"nodeType": "YulAssignment",
																		"src": "667:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:12",
																					"nodeType": "YulLiteral",
																					"src": "689:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:12"
																			},
																			"nativeSrc": "677:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:12"
																},
																"nativeSrc": "626:26:12",
																"nodeType": "YulFunctionCall",
																"src": "626:26:12"
															},
															"nativeSrc": "623:81:12",
															"nodeType": "YulIf",
															"src": "623:81:12"
														},
														{
															"body": {
																"nativeSrc": "756:42:12",
																"nodeType": "YulBlock",
																"src": "756:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:12"
																			},
																			"nativeSrc": "770:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:12"
																		},
																		"nativeSrc": "770:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:12",
																				"nodeType": "YulLiteral",
																				"src": "751:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:12"
																		},
																		"nativeSrc": "740:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:12"
																},
																"nativeSrc": "717:38:12",
																"nodeType": "YulFunctionCall",
																"src": "717:38:12"
															},
															"nativeSrc": "714:84:12",
															"nodeType": "YulIf",
															"src": "714:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:12",
														"nodeType": "YulTypedName",
														"src": "519:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:12",
														"nodeType": "YulTypedName",
														"src": "528:6:12",
														"type": ""
													}
												],
												"src": "484:320:12"
											},
											{
												"body": {
													"nativeSrc": "864:87:12",
													"nodeType": "YulBlock",
													"src": "864:87:12",
													"statements": [
														{
															"nativeSrc": "874:11:12",
															"nodeType": "YulAssignment",
															"src": "874:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:12",
																"nodeType": "YulIdentifier",
																"src": "882:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:12",
																		"nodeType": "YulLiteral",
																		"src": "902:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:12"
																},
																"nativeSrc": "895:14:12",
																"nodeType": "YulFunctionCall",
																"src": "895:14:12"
															},
															"nativeSrc": "895:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:12"
														},
														{
															"nativeSrc": "918:26:12",
															"nodeType": "YulAssignment",
															"src": "918:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:12",
																		"nodeType": "YulLiteral",
																		"src": "936:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:12",
																		"nodeType": "YulLiteral",
																		"src": "939:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:12"
																},
																"nativeSrc": "926:18:12",
																"nodeType": "YulFunctionCall",
																"src": "926:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:12",
														"nodeType": "YulTypedName",
														"src": "851:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:12",
														"nodeType": "YulTypedName",
														"src": "859:4:12",
														"type": ""
													}
												],
												"src": "810:141:12"
											},
											{
												"body": {
													"nativeSrc": "1001:49:12",
													"nodeType": "YulBlock",
													"src": "1001:49:12",
													"statements": [
														{
															"nativeSrc": "1011:33:12",
															"nodeType": "YulAssignment",
															"src": "1011:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:12"
																		},
																		"nativeSrc": "1025:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:12"
																},
																"nativeSrc": "1021:23:12",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:12",
														"nodeType": "YulTypedName",
														"src": "984:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:12",
														"nodeType": "YulTypedName",
														"src": "994:6:12",
														"type": ""
													}
												],
												"src": "957:93:12"
											},
											{
												"body": {
													"nativeSrc": "1109:54:12",
													"nodeType": "YulBlock",
													"src": "1109:54:12",
													"statements": [
														{
															"nativeSrc": "1119:37:12",
															"nodeType": "YulAssignment",
															"src": "1119:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:12"
																},
																"nativeSrc": "1140:16:12",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:12",
														"nodeType": "YulTypedName",
														"src": "1084:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:12",
														"nodeType": "YulTypedName",
														"src": "1090:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:12",
														"nodeType": "YulTypedName",
														"src": "1100:8:12",
														"type": ""
													}
												],
												"src": "1056:107:12"
											},
											{
												"body": {
													"nativeSrc": "1245:317:12",
													"nodeType": "YulBlock",
													"src": "1245:317:12",
													"statements": [
														{
															"nativeSrc": "1255:35:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:12"
																},
																"nativeSrc": "1272:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:12",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:12",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:12"
																},
																"nativeSrc": "1311:97:12",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:12",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:12",
															"nodeType": "YulAssignment",
															"src": "1417:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:12"
																},
																"nativeSrc": "1429:39:12",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:12"
																}
															]
														},
														{
															"nativeSrc": "1477:30:12",
															"nodeType": "YulAssignment",
															"src": "1477:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:12"
																		},
																		"nativeSrc": "1497:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:12"
																},
																"nativeSrc": "1486:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:12"
																}
															]
														},
														{
															"nativeSrc": "1516:40:12",
															"nodeType": "YulAssignment",
															"src": "1516:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:12"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:12"
																		},
																		"nativeSrc": "1536:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:12"
																},
																"nativeSrc": "1526:30:12",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:12",
														"nodeType": "YulTypedName",
														"src": "1206:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:12",
														"nodeType": "YulTypedName",
														"src": "1213:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:12",
														"nodeType": "YulTypedName",
														"src": "1225:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:12",
														"nodeType": "YulTypedName",
														"src": "1238:6:12",
														"type": ""
													}
												],
												"src": "1169:393:12"
											},
											{
												"body": {
													"nativeSrc": "1613:32:12",
													"nodeType": "YulBlock",
													"src": "1613:32:12",
													"statements": [
														{
															"nativeSrc": "1623:16:12",
															"nodeType": "YulAssignment",
															"src": "1623:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:12",
																"nodeType": "YulIdentifier",
																"src": "1634:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:12",
														"nodeType": "YulTypedName",
														"src": "1595:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:12",
														"nodeType": "YulTypedName",
														"src": "1605:7:12",
														"type": ""
													}
												],
												"src": "1568:77:12"
											},
											{
												"body": {
													"nativeSrc": "1683:28:12",
													"nodeType": "YulBlock",
													"src": "1683:28:12",
													"statements": [
														{
															"nativeSrc": "1693:12:12",
															"nodeType": "YulAssignment",
															"src": "1693:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:12",
																"nodeType": "YulIdentifier",
																"src": "1700:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:12",
														"nodeType": "YulTypedName",
														"src": "1669:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:12",
														"nodeType": "YulTypedName",
														"src": "1679:3:12",
														"type": ""
													}
												],
												"src": "1651:60:12"
											},
											{
												"body": {
													"nativeSrc": "1777:82:12",
													"nodeType": "YulBlock",
													"src": "1777:82:12",
													"statements": [
														{
															"nativeSrc": "1787:66:12",
															"nodeType": "YulAssignment",
															"src": "1787:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:12"
																				},
																				"nativeSrc": "1827:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:12"
																		},
																		"nativeSrc": "1818:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:12"
																},
																"nativeSrc": "1800:53:12",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:12",
														"nodeType": "YulTypedName",
														"src": "1757:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:12",
														"nodeType": "YulTypedName",
														"src": "1767:9:12",
														"type": ""
													}
												],
												"src": "1717:142:12"
											},
											{
												"body": {
													"nativeSrc": "1912:28:12",
													"nodeType": "YulBlock",
													"src": "1912:28:12",
													"statements": [
														{
															"nativeSrc": "1922:12:12",
															"nodeType": "YulAssignment",
															"src": "1922:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:12",
																"nodeType": "YulIdentifier",
																"src": "1929:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:12",
														"nodeType": "YulTypedName",
														"src": "1898:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:12",
														"nodeType": "YulTypedName",
														"src": "1908:3:12",
														"type": ""
													}
												],
												"src": "1865:75:12"
											},
											{
												"body": {
													"nativeSrc": "2022:193:12",
													"nodeType": "YulBlock",
													"src": "2022:193:12",
													"statements": [
														{
															"nativeSrc": "2032:63:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:12"
																},
																"nativeSrc": "2056:39:12",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:12",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:12"
																				},
																				"nativeSrc": "2145:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:12"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:12",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:12",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:12"
																				},
																				"nativeSrc": "2166:41:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:12",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:12"
																		},
																		"nativeSrc": "2117:91:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:12"
																},
																"nativeSrc": "2104:105:12",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:12"
															},
															"nativeSrc": "2104:105:12",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:12",
														"nodeType": "YulTypedName",
														"src": "1999:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:12",
														"nodeType": "YulTypedName",
														"src": "2005:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:12",
														"nodeType": "YulTypedName",
														"src": "2013:7:12",
														"type": ""
													}
												],
												"src": "1946:269:12"
											},
											{
												"body": {
													"nativeSrc": "2270:24:12",
													"nodeType": "YulBlock",
													"src": "2270:24:12",
													"statements": [
														{
															"nativeSrc": "2280:8:12",
															"nodeType": "YulAssignment",
															"src": "2280:8:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:12",
																"nodeType": "YulLiteral",
																"src": "2287:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:12",
														"nodeType": "YulTypedName",
														"src": "2266:3:12",
														"type": ""
													}
												],
												"src": "2221:73:12"
											},
											{
												"body": {
													"nativeSrc": "2353:136:12",
													"nodeType": "YulBlock",
													"src": "2353:136:12",
													"statements": [
														{
															"nativeSrc": "2363:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:12"
																},
																"nativeSrc": "2377:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:12"
																},
																"nativeSrc": "2418:65:12",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:12"
															},
															"nativeSrc": "2418:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:12",
														"nodeType": "YulTypedName",
														"src": "2339:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:12",
														"nodeType": "YulTypedName",
														"src": "2345:6:12",
														"type": ""
													}
												],
												"src": "2300:189:12"
											},
											{
												"body": {
													"nativeSrc": "2545:136:12",
													"nodeType": "YulBlock",
													"src": "2545:136:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:12",
																"nodeType": "YulBlock",
																"src": "2612:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:12",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:12"
																			},
																			"nativeSrc": "2626:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:12"
																		},
																		"nativeSrc": "2626:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:12"
																},
																"nativeSrc": "2562:14:12",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:12"
															},
															"nativeSrc": "2555:120:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:12",
																"nodeType": "YulBlock",
																"src": "2577:26:12",
																"statements": [
																	{
																		"nativeSrc": "2579:22:12",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:12"
																			},
																			"nativeSrc": "2588:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:12",
																"nodeType": "YulBlock",
																"src": "2559:2:12",
																"statements": []
															},
															"src": "2555:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:12",
														"nodeType": "YulTypedName",
														"src": "2533:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:12",
														"nodeType": "YulTypedName",
														"src": "2540:3:12",
														"type": ""
													}
												],
												"src": "2495:186:12"
											},
											{
												"body": {
													"nativeSrc": "2766:464:12",
													"nodeType": "YulBlock",
													"src": "2766:464:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:12",
																"nodeType": "YulBlock",
																"src": "2792:431:12",
																"statements": [
																	{
																		"nativeSrc": "2806:54:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:12",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:12"
																			},
																			"nativeSrc": "2822:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:12",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:12",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:12"
																					},
																					"nativeSrc": "2906:29:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:12"
																			},
																			"nativeSrc": "2892:44:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:12",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:12",
																			"nodeType": "YulBlock",
																			"src": "3093:27:12",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:12",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:12",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:12",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:12"
																			},
																			"nativeSrc": "3074:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:12"
																		},
																		"nativeSrc": "3071:49:12",
																		"nodeType": "YulIf",
																		"src": "3071:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:12",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:12",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:12"
																							},
																							"nativeSrc": "3189:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:12"
																					},
																					"nativeSrc": "3175:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:12",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:12"
																			},
																			"nativeSrc": "3133:80:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:12"
																		},
																		"nativeSrc": "3133:80:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:12"
																},
																"nativeSrc": "2780:11:12",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:12"
															},
															"nativeSrc": "2777:446:12",
															"nodeType": "YulIf",
															"src": "2777:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:12",
														"nodeType": "YulTypedName",
														"src": "2742:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:12",
														"nodeType": "YulTypedName",
														"src": "2749:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:12",
														"nodeType": "YulTypedName",
														"src": "2754:10:12",
														"type": ""
													}
												],
												"src": "2687:543:12"
											},
											{
												"body": {
													"nativeSrc": "3299:54:12",
													"nodeType": "YulBlock",
													"src": "3299:54:12",
													"statements": [
														{
															"nativeSrc": "3309:37:12",
															"nodeType": "YulAssignment",
															"src": "3309:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:12"
																},
																"nativeSrc": "3330:16:12",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:12",
														"nodeType": "YulTypedName",
														"src": "3274:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:12",
														"nodeType": "YulTypedName",
														"src": "3280:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:12",
														"nodeType": "YulTypedName",
														"src": "3290:8:12",
														"type": ""
													}
												],
												"src": "3236:117:12"
											},
											{
												"body": {
													"nativeSrc": "3410:118:12",
													"nodeType": "YulBlock",
													"src": "3410:118:12",
													"statements": [
														{
															"nativeSrc": "3420:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:12",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:12"
																				},
																				"nativeSrc": "3465:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:12",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:12"
																				},
																				"nativeSrc": "3480:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:12"
																		},
																		"nativeSrc": "3436:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:12"
																},
																"nativeSrc": "3432:56:12",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:12",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:12",
															"nodeType": "YulAssignment",
															"src": "3497:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:12"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:12"
																},
																"nativeSrc": "3507:15:12",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:12",
														"nodeType": "YulTypedName",
														"src": "3387:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:12",
														"nodeType": "YulTypedName",
														"src": "3393:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:12",
														"nodeType": "YulTypedName",
														"src": "3403:6:12",
														"type": ""
													}
												],
												"src": "3359:169:12"
											},
											{
												"body": {
													"nativeSrc": "3614:214:12",
													"nodeType": "YulBlock",
													"src": "3614:214:12",
													"statements": [
														{
															"nativeSrc": "3747:37:12",
															"nodeType": "YulAssignment",
															"src": "3747:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:12"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:12"
																},
																"nativeSrc": "3755:29:12",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:12"
																}
															]
														},
														{
															"nativeSrc": "3793:29:12",
															"nodeType": "YulAssignment",
															"src": "3793:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:12"
																		},
																		"nativeSrc": "3810:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:12"
																},
																"nativeSrc": "3801:21:12",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:12",
														"nodeType": "YulTypedName",
														"src": "3595:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:12",
														"nodeType": "YulTypedName",
														"src": "3601:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:12",
														"nodeType": "YulTypedName",
														"src": "3609:4:12",
														"type": ""
													}
												],
												"src": "3533:295:12"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:12",
													"nodeType": "YulBlock",
													"src": "3925:1303:12",
													"statements": [
														{
															"nativeSrc": "3936:51:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:12"
																},
																"nativeSrc": "3950:37:12",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:12",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:12",
																"nodeType": "YulBlock",
																"src": "4072:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:12"
																			},
																			"nativeSrc": "4074:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:12"
																		},
																		"nativeSrc": "4074:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:12",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:12"
																},
																"nativeSrc": "4041:30:12",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:12"
															},
															"nativeSrc": "4038:56:12",
															"nodeType": "YulIf",
															"src": "4038:56:12"
														},
														{
															"nativeSrc": "4104:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:12"
																		},
																		"nativeSrc": "4144:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:12"
																},
																"nativeSrc": "4118:38:12",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:12",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:12",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:12"
																},
																"nativeSrc": "4203:67:12",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:12"
															},
															"nativeSrc": "4203:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:12"
														},
														{
															"nativeSrc": "4280:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:12",
																"nodeType": "YulLiteral",
																"src": "4297:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:12",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:12",
															"nodeType": "YulAssignment",
															"src": "4308:17:12",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:12",
																"nodeType": "YulLiteral",
																"src": "4321:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:12",
																		"nodeType": "YulBlock",
																		"src": "4372:611:12",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:12",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:12"
																							},
																							"nativeSrc": "4413:9:12",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:12"
																					},
																					"nativeSrc": "4401:22:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:12",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:12",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:12"
																					},
																					"nativeSrc": "4451:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:12",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:12",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:12",
																					"nodeType": "YulBlock",
																					"src": "4569:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:12"
																												},
																												"nativeSrc": "4608:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:12"
																										},
																										"nativeSrc": "4602:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:12"
																								},
																								"nativeSrc": "4587:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:12"
																							},
																							"nativeSrc": "4587:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:12"
																						},
																						{
																							"nativeSrc": "4646:24:12",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:12",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:12"
																								},
																								"nativeSrc": "4656:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:12",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:12",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:12"
																								},
																								"nativeSrc": "4700:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:12"
																					},
																					"nativeSrc": "4532:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:12"
																				},
																				"nativeSrc": "4524:208:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:12",
																					"nodeType": "YulBlock",
																					"src": "4547:21:12",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:12",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:12",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:12"
																								},
																								"nativeSrc": "4554:12:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:12",
																					"nodeType": "YulBlock",
																					"src": "4528:3:12",
																					"statements": []
																				},
																				"src": "4524:208:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:12",
																					"nodeType": "YulBlock",
																					"src": "4768:156:12",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:12"
																										},
																										"nativeSrc": "4809:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:12"
																								},
																								"nativeSrc": "4803:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:12",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:12",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:12"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:12",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:12"
																												},
																												"nativeSrc": "4891:17:12",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:12",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:12"
																										},
																										"nativeSrc": "4861:48:12",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:12"
																								},
																								"nativeSrc": "4846:64:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:12"
																							},
																							"nativeSrc": "4846:64:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:12"
																					},
																					"nativeSrc": "4748:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:12"
																				},
																				"nativeSrc": "4745:179:12",
																				"nodeType": "YulIf",
																				"src": "4745:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:12",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:12"
																									},
																									"nativeSrc": "4954:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:12",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:12"
																							},
																							"nativeSrc": "4950:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:12"
																					},
																					"nativeSrc": "4937:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:12"
																				},
																				"nativeSrc": "4937:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:12"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:12",
																	"nodeType": "YulCase",
																	"src": "4365:618:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:12",
																		"nodeType": "YulBlock",
																		"src": "5000:222:12",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:12",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:12",
																					"nodeType": "YulBlock",
																					"src": "5051:67:12",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:12",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:12"
																										},
																										"nativeSrc": "5084:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:12"
																								},
																								"nativeSrc": "5078:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:12"
																				},
																				"nativeSrc": "5041:77:12",
																				"nodeType": "YulIf",
																				"src": "5041:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:12"
																							},
																							"nativeSrc": "5144:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:12"
																					},
																					"nativeSrc": "5131:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:12"
																				},
																				"nativeSrc": "5131:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:12"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:12",
																	"nodeType": "YulCase",
																	"src": "4992:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:12"
																},
																"nativeSrc": "4342:14:12",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:12"
															},
															"nativeSrc": "4335:887:12",
															"nodeType": "YulSwitch",
															"src": "4335:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:12",
														"nodeType": "YulTypedName",
														"src": "3914:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:12",
														"nodeType": "YulTypedName",
														"src": "3920:3:12",
														"type": ""
													}
												],
												"src": "3833:1395:12"
											},
											{
												"body": {
													"nativeSrc": "5279:81:12",
													"nodeType": "YulBlock",
													"src": "5279:81:12",
													"statements": [
														{
															"nativeSrc": "5289:65:12",
															"nodeType": "YulAssignment",
															"src": "5289:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5304:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5304:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5311:42:12",
																		"nodeType": "YulLiteral",
																		"src": "5311:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5300:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:12"
																},
																"nativeSrc": "5300:54:12",
																"nodeType": "YulFunctionCall",
																"src": "5300:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5289:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5234:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5261:5:12",
														"nodeType": "YulTypedName",
														"src": "5261:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5271:7:12",
														"nodeType": "YulTypedName",
														"src": "5271:7:12",
														"type": ""
													}
												],
												"src": "5234:126:12"
											},
											{
												"body": {
													"nativeSrc": "5411:51:12",
													"nodeType": "YulBlock",
													"src": "5411:51:12",
													"statements": [
														{
															"nativeSrc": "5421:35:12",
															"nodeType": "YulAssignment",
															"src": "5421:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5450:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5432:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "5432:17:12"
																},
																"nativeSrc": "5432:24:12",
																"nodeType": "YulFunctionCall",
																"src": "5432:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5421:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "5421:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5366:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5393:5:12",
														"nodeType": "YulTypedName",
														"src": "5393:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5403:7:12",
														"nodeType": "YulTypedName",
														"src": "5403:7:12",
														"type": ""
													}
												],
												"src": "5366:96:12"
											},
											{
												"body": {
													"nativeSrc": "5533:53:12",
													"nodeType": "YulBlock",
													"src": "5533:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5550:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5550:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5573:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5573:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5555:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "5555:17:12"
																		},
																		"nativeSrc": "5555:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5555:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5543:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:12"
																},
																"nativeSrc": "5543:37:12",
																"nodeType": "YulFunctionCall",
																"src": "5543:37:12"
															},
															"nativeSrc": "5543:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "5543:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5468:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5521:5:12",
														"nodeType": "YulTypedName",
														"src": "5521:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5528:3:12",
														"nodeType": "YulTypedName",
														"src": "5528:3:12",
														"type": ""
													}
												],
												"src": "5468:118:12"
											},
											{
												"body": {
													"nativeSrc": "5690:124:12",
													"nodeType": "YulBlock",
													"src": "5690:124:12",
													"statements": [
														{
															"nativeSrc": "5700:26:12",
															"nodeType": "YulAssignment",
															"src": "5700:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5712:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5723:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5708:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:12"
																},
																"nativeSrc": "5708:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5708:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5700:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5780:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5793:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5804:1:12",
																				"nodeType": "YulLiteral",
																				"src": "5804:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5789:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:12"
																		},
																		"nativeSrc": "5789:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5736:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:12"
																},
																"nativeSrc": "5736:71:12",
																"nodeType": "YulFunctionCall",
																"src": "5736:71:12"
															},
															"nativeSrc": "5736:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "5736:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5592:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5662:9:12",
														"nodeType": "YulTypedName",
														"src": "5662:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5674:6:12",
														"nodeType": "YulTypedName",
														"src": "5674:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5685:4:12",
														"nodeType": "YulTypedName",
														"src": "5685:4:12",
														"type": ""
													}
												],
												"src": "5592:222:12"
											},
											{
												"body": {
													"nativeSrc": "5848:152:12",
													"nodeType": "YulBlock",
													"src": "5848:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5865:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5865:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5868:77:12",
																		"nodeType": "YulLiteral",
																		"src": "5868:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5858:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5858:6:12"
																},
																"nativeSrc": "5858:88:12",
																"nodeType": "YulFunctionCall",
																"src": "5858:88:12"
															},
															"nativeSrc": "5858:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "5858:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5962:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5962:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5965:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5965:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5955:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5955:6:12"
																},
																"nativeSrc": "5955:15:12",
																"nodeType": "YulFunctionCall",
																"src": "5955:15:12"
															},
															"nativeSrc": "5955:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "5955:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5986:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5986:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5989:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5989:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5979:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5979:6:12"
																},
																"nativeSrc": "5979:15:12",
																"nodeType": "YulFunctionCall",
																"src": "5979:15:12"
															},
															"nativeSrc": "5979:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "5979:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5820:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "5820:180:12"
											},
											{
												"body": {
													"nativeSrc": "6050:147:12",
													"nodeType": "YulBlock",
													"src": "6050:147:12",
													"statements": [
														{
															"nativeSrc": "6060:25:12",
															"nodeType": "YulAssignment",
															"src": "6060:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6083:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6083:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6065:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "6065:17:12"
																},
																"nativeSrc": "6065:20:12",
																"nodeType": "YulFunctionCall",
																"src": "6065:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6060:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "6060:1:12"
																}
															]
														},
														{
															"nativeSrc": "6094:25:12",
															"nodeType": "YulAssignment",
															"src": "6094:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6117:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6117:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6099:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "6099:17:12"
																},
																"nativeSrc": "6099:20:12",
																"nodeType": "YulFunctionCall",
																"src": "6099:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6094:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "6094:1:12"
																}
															]
														},
														{
															"nativeSrc": "6128:16:12",
															"nodeType": "YulAssignment",
															"src": "6128:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6139:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6139:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6142:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6142:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6135:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6135:3:12"
																},
																"nativeSrc": "6135:9:12",
																"nodeType": "YulFunctionCall",
																"src": "6135:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6128:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6128:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6168:22:12",
																"nodeType": "YulBlock",
																"src": "6168:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6170:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "6170:16:12"
																			},
																			"nativeSrc": "6170:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6170:18:12"
																		},
																		"nativeSrc": "6170:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6170:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6160:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6160:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6163:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6163:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6157:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6157:2:12"
																},
																"nativeSrc": "6157:10:12",
																"nodeType": "YulFunctionCall",
																"src": "6157:10:12"
															},
															"nativeSrc": "6154:36:12",
															"nodeType": "YulIf",
															"src": "6154:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6006:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6037:1:12",
														"nodeType": "YulTypedName",
														"src": "6037:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6040:1:12",
														"nodeType": "YulTypedName",
														"src": "6040:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6046:3:12",
														"nodeType": "YulTypedName",
														"src": "6046:3:12",
														"type": ""
													}
												],
												"src": "6006:191:12"
											},
											{
												"body": {
													"nativeSrc": "6268:53:12",
													"nodeType": "YulBlock",
													"src": "6268:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6285:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6285:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6308:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6308:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6290:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "6290:17:12"
																		},
																		"nativeSrc": "6290:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6290:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6278:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6278:6:12"
																},
																"nativeSrc": "6278:37:12",
																"nodeType": "YulFunctionCall",
																"src": "6278:37:12"
															},
															"nativeSrc": "6278:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "6278:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "6203:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6256:5:12",
														"nodeType": "YulTypedName",
														"src": "6256:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6263:3:12",
														"nodeType": "YulTypedName",
														"src": "6263:3:12",
														"type": ""
													}
												],
												"src": "6203:118:12"
											},
											{
												"body": {
													"nativeSrc": "6481:288:12",
													"nodeType": "YulBlock",
													"src": "6481:288:12",
													"statements": [
														{
															"nativeSrc": "6491:26:12",
															"nodeType": "YulAssignment",
															"src": "6491:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6503:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6503:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6514:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6514:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6499:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6499:3:12"
																},
																"nativeSrc": "6499:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6499:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6491:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6491:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6571:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6571:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6584:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6584:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6595:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6595:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6580:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6580:3:12"
																		},
																		"nativeSrc": "6580:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6580:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6527:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6527:43:12"
																},
																"nativeSrc": "6527:71:12",
																"nodeType": "YulFunctionCall",
																"src": "6527:71:12"
															},
															"nativeSrc": "6527:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "6527:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6652:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6652:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6665:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6665:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6676:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6676:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6661:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6661:3:12"
																		},
																		"nativeSrc": "6661:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6661:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6608:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6608:43:12"
																},
																"nativeSrc": "6608:72:12",
																"nodeType": "YulFunctionCall",
																"src": "6608:72:12"
															},
															"nativeSrc": "6608:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "6608:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6734:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6734:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6747:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6747:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6758:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6758:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6743:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6743:3:12"
																		},
																		"nativeSrc": "6743:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6743:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6690:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6690:43:12"
																},
																"nativeSrc": "6690:72:12",
																"nodeType": "YulFunctionCall",
																"src": "6690:72:12"
															},
															"nativeSrc": "6690:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "6690:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6327:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6437:9:12",
														"nodeType": "YulTypedName",
														"src": "6437:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6449:6:12",
														"nodeType": "YulTypedName",
														"src": "6449:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6457:6:12",
														"nodeType": "YulTypedName",
														"src": "6457:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6465:6:12",
														"nodeType": "YulTypedName",
														"src": "6465:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6476:4:12",
														"nodeType": "YulTypedName",
														"src": "6476:4:12",
														"type": ""
													}
												],
												"src": "6327:442:12"
											},
											{
												"body": {
													"nativeSrc": "6873:124:12",
													"nodeType": "YulBlock",
													"src": "6873:124:12",
													"statements": [
														{
															"nativeSrc": "6883:26:12",
															"nodeType": "YulAssignment",
															"src": "6883:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6895:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6895:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6906:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6906:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6891:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6891:3:12"
																},
																"nativeSrc": "6891:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6891:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6883:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6883:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6963:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6963:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6976:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6976:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6987:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6987:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6972:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6972:3:12"
																		},
																		"nativeSrc": "6972:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6972:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6919:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6919:43:12"
																},
																"nativeSrc": "6919:71:12",
																"nodeType": "YulFunctionCall",
																"src": "6919:71:12"
															},
															"nativeSrc": "6919:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "6919:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "6775:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6845:9:12",
														"nodeType": "YulTypedName",
														"src": "6845:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6857:6:12",
														"nodeType": "YulTypedName",
														"src": "6857:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6868:4:12",
														"nodeType": "YulTypedName",
														"src": "6868:4:12",
														"type": ""
													}
												],
												"src": "6775:222:12"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405260016006556001600955348015610019575f80fd5b50336040518060400160405280600b81526020017f437265646974546f6b656e0000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4352440000000000000000000000000000000000000000000000000000000000815250816003908161009691906106e2565b5080600490816100a691906106e2565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610119575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161011091906107f0565b60405180910390fd5b6101288161014760201b60201c565b505f633b9aca009050610141338261020a60201b60201c565b506108c6565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361027a575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161027191906107f0565b60405180910390fd5b61028b5f838361028f60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036102df578060025f8282546102d39190610836565b925050819055506103ad565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610368578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161035f93929190610878565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036103f4578060025f828254039250508190555061043e565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161049b91906108ad565b60405180910390a3505050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061052357607f821691505b602082108103610536576105356104df565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026105987fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261055d565b6105a2868361055d565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6105e66105e16105dc846105ba565b6105c3565b6105ba565b9050919050565b5f819050919050565b6105ff836105cc565b61061361060b826105ed565b848454610569565b825550505050565b5f90565b61062761061b565b6106328184846105f6565b505050565b5b818110156106555761064a5f8261061f565b600181019050610638565b5050565b601f82111561069a5761066b8161053c565b6106748461054e565b81016020851015610683578190505b61069761068f8561054e565b830182610637565b50505b505050565b5f82821c905092915050565b5f6106ba5f198460080261069f565b1980831691505092915050565b5f6106d283836106ab565b9150826002028217905092915050565b6106eb826104a8565b67ffffffffffffffff811115610704576107036104b2565b5b61070e825461050c565b610719828285610659565b5f60209050601f83116001811461074a575f8415610738578287015190505b61074285826106c7565b8655506107a9565b601f1984166107588661053c565b5f5b8281101561077f5784890151825560018201915060208501945060208101905061075a565b8683101561079c5784890151610798601f8916826106ab565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6107da826107b1565b9050919050565b6107ea816107d0565b82525050565b5f6020820190506108035f8301846107e1565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610840826105ba565b915061084b836105ba565b925082820190508082111561086357610862610809565b5b92915050565b610872816105ba565b82525050565b5f60608201905061088b5f8301866107e1565b6108986020830185610869565b6108a56040830184610869565b949350505050565b5f6020820190506108c05f830184610869565b92915050565b612dc5806108d35f395ff3fe608060405234801561000f575f80fd5b5060043610610156575f3560e01c80638da5cb5b116100c1578063adfbe22f1161007a578063adfbe22f146103da578063bdbfa3de146103f6578063c2fdbdad14610412578063dd62ed3e14610442578063e1ec3c6814610472578063f2fde38b146104ad57610156565b80638da5cb5b146102f257806395d89b4114610310578063a5410a661461032e578063a6f5b3b31461035e578063a9059cbb1461038e578063ab7b1c89146103be57610156565b806338d160111161011357806338d160111461024457806370a0823114610260578063715018a61461029057806375794a3c1461029a578063759135a1146102b857806387c51459146102d457610156565b806306fdde031461015a578063095ea7b31461017857806318160ddd146101a85780631a2ff598146101c657806323b872dd146101f6578063313ce56714610226575b5f80fd5b6101626104c9565b60405161016f9190611e8f565b60405180910390f35b610192600480360381019061018d9190611f4d565b610559565b60405161019f9190611fa5565b60405180910390f35b6101b061057b565b6040516101bd9190611fcd565b60405180910390f35b6101e060048036038101906101db9190612112565b610584565b6040516101ed9190611fcd565b60405180910390f35b610210600480360381019061020b9190612192565b61095a565b60405161021d9190611fa5565b60405180910390f35b61022e610988565b60405161023b91906121fd565b60405180910390f35b61025e60048036038101906102599190612216565b61098c565b005b61027a60048036038101906102759190612216565b610a2f565b6040516102879190611fcd565b60405180910390f35b610298610a74565b005b6102a2610a87565b6040516102af9190611fcd565b60405180910390f35b6102d260048036038101906102cd9190612241565b610a8d565b005b6102dc610b90565b6040516102e99190611fcd565b60405180910390f35b6102fa610b96565b604051610307919061227b565b60405180910390f35b610318610bbe565b6040516103259190611e8f565b60405180910390f35b61034860048036038101906103439190612216565b610c4e565b6040516103559190611fa5565b60405180910390f35b61037860048036038101906103739190612241565b610c6b565b6040516103859190611fcd565b60405180910390f35b6103a860048036038101906103a39190611f4d565b610cad565b6040516103b59190611fa5565b60405180910390f35b6103d860048036038101906103d39190612241565b610ccf565b005b6103f460048036038101906103ef9190612241565b610ebf565b005b610410600480360381019061040b9190612241565b61103d565b005b61042c60048036038101906104279190612241565b6111ec565b6040516104399190611fa5565b60405180910390f35b61045c60048036038101906104579190612294565b611258565b6040516104699190611fcd565b60405180910390f35b61048c60048036038101906104879190612241565b6112da565b6040516104a49c9b9a999897969594939291906122d2565b60405180910390f35b6104c760048036038101906104c29190612216565b61142c565b005b6060600380546104d8906123be565b80601f0160208091040260200160405190810160405280929190818152602001828054610504906123be565b801561054f5780601f106105265761010080835404028352916020019161054f565b820191905f5260205f20905b81548152906001019060200180831161053257829003601f168201915b5050505050905090565b5f806105636114b0565b90506105708185856114b7565b600191505092915050565b5f600254905090565b5f60085f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1661060e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060590612438565b60405180910390fd5b8361061833610a2f565b1015610659576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610650906124a0565b60405180910390fd5b836106643330611258565b10156106a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069c90612508565b60405180910390fd5b5f601e90506106b53330876114c9565b5f60065f8154809291906106c890612553565b9190505590505f60095f8154809291906106e190612553565b9190505590506040518061018001604052808973ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff168152602001888152602001878152602001848152602001620151808561074c919061259a565b4261075791906125db565b81526020015f151581526020015f151581526020015f151581526020018381526020015f151581526020018681525060075f8381526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015f6101000a81548160ff02191690831515021790555060e08201518160060160016101000a81548160ff0219169083151502179055506101008201518160060160026101000a81548160ff0219169083151502179055506101208201518160070155610140820151816008015f6101000a81548160ff0219169083151502179055506101608201518160090190816108ea91906127ab565b509050507f065f30d94790e6e129604916065477a26eebb0e2a87f79e6b05b21a0f662d9478189338a8a87620151808a610924919061259a565b4261092f91906125db565b8c60405161094498979695949392919061287a565b60405180910390a1819350505050949350505050565b5f806109646114b0565b90506109718582856114fb565b61097c85858561158e565b60019150509392505050565b5f90565b61099461167e565b600160085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f65c84ee842eafc291d1272a6e3d10f8c454c4288e63f5db3f7be2b3012f321a960405160405180910390a250565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610a7c61167e565b610a855f611705565b565b60065481565b5f60075f8381526020019081526020015f20905080600501544211610ae7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ade9061296d565b60405180910390fd5b806006015f9054906101000a900460ff1615610b38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2f906129d5565b60405180910390fd5b60018160060160026101000a81548160ff0219169083151502179055507f0ab9f35a07aca8965fede1a225ff17bd92f8d63aa4eb9a61ace1e99495e2980d82604051610b849190611fcd565b60405180910390a15050565b60095481565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610bcd906123be565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf9906123be565b8015610c445780601f10610c1b57610100808354040283529160200191610c44565b820191905f5260205f20905b815481529060010190602001808311610c2757829003601f168201915b5050505050905090565b6008602052805f5260405f205f915054906101000a900460ff1681565b5f8060075f8481526020019081526020015f20905080600501544210610c94575f915050610ca8565b428160050154610ca491906129f3565b9150505b919050565b5f80610cb76114b0565b9050610cc481858561158e565b600191505092915050565b5f60075f8381526020019081526020015f209050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6a90612a70565b60405180910390fd5b8060060160019054906101000a900460ff16610dc4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dbb90612ad8565b60405180910390fd5b806006015f9054906101000a900460ff1615610e15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0c906129d5565b60405180910390fd5b5f81600301548260020154610e2a91906125db565b9050610e5a33836001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836114c9565b6001826006015f6101000a81548160ff021916908315150217905550610e8382600701546117c8565b7f9a7851747cd7ffb3fe0a32caf3da48b31f27cebe131267051640f8b72fc4718683604051610eb29190611fcd565b60405180910390a1505050565b5f60075f8381526020019081526020015f209050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5a90612b40565b60405180910390fd5b8060060160019054906101000a900460ff1615610fb5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fac90612ba8565b60405180910390fd5b60018160060160016101000a81548160ff021916908315150217905550611002815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826002015461186c565b7f8313f00f3154c2e8509a2ee261c618804a495403d3ac94fe5fb833af9d13cb27826040516110319190611fcd565b60405180910390a15050565b5f60075f8381526020019081526020015f209050806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d990612c10565b60405180910390fd5b8060060160029054906101000a900460ff1615611134576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112b90612c78565b60405180910390fd5b8060060160019054906101000a900460ff1615611186576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117d90612ce0565b60405180910390fd5b61119433826002015461186c565b60018160060160026101000a81548160ff0219169083151502179055507fdb3578c2b080f19424234c3a83e34455b4b06e90bf24b62f4e13a9ed82fbf0ed826040516111e09190611fcd565b60405180910390a15050565b5f80600190505b60095481101561124e578260075f8381526020019081526020015f2060070154036112415760075f8281526020019081526020015f206008015f9054906101000a900460ff16915050611253565b80806001019150506111f3565b505f90505b919050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6007602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002015490806003015490806004015490806005015490806006015f9054906101000a900460ff16908060060160019054906101000a900460ff16908060060160029054906101000a900460ff1690806007015490806008015f9054906101000a900460ff16908060090180546113ab906123be565b80601f01602080910402602001604051908101604052809291908181526020018280546113d7906123be565b80156114225780601f106113f957610100808354040283529160200191611422565b820191905f5260205f20905b81548152906001019060200180831161140557829003601f168201915b505050505090508c565b61143461167e565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036114a4575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161149b919061227b565b60405180910390fd5b6114ad81611705565b50565b5f33905090565b6114c4838383600161189b565b505050565b6114f68383833073ffffffffffffffffffffffffffffffffffffffff16611a6a909392919063ffffffff16565b505050565b5f6115068484611258565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156115885781811015611579578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161157093929190612cfe565b60405180910390fd5b61158784848484035f61189b565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115fe575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016115f5919061227b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361166e575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611665919061227b565b60405180910390fd5b611679838383611aec565b505050565b6116866114b0565b73ffffffffffffffffffffffffffffffffffffffff166116a4610b96565b73ffffffffffffffffffffffffffffffffffffffff1614611703576116c76114b0565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016116fa919061227b565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f600190505b600954811015611868578160075f8381526020019081526020015f20600701540361185b57600160075f8381526020019081526020015f206008015f6101000a81548160ff0219169083151502179055507f3c176691ca154a2f6fe978a2a633a33ee77dbe2902e67a75400720845a4b2ce18260405161184e9190611fcd565b60405180910390a1611868565b80806001019150506117ce565b5050565b61189782823073ffffffffffffffffffffffffffffffffffffffff16611d059092919063ffffffff16565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361190b575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611902919061227b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361197b575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611972919061227b565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611a64578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611a5b9190611fcd565b60405180910390a35b50505050565b611ae6848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401611a9f93929190612d33565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611d84565b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611b3c578060025f828254611b3091906125db565b92505081905550611c0a565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611bc5578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611bbc93929190612cfe565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611c51578060025f8282540392505081905550611c9b565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611cf89190611fcd565b60405180910390a3505050565b611d7f838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611d38929190612d68565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611d84565b505050565b5f8060205f8451602086015f885af180611da3576040513d5f823e3d81fd5b3d92505f519150505f8214611dbc576001811415611dd7565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15611e1957836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401611e10919061227b565b60405180910390fd5b50505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611e6182611e1f565b611e6b8185611e29565b9350611e7b818560208601611e39565b611e8481611e47565b840191505092915050565b5f6020820190508181035f830152611ea78184611e57565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611ee982611ec0565b9050919050565b611ef981611edf565b8114611f03575f80fd5b50565b5f81359050611f1481611ef0565b92915050565b5f819050919050565b611f2c81611f1a565b8114611f36575f80fd5b50565b5f81359050611f4781611f23565b92915050565b5f8060408385031215611f6357611f62611eb8565b5b5f611f7085828601611f06565b9250506020611f8185828601611f39565b9150509250929050565b5f8115159050919050565b611f9f81611f8b565b82525050565b5f602082019050611fb85f830184611f96565b92915050565b611fc781611f1a565b82525050565b5f602082019050611fe05f830184611fbe565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61202482611e47565b810181811067ffffffffffffffff8211171561204357612042611fee565b5b80604052505050565b5f612055611eaf565b9050612061828261201b565b919050565b5f67ffffffffffffffff8211156120805761207f611fee565b5b61208982611e47565b9050602081019050919050565b828183375f83830152505050565b5f6120b66120b184612066565b61204c565b9050828152602081018484840111156120d2576120d1611fea565b5b6120dd848285612096565b509392505050565b5f82601f8301126120f9576120f8611fe6565b5b81356121098482602086016120a4565b91505092915050565b5f805f806080858703121561212a57612129611eb8565b5b5f61213787828801611f06565b945050602061214887828801611f39565b935050604061215987828801611f39565b925050606085013567ffffffffffffffff81111561217a57612179611ebc565b5b612186878288016120e5565b91505092959194509250565b5f805f606084860312156121a9576121a8611eb8565b5b5f6121b686828701611f06565b93505060206121c786828701611f06565b92505060406121d886828701611f39565b9150509250925092565b5f60ff82169050919050565b6121f7816121e2565b82525050565b5f6020820190506122105f8301846121ee565b92915050565b5f6020828403121561222b5761222a611eb8565b5b5f61223884828501611f06565b91505092915050565b5f6020828403121561225657612255611eb8565b5b5f61226384828501611f39565b91505092915050565b61227581611edf565b82525050565b5f60208201905061228e5f83018461226c565b92915050565b5f80604083850312156122aa576122a9611eb8565b5b5f6122b785828601611f06565b92505060206122c885828601611f06565b9150509250929050565b5f610180820190506122e65f83018f61226c565b6122f3602083018e61226c565b612300604083018d611fbe565b61230d606083018c611fbe565b61231a608083018b611fbe565b61232760a083018a611fbe565b61233460c0830189611f96565b61234160e0830188611f96565b61234f610100830187611f96565b61235d610120830186611fbe565b61236b610140830185611f96565b81810361016083015261237e8184611e57565b90509d9c50505050505050505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806123d557607f821691505b6020821081036123e8576123e7612391565b5b50919050565b7f426f72726f776572206d757374206265204b59432076657269666965640000005f82015250565b5f612422601d83611e29565b915061242d826123ee565b602082019050919050565b5f6020820190508181035f83015261244f81612416565b9050919050565b7f496e73756666696369656e742066756e647300000000000000000000000000005f82015250565b5f61248a601283611e29565b915061249582612456565b602082019050919050565b5f6020820190508181035f8301526124b78161247e565b9050919050565b7f416c6c6f77616e6365206973206e6f7420656e6f7567680000000000000000005f82015250565b5f6124f2601783611e29565b91506124fd826124be565b602082019050919050565b5f6020820190508181035f83015261251f816124e6565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61255d82611f1a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361258f5761258e612526565b5b600182019050919050565b5f6125a482611f1a565b91506125af83611f1a565b92508282026125bd81611f1a565b915082820484148315176125d4576125d3612526565b5b5092915050565b5f6125e582611f1a565b91506125f083611f1a565b925082820190508082111561260857612607612526565b5b92915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261266a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261262f565b612674868361262f565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6126af6126aa6126a584611f1a565b61268c565b611f1a565b9050919050565b5f819050919050565b6126c883612695565b6126dc6126d4826126b6565b84845461263b565b825550505050565b5f90565b6126f06126e4565b6126fb8184846126bf565b505050565b5b8181101561271e576127135f826126e8565b600181019050612701565b5050565b601f821115612763576127348161260e565b61273d84612620565b8101602085101561274c578190505b61276061275885612620565b830182612700565b50505b505050565b5f82821c905092915050565b5f6127835f1984600802612768565b1980831691505092915050565b5f61279b8383612774565b9150826002028217905092915050565b6127b482611e1f565b67ffffffffffffffff8111156127cd576127cc611fee565b5b6127d782546123be565b6127e2828285612722565b5f60209050601f831160018114612813575f8415612801578287015190505b61280b8582612790565b865550612872565b601f1984166128218661260e565b5f5b8281101561284857848901518255600182019150602085019450602081019050612823565b868310156128655784890151612861601f891682612774565b8355505b6001600288020188555050505b505050505050565b5f6101008201905061288e5f83018b611fbe565b61289b602083018a61226c565b6128a8604083018961226c565b6128b56060830188611fbe565b6128c26080830187611fbe565b6128cf60a0830186611fbe565b6128dc60c0830185611fbe565b81810360e08301526128ee8184611e57565b90509998505050505050505050565b7f4c6f616e206973207374696c6c2077697468696e2072657061796d656e7420705f8201527f6572696f64000000000000000000000000000000000000000000000000000000602082015250565b5f612957602583611e29565b9150612962826128fd565b604082019050919050565b5f6020820190508181035f8301526129848161294b565b9050919050565b7f4c6f616e20616c726561647920726570616964000000000000000000000000005f82015250565b5f6129bf601383611e29565b91506129ca8261298b565b602082019050919050565b5f6020820190508181035f8301526129ec816129b3565b9050919050565b5f6129fd82611f1a565b9150612a0883611f1a565b9250828203905081811115612a2057612a1f612526565b5b92915050565b7f4f6e6c7920626f72726f7765722063616e2072657061790000000000000000005f82015250565b5f612a5a601783611e29565b9150612a6582612a26565b602082019050919050565b5f6020820190508181035f830152612a8781612a4e565b9050919050565b7f4c6f616e206d75737420626520616363657074656420666972737400000000005f82015250565b5f612ac2601b83611e29565b9150612acd82612a8e565b602082019050919050565b5f6020820190508181035f830152612aef81612ab6565b9050919050565b7f4f6e6c7920626f72726f7765722063616e2061636365707400000000000000005f82015250565b5f612b2a601883611e29565b9150612b3582612af6565b602082019050919050565b5f6020820190508181035f830152612b5781612b1e565b9050919050565b7f4c6f616e20616c726561647920616363657074656400000000000000000000005f82015250565b5f612b92601583611e29565b9150612b9d82612b5e565b602082019050919050565b5f6020820190508181035f830152612bbf81612b86565b9050919050565b7f4f6e6c79206c656e6465722063616e2063616e63656c000000000000000000005f82015250565b5f612bfa601683611e29565b9150612c0582612bc6565b602082019050919050565b5f6020820190508181035f830152612c2781612bee565b9050919050565b7f4c6f616e20616c72656164792063616e63656c6c6564000000000000000000005f82015250565b5f612c62601683611e29565b9150612c6d82612c2e565b602082019050919050565b5f6020820190508181035f830152612c8f81612c56565b9050919050565b7f43616e6e6f742063616e63656c20616e206163636570746564206c6f616e00005f82015250565b5f612cca601e83611e29565b9150612cd582612c96565b602082019050919050565b5f6020820190508181035f830152612cf781612cbe565b9050919050565b5f606082019050612d115f83018661226c565b612d1e6020830185611fbe565b612d2b6040830184611fbe565b949350505050565b5f606082019050612d465f83018661226c565b612d53602083018561226c565b612d606040830184611fbe565b949350505050565b5f604082019050612d7b5f83018561226c565b612d886020830184611fbe565b939250505056fea2646970667358221220e2f6cfef6bd258567900ab53aa842db56cefe0976b991d7f62bb424f4e82fedd64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x6 SSTORE PUSH1 0x1 PUSH1 0x9 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x19 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x437265646974546F6B656E000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4352440000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x6E2 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x6E2 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x119 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110 SWAP2 SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x128 DUP2 PUSH2 0x147 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH4 0x3B9ACA00 SWAP1 POP PUSH2 0x141 CALLER DUP3 PUSH2 0x20A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x8C6 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x27A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x28B PUSH0 DUP4 DUP4 PUSH2 0x28F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2DF JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x836 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3AD JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x368 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x878 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3F4 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x43E JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x49B SWAP2 SWAP1 PUSH2 0x8AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x523 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x536 JUMPI PUSH2 0x535 PUSH2 0x4DF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x598 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x55D JUMP JUMPDEST PUSH2 0x5A2 DUP7 DUP4 PUSH2 0x55D JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5E6 PUSH2 0x5E1 PUSH2 0x5DC DUP5 PUSH2 0x5BA JUMP JUMPDEST PUSH2 0x5C3 JUMP JUMPDEST PUSH2 0x5BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5FF DUP4 PUSH2 0x5CC JUMP JUMPDEST PUSH2 0x613 PUSH2 0x60B DUP3 PUSH2 0x5ED JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x569 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x627 PUSH2 0x61B JUMP JUMPDEST PUSH2 0x632 DUP2 DUP5 DUP5 PUSH2 0x5F6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x655 JUMPI PUSH2 0x64A PUSH0 DUP3 PUSH2 0x61F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x638 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x69A JUMPI PUSH2 0x66B DUP2 PUSH2 0x53C JUMP JUMPDEST PUSH2 0x674 DUP5 PUSH2 0x54E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x683 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x697 PUSH2 0x68F DUP6 PUSH2 0x54E JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x637 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6BA PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x69F JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6D2 DUP4 DUP4 PUSH2 0x6AB JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6EB DUP3 PUSH2 0x4A8 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x704 JUMPI PUSH2 0x703 PUSH2 0x4B2 JUMP JUMPDEST JUMPDEST PUSH2 0x70E DUP3 SLOAD PUSH2 0x50C JUMP JUMPDEST PUSH2 0x719 DUP3 DUP3 DUP6 PUSH2 0x659 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x74A JUMPI PUSH0 DUP5 ISZERO PUSH2 0x738 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x742 DUP6 DUP3 PUSH2 0x6C7 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x7A9 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x758 DUP7 PUSH2 0x53C JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x77F JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x75A JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x79C JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x798 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x6AB JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7DA DUP3 PUSH2 0x7B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7EA DUP2 PUSH2 0x7D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x803 PUSH0 DUP4 ADD DUP5 PUSH2 0x7E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x840 DUP3 PUSH2 0x5BA JUMP JUMPDEST SWAP2 POP PUSH2 0x84B DUP4 PUSH2 0x5BA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x863 JUMPI PUSH2 0x862 PUSH2 0x809 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x872 DUP2 PUSH2 0x5BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x88B PUSH0 DUP4 ADD DUP7 PUSH2 0x7E1 JUMP JUMPDEST PUSH2 0x898 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x869 JUMP JUMPDEST PUSH2 0x8A5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x869 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8C0 PUSH0 DUP4 ADD DUP5 PUSH2 0x869 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2DC5 DUP1 PUSH2 0x8D3 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x156 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xADFBE22F GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xADFBE22F EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0xBDBFA3DE EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0xC2FDBDAD EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x442 JUMPI DUP1 PUSH4 0xE1EC3C68 EQ PUSH2 0x472 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4AD JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0xA5410A66 EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0xA6F5B3B3 EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0xAB7B1C89 EQ PUSH2 0x3BE JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x38D16011 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x38D16011 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x75794A3C EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x759135A1 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x87C51459 EQ PUSH2 0x2D4 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x1A2FF598 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x226 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x162 PUSH2 0x4C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x1E8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1F4D JUMP JUMPDEST PUSH2 0x559 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1FA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x2112 JUMP JUMPDEST PUSH2 0x584 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x2192 JUMP JUMPDEST PUSH2 0x95A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x1FA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH2 0x988 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x21FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x2216 JUMP JUMPDEST PUSH2 0x98C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x2216 JUMP JUMPDEST PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x298 PUSH2 0xA74 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A2 PUSH2 0xA87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH2 0xA8D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DC PUSH2 0xB90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FA PUSH2 0xB96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x227B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x318 PUSH2 0xBBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x1E8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x348 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x2216 JUMP JUMPDEST PUSH2 0xC4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x1FA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x378 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x373 SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH2 0xC6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x1F4D JUMP JUMPDEST PUSH2 0xCAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x1FA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH2 0xCCF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH2 0xEBF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x410 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH2 0x103D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x42C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x427 SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH2 0x11EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x439 SWAP2 SWAP1 PUSH2 0x1FA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x457 SWAP2 SWAP1 PUSH2 0x2294 JUMP JUMPDEST PUSH2 0x1258 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x469 SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x487 SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH2 0x12DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A4 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C2 SWAP2 SWAP1 PUSH2 0x2216 JUMP JUMPDEST PUSH2 0x142C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4D8 SWAP1 PUSH2 0x23BE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x504 SWAP1 PUSH2 0x23BE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x54F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x526 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x54F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x532 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x563 PUSH2 0x14B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x570 DUP2 DUP6 DUP6 PUSH2 0x14B7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x60E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x605 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH2 0x618 CALLER PUSH2 0xA2F JUMP JUMPDEST LT ISZERO PUSH2 0x659 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x650 SWAP1 PUSH2 0x24A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH2 0x664 CALLER ADDRESS PUSH2 0x1258 JUMP JUMPDEST LT ISZERO PUSH2 0x6A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69C SWAP1 PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1E SWAP1 POP PUSH2 0x6B5 CALLER ADDRESS DUP8 PUSH2 0x14C9 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x6C8 SWAP1 PUSH2 0x2553 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH0 PUSH1 0x9 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x6E1 SWAP1 PUSH2 0x2553 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x15180 DUP6 PUSH2 0x74C SWAP2 SWAP1 PUSH2 0x259A JUMP JUMPDEST TIMESTAMP PUSH2 0x757 SWAP2 SWAP1 PUSH2 0x25DB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE POP PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x160 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD SWAP1 DUP2 PUSH2 0x8EA SWAP2 SWAP1 PUSH2 0x27AB JUMP JUMPDEST POP SWAP1 POP POP PUSH32 0x65F30D94790E6E129604916065477A26EEBB0E2A87F79E6B05B21A0F662D947 DUP2 DUP10 CALLER DUP11 DUP11 DUP8 PUSH3 0x15180 DUP11 PUSH2 0x924 SWAP2 SWAP1 PUSH2 0x259A JUMP JUMPDEST TIMESTAMP PUSH2 0x92F SWAP2 SWAP1 PUSH2 0x25DB JUMP JUMPDEST DUP13 PUSH1 0x40 MLOAD PUSH2 0x944 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x287A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP2 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x964 PUSH2 0x14B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x971 DUP6 DUP3 DUP6 PUSH2 0x14FB JUMP JUMPDEST PUSH2 0x97C DUP6 DUP6 DUP6 PUSH2 0x158E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x994 PUSH2 0x167E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x65C84EE842EAFC291D1272A6E3D10F8C454C4288E63F5DB3F7BE2B3012F321A9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA7C PUSH2 0x167E JUMP JUMPDEST PUSH2 0xA85 PUSH0 PUSH2 0x1705 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x5 ADD SLOAD TIMESTAMP GT PUSH2 0xAE7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADE SWAP1 PUSH2 0x296D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2F SWAP1 PUSH2 0x29D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x6 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xAB9F35A07ACA8965FEDE1A225FF17BD92F8D63AA4EB9A61ACE1E99495E2980D DUP3 PUSH1 0x40 MLOAD PUSH2 0xB84 SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xBCD SWAP1 PUSH2 0x23BE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBF9 SWAP1 PUSH2 0x23BE JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC44 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC1B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC44 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC27 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x5 ADD SLOAD TIMESTAMP LT PUSH2 0xC94 JUMPI PUSH0 SWAP2 POP POP PUSH2 0xCA8 JUMP JUMPDEST TIMESTAMP DUP2 PUSH1 0x5 ADD SLOAD PUSH2 0xCA4 SWAP2 SWAP1 PUSH2 0x29F3 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xCB7 PUSH2 0x14B0 JUMP JUMPDEST SWAP1 POP PUSH2 0xCC4 DUP2 DUP6 DUP6 PUSH2 0x158E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6A SWAP1 PUSH2 0x2A70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xDC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBB SWAP1 PUSH2 0x2AD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE15 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0C SWAP1 PUSH2 0x29D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x3 ADD SLOAD DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0xE2A SWAP2 SWAP1 PUSH2 0x25DB JUMP JUMPDEST SWAP1 POP PUSH2 0xE5A CALLER DUP4 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x6 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xE83 DUP3 PUSH1 0x7 ADD SLOAD PUSH2 0x17C8 JUMP JUMPDEST PUSH32 0x9A7851747CD7FFB3FE0A32CAF3DA48B31F27CEBE131267051640F8B72FC47186 DUP4 PUSH1 0x40 MLOAD PUSH2 0xEB2 SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF5A SWAP1 PUSH2 0x2B40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xFB5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAC SWAP1 PUSH2 0x2BA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x6 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1002 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x186C JUMP JUMPDEST PUSH32 0x8313F00F3154C2E8509A2EE261C618804A495403D3AC94FE5FB833AF9D13CB27 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1031 SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D9 SWAP1 PUSH2 0x2C10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1134 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x112B SWAP1 PUSH2 0x2C78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1186 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x117D SWAP1 PUSH2 0x2CE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1194 CALLER DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x186C JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x6 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xDB3578C2B080F19424234C3A83E34455B4B06E90BF24B62F4E13A9ED82FBF0ED DUP3 PUSH1 0x40 MLOAD PUSH2 0x11E0 SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x124E JUMPI DUP3 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x7 ADD SLOAD SUB PUSH2 0x1241 JUMPI PUSH1 0x7 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x8 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP PUSH2 0x1253 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x11F3 JUMP JUMPDEST POP PUSH0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x6 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x9 ADD DUP1 SLOAD PUSH2 0x13AB SWAP1 PUSH2 0x23BE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x13D7 SWAP1 PUSH2 0x23BE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1422 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1422 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1405 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP13 JUMP JUMPDEST PUSH2 0x1434 PUSH2 0x167E JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14A4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x149B SWAP2 SWAP1 PUSH2 0x227B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14AD DUP2 PUSH2 0x1705 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x14C4 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x189B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x14F6 DUP4 DUP4 DUP4 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A6A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1506 DUP5 DUP5 PUSH2 0x1258 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1588 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1579 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1570 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2CFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1587 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x189B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15FE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15F5 SWAP2 SWAP1 PUSH2 0x227B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x166E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1665 SWAP2 SWAP1 PUSH2 0x227B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1679 DUP4 DUP4 DUP4 PUSH2 0x1AEC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1686 PUSH2 0x14B0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16A4 PUSH2 0xB96 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1703 JUMPI PUSH2 0x16C7 PUSH2 0x14B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16FA SWAP2 SWAP1 PUSH2 0x227B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x1868 JUMPI DUP2 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x7 ADD SLOAD SUB PUSH2 0x185B JUMPI PUSH1 0x1 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x8 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x3C176691CA154A2F6FE978A2A633A33EE77DBE2902E67A75400720845A4B2CE1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x184E SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1868 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x17CE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1897 DUP3 DUP3 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D05 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x190B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1902 SWAP2 SWAP1 PUSH2 0x227B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x197B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1972 SWAP2 SWAP1 PUSH2 0x227B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1A64 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1A5B SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1AE6 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1A9F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1D84 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B3C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1B30 SWAP2 SWAP1 PUSH2 0x25DB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1C0A JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1BC5 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BBC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2CFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C51 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1C9B JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1CF8 SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1D7F DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1D38 SWAP3 SWAP2 SWAP1 PUSH2 0x2D68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1D84 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1DA3 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1DBC JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1DD7 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1E19 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E10 SWAP2 SWAP1 PUSH2 0x227B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E61 DUP3 PUSH2 0x1E1F JUMP JUMPDEST PUSH2 0x1E6B DUP2 DUP6 PUSH2 0x1E29 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E7B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E39 JUMP JUMPDEST PUSH2 0x1E84 DUP2 PUSH2 0x1E47 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EA7 DUP2 DUP5 PUSH2 0x1E57 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EE9 DUP3 PUSH2 0x1EC0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EF9 DUP2 PUSH2 0x1EDF JUMP JUMPDEST DUP2 EQ PUSH2 0x1F03 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F14 DUP2 PUSH2 0x1EF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F2C DUP2 PUSH2 0x1F1A JUMP JUMPDEST DUP2 EQ PUSH2 0x1F36 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F47 DUP2 PUSH2 0x1F23 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F63 JUMPI PUSH2 0x1F62 PUSH2 0x1EB8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F70 DUP6 DUP3 DUP7 ADD PUSH2 0x1F06 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F81 DUP6 DUP3 DUP7 ADD PUSH2 0x1F39 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F9F DUP2 PUSH2 0x1F8B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FB8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FC7 DUP2 PUSH2 0x1F1A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FE0 PUSH0 DUP4 ADD DUP5 PUSH2 0x1FBE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2024 DUP3 PUSH2 0x1E47 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2043 JUMPI PUSH2 0x2042 PUSH2 0x1FEE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2055 PUSH2 0x1EAF JUMP JUMPDEST SWAP1 POP PUSH2 0x2061 DUP3 DUP3 PUSH2 0x201B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2080 JUMPI PUSH2 0x207F PUSH2 0x1FEE JUMP JUMPDEST JUMPDEST PUSH2 0x2089 DUP3 PUSH2 0x1E47 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20B6 PUSH2 0x20B1 DUP5 PUSH2 0x2066 JUMP JUMPDEST PUSH2 0x204C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x20D2 JUMPI PUSH2 0x20D1 PUSH2 0x1FEA JUMP JUMPDEST JUMPDEST PUSH2 0x20DD DUP5 DUP3 DUP6 PUSH2 0x2096 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x20F9 JUMPI PUSH2 0x20F8 PUSH2 0x1FE6 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2109 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x20A4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x212A JUMPI PUSH2 0x2129 PUSH2 0x1EB8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2137 DUP8 DUP3 DUP9 ADD PUSH2 0x1F06 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2148 DUP8 DUP3 DUP9 ADD PUSH2 0x1F39 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2159 DUP8 DUP3 DUP9 ADD PUSH2 0x1F39 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x217A JUMPI PUSH2 0x2179 PUSH2 0x1EBC JUMP JUMPDEST JUMPDEST PUSH2 0x2186 DUP8 DUP3 DUP9 ADD PUSH2 0x20E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21A9 JUMPI PUSH2 0x21A8 PUSH2 0x1EB8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21B6 DUP7 DUP3 DUP8 ADD PUSH2 0x1F06 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x21C7 DUP7 DUP3 DUP8 ADD PUSH2 0x1F06 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x21D8 DUP7 DUP3 DUP8 ADD PUSH2 0x1F39 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21F7 DUP2 PUSH2 0x21E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2210 PUSH0 DUP4 ADD DUP5 PUSH2 0x21EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x222B JUMPI PUSH2 0x222A PUSH2 0x1EB8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2238 DUP5 DUP3 DUP6 ADD PUSH2 0x1F06 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2256 JUMPI PUSH2 0x2255 PUSH2 0x1EB8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2263 DUP5 DUP3 DUP6 ADD PUSH2 0x1F39 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2275 DUP2 PUSH2 0x1EDF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x228E PUSH0 DUP4 ADD DUP5 PUSH2 0x226C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22AA JUMPI PUSH2 0x22A9 PUSH2 0x1EB8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22B7 DUP6 DUP3 DUP7 ADD PUSH2 0x1F06 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22C8 DUP6 DUP3 DUP7 ADD PUSH2 0x1F06 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x180 DUP3 ADD SWAP1 POP PUSH2 0x22E6 PUSH0 DUP4 ADD DUP16 PUSH2 0x226C JUMP JUMPDEST PUSH2 0x22F3 PUSH1 0x20 DUP4 ADD DUP15 PUSH2 0x226C JUMP JUMPDEST PUSH2 0x2300 PUSH1 0x40 DUP4 ADD DUP14 PUSH2 0x1FBE JUMP JUMPDEST PUSH2 0x230D PUSH1 0x60 DUP4 ADD DUP13 PUSH2 0x1FBE JUMP JUMPDEST PUSH2 0x231A PUSH1 0x80 DUP4 ADD DUP12 PUSH2 0x1FBE JUMP JUMPDEST PUSH2 0x2327 PUSH1 0xA0 DUP4 ADD DUP11 PUSH2 0x1FBE JUMP JUMPDEST PUSH2 0x2334 PUSH1 0xC0 DUP4 ADD DUP10 PUSH2 0x1F96 JUMP JUMPDEST PUSH2 0x2341 PUSH1 0xE0 DUP4 ADD DUP9 PUSH2 0x1F96 JUMP JUMPDEST PUSH2 0x234F PUSH2 0x100 DUP4 ADD DUP8 PUSH2 0x1F96 JUMP JUMPDEST PUSH2 0x235D PUSH2 0x120 DUP4 ADD DUP7 PUSH2 0x1FBE JUMP JUMPDEST PUSH2 0x236B PUSH2 0x140 DUP4 ADD DUP6 PUSH2 0x1F96 JUMP JUMPDEST DUP2 DUP2 SUB PUSH2 0x160 DUP4 ADD MSTORE PUSH2 0x237E DUP2 DUP5 PUSH2 0x1E57 JUMP JUMPDEST SWAP1 POP SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x23D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x23E8 JUMPI PUSH2 0x23E7 PUSH2 0x2391 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426F72726F776572206D757374206265204B5943207665726966696564000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2422 PUSH1 0x1D DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x242D DUP3 PUSH2 0x23EE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x244F DUP2 PUSH2 0x2416 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x248A PUSH1 0x12 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x2495 DUP3 PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24B7 DUP2 PUSH2 0x247E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C6C6F77616E6365206973206E6F7420656E6F756768000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24F2 PUSH1 0x17 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x24FD DUP3 PUSH2 0x24BE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x251F DUP2 PUSH2 0x24E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x255D DUP3 PUSH2 0x1F1A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x258F JUMPI PUSH2 0x258E PUSH2 0x2526 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x25A4 DUP3 PUSH2 0x1F1A JUMP JUMPDEST SWAP2 POP PUSH2 0x25AF DUP4 PUSH2 0x1F1A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x25BD DUP2 PUSH2 0x1F1A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x25D4 JUMPI PUSH2 0x25D3 PUSH2 0x2526 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25E5 DUP3 PUSH2 0x1F1A JUMP JUMPDEST SWAP2 POP PUSH2 0x25F0 DUP4 PUSH2 0x1F1A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2608 JUMPI PUSH2 0x2607 PUSH2 0x2526 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x266A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x262F JUMP JUMPDEST PUSH2 0x2674 DUP7 DUP4 PUSH2 0x262F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x26AF PUSH2 0x26AA PUSH2 0x26A5 DUP5 PUSH2 0x1F1A JUMP JUMPDEST PUSH2 0x268C JUMP JUMPDEST PUSH2 0x1F1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26C8 DUP4 PUSH2 0x2695 JUMP JUMPDEST PUSH2 0x26DC PUSH2 0x26D4 DUP3 PUSH2 0x26B6 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x263B JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x26F0 PUSH2 0x26E4 JUMP JUMPDEST PUSH2 0x26FB DUP2 DUP5 DUP5 PUSH2 0x26BF JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x271E JUMPI PUSH2 0x2713 PUSH0 DUP3 PUSH2 0x26E8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2701 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2763 JUMPI PUSH2 0x2734 DUP2 PUSH2 0x260E JUMP JUMPDEST PUSH2 0x273D DUP5 PUSH2 0x2620 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x274C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2760 PUSH2 0x2758 DUP6 PUSH2 0x2620 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2700 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2783 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2768 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x279B DUP4 DUP4 PUSH2 0x2774 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27B4 DUP3 PUSH2 0x1E1F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27CD JUMPI PUSH2 0x27CC PUSH2 0x1FEE JUMP JUMPDEST JUMPDEST PUSH2 0x27D7 DUP3 SLOAD PUSH2 0x23BE JUMP JUMPDEST PUSH2 0x27E2 DUP3 DUP3 DUP6 PUSH2 0x2722 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2813 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2801 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x280B DUP6 DUP3 PUSH2 0x2790 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2872 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2821 DUP7 PUSH2 0x260E JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2848 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2823 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2865 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2861 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2774 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x288E PUSH0 DUP4 ADD DUP12 PUSH2 0x1FBE JUMP JUMPDEST PUSH2 0x289B PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x226C JUMP JUMPDEST PUSH2 0x28A8 PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x226C JUMP JUMPDEST PUSH2 0x28B5 PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x1FBE JUMP JUMPDEST PUSH2 0x28C2 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x1FBE JUMP JUMPDEST PUSH2 0x28CF PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x1FBE JUMP JUMPDEST PUSH2 0x28DC PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x1FBE JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x28EE DUP2 DUP5 PUSH2 0x1E57 JUMP JUMPDEST SWAP1 POP SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4C6F616E206973207374696C6C2077697468696E2072657061796D656E742070 PUSH0 DUP3 ADD MSTORE PUSH32 0x6572696F64000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2957 PUSH1 0x25 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x2962 DUP3 PUSH2 0x28FD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2984 DUP2 PUSH2 0x294B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C6F616E20616C72656164792072657061696400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29BF PUSH1 0x13 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x29CA DUP3 PUSH2 0x298B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29EC DUP2 PUSH2 0x29B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x29FD DUP3 PUSH2 0x1F1A JUMP JUMPDEST SWAP2 POP PUSH2 0x2A08 DUP4 PUSH2 0x1F1A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2A20 JUMPI PUSH2 0x2A1F PUSH2 0x2526 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C7920626F72726F7765722063616E207265706179000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A5A PUSH1 0x17 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A65 DUP3 PUSH2 0x2A26 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A87 DUP2 PUSH2 0x2A4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C6F616E206D7573742062652061636365707465642066697273740000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2AC2 PUSH1 0x1B DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x2ACD DUP3 PUSH2 0x2A8E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2AEF DUP2 PUSH2 0x2AB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C7920626F72726F7765722063616E206163636570740000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B2A PUSH1 0x18 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B35 DUP3 PUSH2 0x2AF6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B57 DUP2 PUSH2 0x2B1E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C6F616E20616C72656164792061636365707465640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B92 PUSH1 0x15 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B9D DUP3 PUSH2 0x2B5E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BBF DUP2 PUSH2 0x2B86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C79206C656E6465722063616E2063616E63656C00000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2BFA PUSH1 0x16 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C05 DUP3 PUSH2 0x2BC6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C27 DUP2 PUSH2 0x2BEE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C6F616E20616C72656164792063616E63656C6C656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C62 PUSH1 0x16 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C6D DUP3 PUSH2 0x2C2E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C8F DUP2 PUSH2 0x2C56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F742063616E63656C20616E206163636570746564206C6F616E0000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2CCA PUSH1 0x1E DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CD5 DUP3 PUSH2 0x2C96 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2CF7 DUP2 PUSH2 0x2CBE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2D11 PUSH0 DUP4 ADD DUP7 PUSH2 0x226C JUMP JUMPDEST PUSH2 0x2D1E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1FBE JUMP JUMPDEST PUSH2 0x2D2B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1FBE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2D46 PUSH0 DUP4 ADD DUP7 PUSH2 0x226C JUMP JUMPDEST PUSH2 0x2D53 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x226C JUMP JUMPDEST PUSH2 0x2D60 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1FBE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2D7B PUSH0 DUP4 ADD DUP6 PUSH2 0x226C JUMP JUMPDEST PUSH2 0x2D88 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1FBE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 0xF6 0xCF 0xEF PUSH12 0xD258567900AB53AA842DB56C 0xEF 0xE0 SWAP8 PUSH12 0x991D7F62BB424F4E82FEDD64 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "247:5469:11:-:0;;;356:1;327:30;;832:1;804:29;;1259:161;;;;;;;;;;1309:10;1601:113:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1332:21:11::2;1356:13;1332:37;;1380:32;1386:10;1398:13;1380:5;;;:32;;:::i;:::-;1321:99;247:5469:::0;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7458:208:5:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:12:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;5820:180::-;5868:77;5865:1;5858:88;5965:4;5962:1;5955:15;5989:4;5986:1;5979:15;6006:191;6046:3;6065:20;6083:1;6065:20;:::i;:::-;6060:25;;6099:20;6117:1;6099:20;:::i;:::-;6094:25;;6142:1;6139;6135:9;6128:16;;6163:3;6160:1;6157:10;6154:36;;;6170:18;;:::i;:::-;6154:36;6006:191;;;;:::o;6203:118::-;6290:24;6308:5;6290:24;:::i;:::-;6285:3;6278:37;6203:118;;:::o;6327:442::-;6476:4;6514:2;6503:9;6499:18;6491:26;;6527:71;6595:1;6584:9;6580:17;6571:6;6527:71;:::i;:::-;6608:72;6676:2;6665:9;6661:18;6652:6;6608:72;:::i;:::-;6690;6758:2;6747:9;6743:18;6734:6;6690:72;:::i;:::-;6327:442;;;;;;:::o;6775:222::-;6868:4;6906:2;6895:9;6891:18;6883:26;;6919:71;6987:1;6976:9;6972:17;6963:6;6919:71;:::i;:::-;6775:222;;;;:::o;247:5469:11:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_780": {
									"entryPoint": 5303,
									"id": 780,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_840": {
									"entryPoint": 6299,
									"id": 840,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1360": {
									"entryPoint": 7556,
									"id": 1360,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 5758,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1414": {
									"entryPoint": 5296,
									"id": 1414,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeTransferFrom_2033": {
									"entryPoint": 5321,
									"id": 2033,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_safeTransfer_2052": {
									"entryPoint": 6252,
									"id": 2052,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_spendAllowance_888": {
									"entryPoint": 5371,
									"id": 888,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 5893,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_619": {
									"entryPoint": 5518,
									"id": 619,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_696": {
									"entryPoint": 6892,
									"id": 696,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@acceptLoan_1749": {
									"entryPoint": 3775,
									"id": 1749,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowance_516": {
									"entryPoint": 4696,
									"id": 516,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_540": {
									"entryPoint": 1369,
									"id": 540,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_475": {
									"entryPoint": 2607,
									"id": 475,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnNFT_1853": {
									"entryPoint": 6088,
									"id": 1853,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@cancelLoan_1941": {
									"entryPoint": 4157,
									"id": 1941,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@checkDefault_1980": {
									"entryPoint": 2701,
									"id": 1980,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_1588": {
									"entryPoint": 2440,
									"id": 1588,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isNFTBurned_1888": {
									"entryPoint": 4588,
									"id": 1888,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@issueLoan_1703": {
									"entryPoint": 1412,
									"id": 1703,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@kycVerified_1494": {
									"entryPoint": 3150,
									"id": 1494,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@loans_1490": {
									"entryPoint": 4826,
									"id": 1490,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_435": {
									"entryPoint": 1225,
									"id": 435,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nextLoanId_1497": {
									"entryPoint": 2960,
									"id": 1497,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nextTokenId_1460": {
									"entryPoint": 2695,
									"id": 1460,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 2966,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 2676,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@repayLoan_1815": {
									"entryPoint": 3279,
									"id": 1815,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@safeTransferFrom_1065": {
									"entryPoint": 6762,
									"id": 1065,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_1038": {
									"entryPoint": 7429,
									"id": 1038,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@symbol_444": {
									"entryPoint": 3006,
									"id": 444,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@timeUntilDue_2011": {
									"entryPoint": 3179,
									"id": 2011,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_462": {
									"entryPoint": 1403,
									"id": 462,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_572": {
									"entryPoint": 2394,
									"id": 572,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 5164,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_499": {
									"entryPoint": 3245,
									"id": 499,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@verifyKYC_1579": {
									"entryPoint": 2444,
									"id": 1579,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 8356,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 8421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8594,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_string_memory_ptr": {
									"entryPoint": 8466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_012f6a3f83e4cc86f0cf1682e12d7740f32dd3e177b248400863dc8750bb6121_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_105e73626a7e497364218351d5a4f17588827e87508fa24d8078e82a25737496_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3fff4684e62df955459aa4d38296cd5485059b1bcadaa915955ad9bd719f3844_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4d80d3094575a659c46b7e44006980a5dd7955bb1e180e936b9bc133c4f8218f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6311301fb3b87173647430fa47d57a08f88ecb228c291c7a22b64d3d67bfd616_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_83847a01f353647392b24bf89240026d74573a39de2b84d6265cef1478825a96_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a088ab1f5c37ff63830f8ba110e314fea69e930646a4a57be513c9eb44c36474_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10675,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e192d299a97f125a942ab2d9468382b9cac83264907053cf28511765133e0251_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e8ace920544dc1be56db4376a060214d1b3ad04505f6a4258960ceec2ae8d913_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ea61514b076355fd74cc868f0a530b4816a48e9424c44b3218f6eaf917d3d18e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ee10fd3130e11f66c5668ce4a72b75e62fb1c6c3bf42e0daa0866d6aebb323c9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 8686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8827,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11571,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool_t_bool_t_uint256_t_bool_t_string_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool_t_bool_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8914,
									"id": null,
									"parameterSlots": 13,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11624,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 11518,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8101,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_012f6a3f83e4cc86f0cf1682e12d7740f32dd3e177b248400863dc8750bb6121__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_105e73626a7e497364218351d5a4f17588827e87508fa24d8078e82a25737496__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3fff4684e62df955459aa4d38296cd5485059b1bcadaa915955ad9bd719f3844__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4d80d3094575a659c46b7e44006980a5dd7955bb1e180e936b9bc133c4f8218f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6311301fb3b87173647430fa47d57a08f88ecb228c291c7a22b64d3d67bfd616__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9376,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_83847a01f353647392b24bf89240026d74573a39de2b84d6265cef1478825a96__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a088ab1f5c37ff63830f8ba110e314fea69e930646a4a57be513c9eb44c36474__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e192d299a97f125a942ab2d9468382b9cac83264907053cf28511765133e0251__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e8ace920544dc1be56db4376a060214d1b3ad04505f6a4258960ceec2ae8d913__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ea61514b076355fd74cc868f0a530b4816a48e9424c44b3218f6eaf917d3d18e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ee10fd3130e11f66c5668ce4a72b75e62fb1c6c3bf42e0daa0866d6aebb323c9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10362,
									"id": null,
									"parameterSlots": 9,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 8701,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8268,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7855,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 8294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 9742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7711,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 10739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 10018,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 7903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8075,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7872,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7962,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 8674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 9984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 9877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 10155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 8342,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7737,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 9760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 9150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 10128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 9868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 9555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 10100,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9510,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9105,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8174,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 9910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8166,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 8170,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7868,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7864,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7751,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 9775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 10088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 9960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_012f6a3f83e4cc86f0cf1682e12d7740f32dd3e177b248400863dc8750bb6121": {
									"entryPoint": 9198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_105e73626a7e497364218351d5a4f17588827e87508fa24d8078e82a25737496": {
									"entryPoint": 11206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3fff4684e62df955459aa4d38296cd5485059b1bcadaa915955ad9bd719f3844": {
									"entryPoint": 11102,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4d80d3094575a659c46b7e44006980a5dd7955bb1e180e936b9bc133c4f8218f": {
									"entryPoint": 10998,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6311301fb3b87173647430fa47d57a08f88ecb228c291c7a22b64d3d67bfd616": {
									"entryPoint": 11310,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d": {
									"entryPoint": 9302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_83847a01f353647392b24bf89240026d74573a39de2b84d6265cef1478825a96": {
									"entryPoint": 11414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a088ab1f5c37ff63830f8ba110e314fea69e930646a4a57be513c9eb44c36474": {
									"entryPoint": 10635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e192d299a97f125a942ab2d9468382b9cac83264907053cf28511765133e0251": {
									"entryPoint": 10493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e8ace920544dc1be56db4376a060214d1b3ad04505f6a4258960ceec2ae8d913": {
									"entryPoint": 9406,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ea61514b076355fd74cc868f0a530b4816a48e9424c44b3218f6eaf917d3d18e": {
									"entryPoint": 10790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ee10fd3130e11f66c5668ce4a72b75e62fb1c6c3bf42e0daa0866d6aebb323c9": {
									"entryPoint": 10894,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 9787,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 9919,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 9956,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:30990:12",
										"nodeType": "YulBlock",
										"src": "0:30990:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:12",
													"nodeType": "YulBlock",
													"src": "66:40:12",
													"statements": [
														{
															"nativeSrc": "77:22:12",
															"nodeType": "YulAssignment",
															"src": "77:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:12"
																},
																"nativeSrc": "87:12:12",
																"nodeType": "YulFunctionCall",
																"src": "87:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:12",
														"nodeType": "YulTypedName",
														"src": "49:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:12",
														"nodeType": "YulTypedName",
														"src": "59:6:12",
														"type": ""
													}
												],
												"src": "7:99:12"
											},
											{
												"body": {
													"nativeSrc": "208:73:12",
													"nodeType": "YulBlock",
													"src": "208:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:12"
																},
																"nativeSrc": "218:19:12",
																"nodeType": "YulFunctionCall",
																"src": "218:19:12"
															},
															"nativeSrc": "218:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:12"
														},
														{
															"nativeSrc": "246:29:12",
															"nodeType": "YulAssignment",
															"src": "246:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:12",
																		"nodeType": "YulLiteral",
																		"src": "270:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:12"
																},
																"nativeSrc": "261:14:12",
																"nodeType": "YulFunctionCall",
																"src": "261:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:12",
														"nodeType": "YulTypedName",
														"src": "180:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:12",
														"nodeType": "YulTypedName",
														"src": "185:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:12",
														"nodeType": "YulTypedName",
														"src": "196:11:12",
														"type": ""
													}
												],
												"src": "112:169:12"
											},
											{
												"body": {
													"nativeSrc": "349:77:12",
													"nodeType": "YulBlock",
													"src": "349:77:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:12"
																},
																"nativeSrc": "360:23:12",
																"nodeType": "YulFunctionCall",
																"src": "360:23:12"
															},
															"nativeSrc": "360:23:12",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:12"
																		},
																		"nativeSrc": "399:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:12",
																		"nodeType": "YulLiteral",
																		"src": "417:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:12"
																},
																"nativeSrc": "392:27:12",
																"nodeType": "YulFunctionCall",
																"src": "392:27:12"
															},
															"nativeSrc": "392:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:12",
														"nodeType": "YulTypedName",
														"src": "331:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:12",
														"nodeType": "YulTypedName",
														"src": "336:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:12",
														"nodeType": "YulTypedName",
														"src": "341:6:12",
														"type": ""
													}
												],
												"src": "287:139:12"
											},
											{
												"body": {
													"nativeSrc": "480:54:12",
													"nodeType": "YulBlock",
													"src": "480:54:12",
													"statements": [
														{
															"nativeSrc": "490:38:12",
															"nodeType": "YulAssignment",
															"src": "490:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:12",
																				"nodeType": "YulLiteral",
																				"src": "515:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:12"
																		},
																		"nativeSrc": "504:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:12",
																				"nodeType": "YulLiteral",
																				"src": "524:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:12"
																		},
																		"nativeSrc": "520:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:12"
																},
																"nativeSrc": "500:28:12",
																"nodeType": "YulFunctionCall",
																"src": "500:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:12",
														"nodeType": "YulTypedName",
														"src": "463:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:12",
														"nodeType": "YulTypedName",
														"src": "473:6:12",
														"type": ""
													}
												],
												"src": "432:102:12"
											},
											{
												"body": {
													"nativeSrc": "632:285:12",
													"nodeType": "YulBlock",
													"src": "632:285:12",
													"statements": [
														{
															"nativeSrc": "642:53:12",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:12"
																},
																"nativeSrc": "656:39:12",
																"nodeType": "YulFunctionCall",
																"src": "656:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:12",
																	"nodeType": "YulTypedName",
																	"src": "646:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:12",
															"nodeType": "YulAssignment",
															"src": "704:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:12"
																},
																"nativeSrc": "711:71:12",
																"nodeType": "YulFunctionCall",
																"src": "711:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:12",
																				"nodeType": "YulLiteral",
																				"src": "837:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:12"
																		},
																		"nativeSrc": "826:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:12"
																},
																"nativeSrc": "791:65:12",
																"nodeType": "YulFunctionCall",
																"src": "791:65:12"
															},
															"nativeSrc": "791:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:12"
														},
														{
															"nativeSrc": "865:46:12",
															"nodeType": "YulAssignment",
															"src": "865:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:12"
																		},
																		"nativeSrc": "881:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:12"
																},
																"nativeSrc": "872:39:12",
																"nodeType": "YulFunctionCall",
																"src": "872:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:12",
														"nodeType": "YulTypedName",
														"src": "613:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:12",
														"nodeType": "YulTypedName",
														"src": "620:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:12",
														"nodeType": "YulTypedName",
														"src": "628:3:12",
														"type": ""
													}
												],
												"src": "540:377:12"
											},
											{
												"body": {
													"nativeSrc": "1041:195:12",
													"nodeType": "YulBlock",
													"src": "1041:195:12",
													"statements": [
														{
															"nativeSrc": "1051:26:12",
															"nodeType": "YulAssignment",
															"src": "1051:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:12"
																},
																"nativeSrc": "1059:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:12"
																		},
																		"nativeSrc": "1094:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:12"
																		},
																		"nativeSrc": "1113:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:12"
																},
																"nativeSrc": "1087:47:12",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:12"
															},
															"nativeSrc": "1087:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:12"
														},
														{
															"nativeSrc": "1143:86:12",
															"nodeType": "YulAssignment",
															"src": "1143:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:12"
																},
																"nativeSrc": "1151:78:12",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:12",
														"nodeType": "YulTypedName",
														"src": "1013:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:12",
														"nodeType": "YulTypedName",
														"src": "1025:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:12",
														"nodeType": "YulTypedName",
														"src": "1036:4:12",
														"type": ""
													}
												],
												"src": "923:313:12"
											},
											{
												"body": {
													"nativeSrc": "1282:35:12",
													"nodeType": "YulBlock",
													"src": "1282:35:12",
													"statements": [
														{
															"nativeSrc": "1292:19:12",
															"nodeType": "YulAssignment",
															"src": "1292:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:12"
																},
																"nativeSrc": "1302:9:12",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:12",
														"nodeType": "YulTypedName",
														"src": "1275:6:12",
														"type": ""
													}
												],
												"src": "1242:75:12"
											},
											{
												"body": {
													"nativeSrc": "1412:28:12",
													"nodeType": "YulBlock",
													"src": "1412:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:12"
																},
																"nativeSrc": "1422:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:12"
															},
															"nativeSrc": "1422:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:12"
											},
											{
												"body": {
													"nativeSrc": "1535:28:12",
													"nodeType": "YulBlock",
													"src": "1535:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:12"
																},
																"nativeSrc": "1545:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:12"
															},
															"nativeSrc": "1545:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:12"
											},
											{
												"body": {
													"nativeSrc": "1614:81:12",
													"nodeType": "YulBlock",
													"src": "1614:81:12",
													"statements": [
														{
															"nativeSrc": "1624:65:12",
															"nodeType": "YulAssignment",
															"src": "1624:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:12",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:12"
																},
																"nativeSrc": "1635:54:12",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:12",
														"nodeType": "YulTypedName",
														"src": "1596:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:12",
														"nodeType": "YulTypedName",
														"src": "1606:7:12",
														"type": ""
													}
												],
												"src": "1569:126:12"
											},
											{
												"body": {
													"nativeSrc": "1746:51:12",
													"nodeType": "YulBlock",
													"src": "1746:51:12",
													"statements": [
														{
															"nativeSrc": "1756:35:12",
															"nodeType": "YulAssignment",
															"src": "1756:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:12"
																},
																"nativeSrc": "1767:24:12",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:12",
														"nodeType": "YulTypedName",
														"src": "1728:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:12",
														"nodeType": "YulTypedName",
														"src": "1738:7:12",
														"type": ""
													}
												],
												"src": "1701:96:12"
											},
											{
												"body": {
													"nativeSrc": "1846:79:12",
													"nodeType": "YulBlock",
													"src": "1846:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:12",
																"nodeType": "YulBlock",
																"src": "1903:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:12"
																			},
																			"nativeSrc": "1905:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:12"
																		},
																		"nativeSrc": "1905:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:12"
																				},
																				"nativeSrc": "1876:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:12"
																		},
																		"nativeSrc": "1866:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:12"
																},
																"nativeSrc": "1859:43:12",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:12"
															},
															"nativeSrc": "1856:63:12",
															"nodeType": "YulIf",
															"src": "1856:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:12",
														"nodeType": "YulTypedName",
														"src": "1839:5:12",
														"type": ""
													}
												],
												"src": "1803:122:12"
											},
											{
												"body": {
													"nativeSrc": "1983:87:12",
													"nodeType": "YulBlock",
													"src": "1983:87:12",
													"statements": [
														{
															"nativeSrc": "1993:29:12",
															"nodeType": "YulAssignment",
															"src": "1993:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:12"
																},
																"nativeSrc": "2002:20:12",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:12"
																},
																"nativeSrc": "2031:33:12",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:12"
															},
															"nativeSrc": "2031:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:12",
														"nodeType": "YulTypedName",
														"src": "1961:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:12",
														"nodeType": "YulTypedName",
														"src": "1969:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:12",
														"nodeType": "YulTypedName",
														"src": "1977:5:12",
														"type": ""
													}
												],
												"src": "1931:139:12"
											},
											{
												"body": {
													"nativeSrc": "2121:32:12",
													"nodeType": "YulBlock",
													"src": "2121:32:12",
													"statements": [
														{
															"nativeSrc": "2131:16:12",
															"nodeType": "YulAssignment",
															"src": "2131:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:12",
																"nodeType": "YulIdentifier",
																"src": "2142:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:12",
														"nodeType": "YulTypedName",
														"src": "2103:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:12",
														"nodeType": "YulTypedName",
														"src": "2113:7:12",
														"type": ""
													}
												],
												"src": "2076:77:12"
											},
											{
												"body": {
													"nativeSrc": "2202:79:12",
													"nodeType": "YulBlock",
													"src": "2202:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:12",
																"nodeType": "YulBlock",
																"src": "2259:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:12"
																			},
																			"nativeSrc": "2261:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:12"
																		},
																		"nativeSrc": "2261:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:12"
																				},
																				"nativeSrc": "2232:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:12"
																		},
																		"nativeSrc": "2222:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:12"
																},
																"nativeSrc": "2215:43:12",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:12"
															},
															"nativeSrc": "2212:63:12",
															"nodeType": "YulIf",
															"src": "2212:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:12",
														"nodeType": "YulTypedName",
														"src": "2195:5:12",
														"type": ""
													}
												],
												"src": "2159:122:12"
											},
											{
												"body": {
													"nativeSrc": "2339:87:12",
													"nodeType": "YulBlock",
													"src": "2339:87:12",
													"statements": [
														{
															"nativeSrc": "2349:29:12",
															"nodeType": "YulAssignment",
															"src": "2349:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:12"
																},
																"nativeSrc": "2358:20:12",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:12"
																},
																"nativeSrc": "2387:33:12",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:12"
															},
															"nativeSrc": "2387:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:12",
														"nodeType": "YulTypedName",
														"src": "2317:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:12",
														"nodeType": "YulTypedName",
														"src": "2325:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:12",
														"nodeType": "YulTypedName",
														"src": "2333:5:12",
														"type": ""
													}
												],
												"src": "2287:139:12"
											},
											{
												"body": {
													"nativeSrc": "2515:391:12",
													"nodeType": "YulBlock",
													"src": "2515:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:12",
																"nodeType": "YulBlock",
																"src": "2561:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:12"
																			},
																			"nativeSrc": "2563:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:12"
																		},
																		"nativeSrc": "2563:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:12"
																		},
																		"nativeSrc": "2532:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:12"
																},
																"nativeSrc": "2528:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:12"
															},
															"nativeSrc": "2525:119:12",
															"nodeType": "YulIf",
															"src": "2525:119:12"
														},
														{
															"nativeSrc": "2654:117:12",
															"nodeType": "YulBlock",
															"src": "2654:117:12",
															"statements": [
																{
																	"nativeSrc": "2669:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:12",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:12"
																				},
																				"nativeSrc": "2729:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:12"
																		},
																		"nativeSrc": "2708:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:12",
															"nodeType": "YulBlock",
															"src": "2781:118:12",
															"statements": [
																{
																	"nativeSrc": "2796:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:12",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:12"
																				},
																				"nativeSrc": "2857:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:12"
																		},
																		"nativeSrc": "2836:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:12",
														"nodeType": "YulTypedName",
														"src": "2477:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:12",
														"nodeType": "YulTypedName",
														"src": "2488:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:12",
														"nodeType": "YulTypedName",
														"src": "2500:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:12",
														"nodeType": "YulTypedName",
														"src": "2508:6:12",
														"type": ""
													}
												],
												"src": "2432:474:12"
											},
											{
												"body": {
													"nativeSrc": "2954:48:12",
													"nodeType": "YulBlock",
													"src": "2954:48:12",
													"statements": [
														{
															"nativeSrc": "2964:32:12",
															"nodeType": "YulAssignment",
															"src": "2964:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:12"
																		},
																		"nativeSrc": "2982:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:12"
																},
																"nativeSrc": "2975:21:12",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:12",
														"nodeType": "YulTypedName",
														"src": "2936:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:12",
														"nodeType": "YulTypedName",
														"src": "2946:7:12",
														"type": ""
													}
												],
												"src": "2912:90:12"
											},
											{
												"body": {
													"nativeSrc": "3067:50:12",
													"nodeType": "YulBlock",
													"src": "3067:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:12"
																		},
																		"nativeSrc": "3089:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:12"
																},
																"nativeSrc": "3077:34:12",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:12"
															},
															"nativeSrc": "3077:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:12",
														"nodeType": "YulTypedName",
														"src": "3055:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:12",
														"nodeType": "YulTypedName",
														"src": "3062:3:12",
														"type": ""
													}
												],
												"src": "3008:109:12"
											},
											{
												"body": {
													"nativeSrc": "3215:118:12",
													"nodeType": "YulBlock",
													"src": "3215:118:12",
													"statements": [
														{
															"nativeSrc": "3225:26:12",
															"nodeType": "YulAssignment",
															"src": "3225:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:12"
																},
																"nativeSrc": "3233:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:12"
																		},
																		"nativeSrc": "3308:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:12"
																},
																"nativeSrc": "3261:65:12",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:12"
															},
															"nativeSrc": "3261:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:12",
														"nodeType": "YulTypedName",
														"src": "3187:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:12",
														"nodeType": "YulTypedName",
														"src": "3199:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:12",
														"nodeType": "YulTypedName",
														"src": "3210:4:12",
														"type": ""
													}
												],
												"src": "3123:210:12"
											},
											{
												"body": {
													"nativeSrc": "3404:53:12",
													"nodeType": "YulBlock",
													"src": "3404:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:12"
																		},
																		"nativeSrc": "3426:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:12"
																},
																"nativeSrc": "3414:37:12",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:12"
															},
															"nativeSrc": "3414:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:12",
														"nodeType": "YulTypedName",
														"src": "3392:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:12",
														"nodeType": "YulTypedName",
														"src": "3399:3:12",
														"type": ""
													}
												],
												"src": "3339:118:12"
											},
											{
												"body": {
													"nativeSrc": "3561:124:12",
													"nodeType": "YulBlock",
													"src": "3561:124:12",
													"statements": [
														{
															"nativeSrc": "3571:26:12",
															"nodeType": "YulAssignment",
															"src": "3571:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:12"
																},
																"nativeSrc": "3579:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:12"
																		},
																		"nativeSrc": "3660:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:12"
																},
																"nativeSrc": "3607:71:12",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:12"
															},
															"nativeSrc": "3607:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:12",
														"nodeType": "YulTypedName",
														"src": "3533:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:12",
														"nodeType": "YulTypedName",
														"src": "3545:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:12",
														"nodeType": "YulTypedName",
														"src": "3556:4:12",
														"type": ""
													}
												],
												"src": "3463:222:12"
											},
											{
												"body": {
													"nativeSrc": "3780:28:12",
													"nodeType": "YulBlock",
													"src": "3780:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3797:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3797:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3800:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3800:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3790:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3790:6:12"
																},
																"nativeSrc": "3790:12:12",
																"nodeType": "YulFunctionCall",
																"src": "3790:12:12"
															},
															"nativeSrc": "3790:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "3790:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "3691:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "3691:117:12"
											},
											{
												"body": {
													"nativeSrc": "3903:28:12",
													"nodeType": "YulBlock",
													"src": "3903:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3920:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3920:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3923:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3923:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3913:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3913:6:12"
																},
																"nativeSrc": "3913:12:12",
																"nodeType": "YulFunctionCall",
																"src": "3913:12:12"
															},
															"nativeSrc": "3913:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "3913:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "3814:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "3814:117:12"
											},
											{
												"body": {
													"nativeSrc": "3965:152:12",
													"nodeType": "YulBlock",
													"src": "3965:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3982:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3982:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3985:77:12",
																		"nodeType": "YulLiteral",
																		"src": "3985:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3975:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3975:6:12"
																},
																"nativeSrc": "3975:88:12",
																"nodeType": "YulFunctionCall",
																"src": "3975:88:12"
															},
															"nativeSrc": "3975:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "3975:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4079:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4079:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4082:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4082:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4072:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4072:6:12"
																},
																"nativeSrc": "4072:15:12",
																"nodeType": "YulFunctionCall",
																"src": "4072:15:12"
															},
															"nativeSrc": "4072:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "4072:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4103:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4103:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4106:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4106:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4096:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4096:6:12"
																},
																"nativeSrc": "4096:15:12",
																"nodeType": "YulFunctionCall",
																"src": "4096:15:12"
															},
															"nativeSrc": "4096:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "4096:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3937:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "3937:180:12"
											},
											{
												"body": {
													"nativeSrc": "4166:238:12",
													"nodeType": "YulBlock",
													"src": "4166:238:12",
													"statements": [
														{
															"nativeSrc": "4176:58:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4176:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4198:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4198:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "4228:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "4228:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "4206:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "4206:21:12"
																		},
																		"nativeSrc": "4206:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4206:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4194:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4194:3:12"
																},
																"nativeSrc": "4194:40:12",
																"nodeType": "YulFunctionCall",
																"src": "4194:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "4180:10:12",
																	"nodeType": "YulTypedName",
																	"src": "4180:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4345:22:12",
																"nodeType": "YulBlock",
																"src": "4345:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4347:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "4347:16:12"
																			},
																			"nativeSrc": "4347:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4347:18:12"
																		},
																		"nativeSrc": "4347:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4347:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4288:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "4288:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4300:18:12",
																				"nodeType": "YulLiteral",
																				"src": "4300:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4285:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4285:2:12"
																		},
																		"nativeSrc": "4285:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4285:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4324:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "4324:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "4336:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4336:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4321:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4321:2:12"
																		},
																		"nativeSrc": "4321:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4321:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4282:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4282:2:12"
																},
																"nativeSrc": "4282:62:12",
																"nodeType": "YulFunctionCall",
																"src": "4282:62:12"
															},
															"nativeSrc": "4279:88:12",
															"nodeType": "YulIf",
															"src": "4279:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4383:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4383:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4387:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "4387:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4376:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4376:6:12"
																},
																"nativeSrc": "4376:22:12",
																"nodeType": "YulFunctionCall",
																"src": "4376:22:12"
															},
															"nativeSrc": "4376:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "4376:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "4123:281:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4152:6:12",
														"nodeType": "YulTypedName",
														"src": "4152:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "4160:4:12",
														"nodeType": "YulTypedName",
														"src": "4160:4:12",
														"type": ""
													}
												],
												"src": "4123:281:12"
											},
											{
												"body": {
													"nativeSrc": "4451:88:12",
													"nodeType": "YulBlock",
													"src": "4451:88:12",
													"statements": [
														{
															"nativeSrc": "4461:30:12",
															"nodeType": "YulAssignment",
															"src": "4461:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "4471:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "4471:18:12"
																},
																"nativeSrc": "4471:20:12",
																"nodeType": "YulFunctionCall",
																"src": "4471:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "4461:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4461:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4520:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4520:6:12"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "4528:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4528:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "4500:19:12",
																	"nodeType": "YulIdentifier",
																	"src": "4500:19:12"
																},
																"nativeSrc": "4500:33:12",
																"nodeType": "YulFunctionCall",
																"src": "4500:33:12"
															},
															"nativeSrc": "4500:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "4500:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "4410:129:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "4435:4:12",
														"nodeType": "YulTypedName",
														"src": "4435:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "4444:6:12",
														"nodeType": "YulTypedName",
														"src": "4444:6:12",
														"type": ""
													}
												],
												"src": "4410:129:12"
											},
											{
												"body": {
													"nativeSrc": "4612:241:12",
													"nodeType": "YulBlock",
													"src": "4612:241:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4717:22:12",
																"nodeType": "YulBlock",
																"src": "4717:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4719:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "4719:16:12"
																			},
																			"nativeSrc": "4719:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4719:18:12"
																		},
																		"nativeSrc": "4719:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4719:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4689:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4689:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4697:18:12",
																		"nodeType": "YulLiteral",
																		"src": "4697:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4686:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4686:2:12"
																},
																"nativeSrc": "4686:30:12",
																"nodeType": "YulFunctionCall",
																"src": "4686:30:12"
															},
															"nativeSrc": "4683:56:12",
															"nodeType": "YulIf",
															"src": "4683:56:12"
														},
														{
															"nativeSrc": "4749:37:12",
															"nodeType": "YulAssignment",
															"src": "4749:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4779:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4779:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "4757:21:12",
																	"nodeType": "YulIdentifier",
																	"src": "4757:21:12"
																},
																"nativeSrc": "4757:29:12",
																"nodeType": "YulFunctionCall",
																"src": "4757:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "4749:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4749:4:12"
																}
															]
														},
														{
															"nativeSrc": "4823:23:12",
															"nodeType": "YulAssignment",
															"src": "4823:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "4835:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4835:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4841:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4841:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4831:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4831:3:12"
																},
																"nativeSrc": "4831:15:12",
																"nodeType": "YulFunctionCall",
																"src": "4831:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "4823:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4823:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "4545:308:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "4596:6:12",
														"nodeType": "YulTypedName",
														"src": "4596:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "4607:4:12",
														"nodeType": "YulTypedName",
														"src": "4607:4:12",
														"type": ""
													}
												],
												"src": "4545:308:12"
											},
											{
												"body": {
													"nativeSrc": "4923:84:12",
													"nodeType": "YulBlock",
													"src": "4923:84:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "4947:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4947:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "4952:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4952:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4957:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4957:6:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "4934:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "4934:12:12"
																},
																"nativeSrc": "4934:30:12",
																"nodeType": "YulFunctionCall",
																"src": "4934:30:12"
															},
															"nativeSrc": "4934:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "4934:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "4984:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "4984:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4989:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4989:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4980:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4980:3:12"
																		},
																		"nativeSrc": "4980:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4980:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4998:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4998:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4973:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4973:6:12"
																},
																"nativeSrc": "4973:27:12",
																"nodeType": "YulFunctionCall",
																"src": "4973:27:12"
															},
															"nativeSrc": "4973:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "4973:27:12"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "4859:148:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "4905:3:12",
														"nodeType": "YulTypedName",
														"src": "4905:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "4910:3:12",
														"nodeType": "YulTypedName",
														"src": "4910:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4915:6:12",
														"nodeType": "YulTypedName",
														"src": "4915:6:12",
														"type": ""
													}
												],
												"src": "4859:148:12"
											},
											{
												"body": {
													"nativeSrc": "5097:341:12",
													"nodeType": "YulBlock",
													"src": "5097:341:12",
													"statements": [
														{
															"nativeSrc": "5107:75:12",
															"nodeType": "YulAssignment",
															"src": "5107:75:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5174:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5174:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "5132:41:12",
																			"nodeType": "YulIdentifier",
																			"src": "5132:41:12"
																		},
																		"nativeSrc": "5132:49:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5132:49:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "5116:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "5116:15:12"
																},
																"nativeSrc": "5116:66:12",
																"nodeType": "YulFunctionCall",
																"src": "5116:66:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "5107:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "5107:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "5198:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5198:5:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5205:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5205:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5191:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5191:6:12"
																},
																"nativeSrc": "5191:21:12",
																"nodeType": "YulFunctionCall",
																"src": "5191:21:12"
															},
															"nativeSrc": "5191:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "5191:21:12"
														},
														{
															"nativeSrc": "5221:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5221:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "5236:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5236:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5243:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5243:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5232:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5232:3:12"
																},
																"nativeSrc": "5232:16:12",
																"nodeType": "YulFunctionCall",
																"src": "5232:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "5225:3:12",
																	"nodeType": "YulTypedName",
																	"src": "5225:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5286:83:12",
																"nodeType": "YulBlock",
																"src": "5286:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "5288:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "5288:77:12"
																			},
																			"nativeSrc": "5288:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5288:79:12"
																		},
																		"nativeSrc": "5288:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5288:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "5267:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "5267:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "5272:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5272:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5263:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5263:3:12"
																		},
																		"nativeSrc": "5263:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5263:16:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5281:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5281:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5260:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5260:2:12"
																},
																"nativeSrc": "5260:25:12",
																"nodeType": "YulFunctionCall",
																"src": "5260:25:12"
															},
															"nativeSrc": "5257:112:12",
															"nodeType": "YulIf",
															"src": "5257:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5415:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5415:3:12"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "5420:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5420:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5425:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5425:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "5378:36:12",
																	"nodeType": "YulIdentifier",
																	"src": "5378:36:12"
																},
																"nativeSrc": "5378:54:12",
																"nodeType": "YulFunctionCall",
																"src": "5378:54:12"
															},
															"nativeSrc": "5378:54:12",
															"nodeType": "YulExpressionStatement",
															"src": "5378:54:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "5013:425:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5070:3:12",
														"nodeType": "YulTypedName",
														"src": "5070:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5075:6:12",
														"nodeType": "YulTypedName",
														"src": "5075:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5083:3:12",
														"nodeType": "YulTypedName",
														"src": "5083:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "5091:5:12",
														"nodeType": "YulTypedName",
														"src": "5091:5:12",
														"type": ""
													}
												],
												"src": "5013:425:12"
											},
											{
												"body": {
													"nativeSrc": "5520:278:12",
													"nodeType": "YulBlock",
													"src": "5520:278:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5569:83:12",
																"nodeType": "YulBlock",
																"src": "5569:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "5571:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "5571:77:12"
																			},
																			"nativeSrc": "5571:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5571:79:12"
																		},
																		"nativeSrc": "5571:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5571:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "5548:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5548:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5556:4:12",
																						"nodeType": "YulLiteral",
																						"src": "5556:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5544:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5544:3:12"
																				},
																				"nativeSrc": "5544:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5544:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "5563:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "5563:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5540:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5540:3:12"
																		},
																		"nativeSrc": "5540:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5540:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5533:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5533:6:12"
																},
																"nativeSrc": "5533:35:12",
																"nodeType": "YulFunctionCall",
																"src": "5533:35:12"
															},
															"nativeSrc": "5530:122:12",
															"nodeType": "YulIf",
															"src": "5530:122:12"
														},
														{
															"nativeSrc": "5661:34:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5661:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5688:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5688:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5675:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "5675:12:12"
																},
																"nativeSrc": "5675:20:12",
																"nodeType": "YulFunctionCall",
																"src": "5675:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5665:6:12",
																	"nodeType": "YulTypedName",
																	"src": "5665:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5704:88:12",
															"nodeType": "YulAssignment",
															"src": "5704:88:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5765:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5765:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5773:4:12",
																				"nodeType": "YulLiteral",
																				"src": "5773:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5761:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5761:3:12"
																		},
																		"nativeSrc": "5761:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5761:17:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5780:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5788:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5788:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "5713:47:12",
																	"nodeType": "YulIdentifier",
																	"src": "5713:47:12"
																},
																"nativeSrc": "5713:79:12",
																"nodeType": "YulFunctionCall",
																"src": "5713:79:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "5704:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "5704:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "5458:340:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5498:6:12",
														"nodeType": "YulTypedName",
														"src": "5498:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5506:3:12",
														"nodeType": "YulTypedName",
														"src": "5506:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "5514:5:12",
														"nodeType": "YulTypedName",
														"src": "5514:5:12",
														"type": ""
													}
												],
												"src": "5458:340:12"
											},
											{
												"body": {
													"nativeSrc": "5931:818:12",
													"nodeType": "YulBlock",
													"src": "5931:818:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5978:83:12",
																"nodeType": "YulBlock",
																"src": "5978:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5980:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "5980:77:12"
																			},
																			"nativeSrc": "5980:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5980:79:12"
																		},
																		"nativeSrc": "5980:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5980:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5952:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5952:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5961:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5961:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5948:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5948:3:12"
																		},
																		"nativeSrc": "5948:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5948:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5973:3:12",
																		"nodeType": "YulLiteral",
																		"src": "5973:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5944:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5944:3:12"
																},
																"nativeSrc": "5944:33:12",
																"nodeType": "YulFunctionCall",
																"src": "5944:33:12"
															},
															"nativeSrc": "5941:120:12",
															"nodeType": "YulIf",
															"src": "5941:120:12"
														},
														{
															"nativeSrc": "6071:117:12",
															"nodeType": "YulBlock",
															"src": "6071:117:12",
															"statements": [
																{
																	"nativeSrc": "6086:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6086:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6100:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6100:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6090:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6090:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6115:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6115:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6150:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6150:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6161:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6161:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6146:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6146:3:12"
																				},
																				"nativeSrc": "6146:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6146:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6170:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6170:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6125:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6125:20:12"
																		},
																		"nativeSrc": "6125:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6125:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6115:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6115:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6198:118:12",
															"nodeType": "YulBlock",
															"src": "6198:118:12",
															"statements": [
																{
																	"nativeSrc": "6213:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6213:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6227:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6227:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6217:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6217:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6243:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6243:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6278:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6278:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6289:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6289:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6274:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6274:3:12"
																				},
																				"nativeSrc": "6274:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6274:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6298:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6298:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6253:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6253:20:12"
																		},
																		"nativeSrc": "6253:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6253:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6243:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6243:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6326:118:12",
															"nodeType": "YulBlock",
															"src": "6326:118:12",
															"statements": [
																{
																	"nativeSrc": "6341:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6341:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6355:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6355:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6345:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6345:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6371:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6371:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6406:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6406:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6417:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6417:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6402:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6402:3:12"
																				},
																				"nativeSrc": "6402:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6402:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6426:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6426:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6381:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6381:20:12"
																		},
																		"nativeSrc": "6381:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6381:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6371:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6371:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6454:288:12",
															"nodeType": "YulBlock",
															"src": "6454:288:12",
															"statements": [
																{
																	"nativeSrc": "6469:46:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6469:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6500:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6500:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6511:2:12",
																						"nodeType": "YulLiteral",
																						"src": "6511:2:12",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6496:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6496:3:12"
																				},
																				"nativeSrc": "6496:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6496:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "6483:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "6483:12:12"
																		},
																		"nativeSrc": "6483:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6483:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6473:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6473:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "6562:83:12",
																		"nodeType": "YulBlock",
																		"src": "6562:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "6564:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "6564:77:12"
																					},
																					"nativeSrc": "6564:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "6564:79:12"
																				},
																				"nativeSrc": "6564:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "6564:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6534:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6534:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6542:18:12",
																				"nodeType": "YulLiteral",
																				"src": "6542:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6531:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "6531:2:12"
																		},
																		"nativeSrc": "6531:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6531:30:12"
																	},
																	"nativeSrc": "6528:117:12",
																	"nodeType": "YulIf",
																	"src": "6528:117:12"
																},
																{
																	"nativeSrc": "6659:73:12",
																	"nodeType": "YulAssignment",
																	"src": "6659:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6704:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6704:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6715:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6715:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6700:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6700:3:12"
																				},
																				"nativeSrc": "6700:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6700:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6724:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6724:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "6669:30:12",
																			"nodeType": "YulIdentifier",
																			"src": "6669:30:12"
																		},
																		"nativeSrc": "6669:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6669:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "6659:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6659:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_string_memory_ptr",
												"nativeSrc": "5804:945:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5877:9:12",
														"nodeType": "YulTypedName",
														"src": "5877:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5888:7:12",
														"nodeType": "YulTypedName",
														"src": "5888:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5900:6:12",
														"nodeType": "YulTypedName",
														"src": "5900:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5908:6:12",
														"nodeType": "YulTypedName",
														"src": "5908:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5916:6:12",
														"nodeType": "YulTypedName",
														"src": "5916:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5924:6:12",
														"nodeType": "YulTypedName",
														"src": "5924:6:12",
														"type": ""
													}
												],
												"src": "5804:945:12"
											},
											{
												"body": {
													"nativeSrc": "6855:519:12",
													"nodeType": "YulBlock",
													"src": "6855:519:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6901:83:12",
																"nodeType": "YulBlock",
																"src": "6901:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6903:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6903:77:12"
																			},
																			"nativeSrc": "6903:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6903:79:12"
																		},
																		"nativeSrc": "6903:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6903:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6876:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6876:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6885:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6885:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6872:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6872:3:12"
																		},
																		"nativeSrc": "6872:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6872:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6897:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6897:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6868:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6868:3:12"
																},
																"nativeSrc": "6868:32:12",
																"nodeType": "YulFunctionCall",
																"src": "6868:32:12"
															},
															"nativeSrc": "6865:119:12",
															"nodeType": "YulIf",
															"src": "6865:119:12"
														},
														{
															"nativeSrc": "6994:117:12",
															"nodeType": "YulBlock",
															"src": "6994:117:12",
															"statements": [
																{
																	"nativeSrc": "7009:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7009:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7023:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7023:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7013:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7013:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7038:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7038:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7073:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7073:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7084:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7084:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7069:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7069:3:12"
																				},
																				"nativeSrc": "7069:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7069:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7093:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7093:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7048:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7048:20:12"
																		},
																		"nativeSrc": "7048:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7048:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7038:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7038:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7121:118:12",
															"nodeType": "YulBlock",
															"src": "7121:118:12",
															"statements": [
																{
																	"nativeSrc": "7136:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7136:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7150:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7150:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7140:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7140:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7166:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7166:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7201:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7201:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7212:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7212:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7197:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7197:3:12"
																				},
																				"nativeSrc": "7197:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7197:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7221:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7221:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7176:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7176:20:12"
																		},
																		"nativeSrc": "7176:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7176:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7166:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7166:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7249:118:12",
															"nodeType": "YulBlock",
															"src": "7249:118:12",
															"statements": [
																{
																	"nativeSrc": "7264:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7264:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7278:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7278:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7268:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7268:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7294:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7294:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7329:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7329:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7340:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7340:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7325:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7325:3:12"
																				},
																				"nativeSrc": "7325:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7325:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7349:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7349:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7304:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7304:20:12"
																		},
																		"nativeSrc": "7304:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7304:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7294:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7294:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "6755:619:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6809:9:12",
														"nodeType": "YulTypedName",
														"src": "6809:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6820:7:12",
														"nodeType": "YulTypedName",
														"src": "6820:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6832:6:12",
														"nodeType": "YulTypedName",
														"src": "6832:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6840:6:12",
														"nodeType": "YulTypedName",
														"src": "6840:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6848:6:12",
														"nodeType": "YulTypedName",
														"src": "6848:6:12",
														"type": ""
													}
												],
												"src": "6755:619:12"
											},
											{
												"body": {
													"nativeSrc": "7423:43:12",
													"nodeType": "YulBlock",
													"src": "7423:43:12",
													"statements": [
														{
															"nativeSrc": "7433:27:12",
															"nodeType": "YulAssignment",
															"src": "7433:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7448:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7448:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7455:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7455:4:12",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7444:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7444:3:12"
																},
																"nativeSrc": "7444:16:12",
																"nodeType": "YulFunctionCall",
																"src": "7444:16:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7433:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "7433:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "7380:86:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7405:5:12",
														"nodeType": "YulTypedName",
														"src": "7405:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7415:7:12",
														"nodeType": "YulTypedName",
														"src": "7415:7:12",
														"type": ""
													}
												],
												"src": "7380:86:12"
											},
											{
												"body": {
													"nativeSrc": "7533:51:12",
													"nodeType": "YulBlock",
													"src": "7533:51:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7550:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7550:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7571:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "7571:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "7555:15:12",
																			"nodeType": "YulIdentifier",
																			"src": "7555:15:12"
																		},
																		"nativeSrc": "7555:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7555:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7543:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7543:6:12"
																},
																"nativeSrc": "7543:35:12",
																"nodeType": "YulFunctionCall",
																"src": "7543:35:12"
															},
															"nativeSrc": "7543:35:12",
															"nodeType": "YulExpressionStatement",
															"src": "7543:35:12"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "7472:112:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7521:5:12",
														"nodeType": "YulTypedName",
														"src": "7521:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7528:3:12",
														"nodeType": "YulTypedName",
														"src": "7528:3:12",
														"type": ""
													}
												],
												"src": "7472:112:12"
											},
											{
												"body": {
													"nativeSrc": "7684:120:12",
													"nodeType": "YulBlock",
													"src": "7684:120:12",
													"statements": [
														{
															"nativeSrc": "7694:26:12",
															"nodeType": "YulAssignment",
															"src": "7694:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7706:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7706:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7717:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7717:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7702:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7702:3:12"
																},
																"nativeSrc": "7702:18:12",
																"nodeType": "YulFunctionCall",
																"src": "7702:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7694:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7694:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7770:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7770:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7783:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7783:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7794:1:12",
																				"nodeType": "YulLiteral",
																				"src": "7794:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7779:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7779:3:12"
																		},
																		"nativeSrc": "7779:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7779:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "7730:39:12",
																	"nodeType": "YulIdentifier",
																	"src": "7730:39:12"
																},
																"nativeSrc": "7730:67:12",
																"nodeType": "YulFunctionCall",
																"src": "7730:67:12"
															},
															"nativeSrc": "7730:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "7730:67:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "7590:214:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7656:9:12",
														"nodeType": "YulTypedName",
														"src": "7656:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7668:6:12",
														"nodeType": "YulTypedName",
														"src": "7668:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7679:4:12",
														"nodeType": "YulTypedName",
														"src": "7679:4:12",
														"type": ""
													}
												],
												"src": "7590:214:12"
											},
											{
												"body": {
													"nativeSrc": "7876:263:12",
													"nodeType": "YulBlock",
													"src": "7876:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7922:83:12",
																"nodeType": "YulBlock",
																"src": "7922:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7924:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7924:77:12"
																			},
																			"nativeSrc": "7924:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7924:79:12"
																		},
																		"nativeSrc": "7924:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7924:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7897:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7897:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7906:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7906:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7893:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7893:3:12"
																		},
																		"nativeSrc": "7893:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7893:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7918:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7918:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7889:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7889:3:12"
																},
																"nativeSrc": "7889:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7889:32:12"
															},
															"nativeSrc": "7886:119:12",
															"nodeType": "YulIf",
															"src": "7886:119:12"
														},
														{
															"nativeSrc": "8015:117:12",
															"nodeType": "YulBlock",
															"src": "8015:117:12",
															"statements": [
																{
																	"nativeSrc": "8030:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8030:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8044:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8044:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8034:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8034:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8059:63:12",
																	"nodeType": "YulAssignment",
																	"src": "8059:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8094:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8094:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8105:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8105:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8090:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8090:3:12"
																				},
																				"nativeSrc": "8090:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8090:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8114:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8114:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8069:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "8069:20:12"
																		},
																		"nativeSrc": "8069:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8069:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8059:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8059:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7810:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7846:9:12",
														"nodeType": "YulTypedName",
														"src": "7846:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7857:7:12",
														"nodeType": "YulTypedName",
														"src": "7857:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7869:6:12",
														"nodeType": "YulTypedName",
														"src": "7869:6:12",
														"type": ""
													}
												],
												"src": "7810:329:12"
											},
											{
												"body": {
													"nativeSrc": "8211:263:12",
													"nodeType": "YulBlock",
													"src": "8211:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "8257:83:12",
																"nodeType": "YulBlock",
																"src": "8257:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8259:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "8259:77:12"
																			},
																			"nativeSrc": "8259:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8259:79:12"
																		},
																		"nativeSrc": "8259:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8259:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8232:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8232:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8241:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8241:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8228:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8228:3:12"
																		},
																		"nativeSrc": "8228:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8228:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8253:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8253:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8224:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8224:3:12"
																},
																"nativeSrc": "8224:32:12",
																"nodeType": "YulFunctionCall",
																"src": "8224:32:12"
															},
															"nativeSrc": "8221:119:12",
															"nodeType": "YulIf",
															"src": "8221:119:12"
														},
														{
															"nativeSrc": "8350:117:12",
															"nodeType": "YulBlock",
															"src": "8350:117:12",
															"statements": [
																{
																	"nativeSrc": "8365:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8365:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8379:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8379:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8369:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8369:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8394:63:12",
																	"nodeType": "YulAssignment",
																	"src": "8394:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8429:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8429:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8440:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8440:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8425:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8425:3:12"
																				},
																				"nativeSrc": "8425:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8425:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8449:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8449:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8404:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "8404:20:12"
																		},
																		"nativeSrc": "8404:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8404:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8394:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8394:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "8145:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8181:9:12",
														"nodeType": "YulTypedName",
														"src": "8181:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8192:7:12",
														"nodeType": "YulTypedName",
														"src": "8192:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8204:6:12",
														"nodeType": "YulTypedName",
														"src": "8204:6:12",
														"type": ""
													}
												],
												"src": "8145:329:12"
											},
											{
												"body": {
													"nativeSrc": "8545:53:12",
													"nodeType": "YulBlock",
													"src": "8545:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8562:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8562:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8585:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "8585:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8567:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "8567:17:12"
																		},
																		"nativeSrc": "8567:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8567:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8555:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8555:6:12"
																},
																"nativeSrc": "8555:37:12",
																"nodeType": "YulFunctionCall",
																"src": "8555:37:12"
															},
															"nativeSrc": "8555:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "8555:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8480:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8533:5:12",
														"nodeType": "YulTypedName",
														"src": "8533:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8540:3:12",
														"nodeType": "YulTypedName",
														"src": "8540:3:12",
														"type": ""
													}
												],
												"src": "8480:118:12"
											},
											{
												"body": {
													"nativeSrc": "8702:124:12",
													"nodeType": "YulBlock",
													"src": "8702:124:12",
													"statements": [
														{
															"nativeSrc": "8712:26:12",
															"nodeType": "YulAssignment",
															"src": "8712:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8724:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8724:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8735:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8735:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8720:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8720:3:12"
																},
																"nativeSrc": "8720:18:12",
																"nodeType": "YulFunctionCall",
																"src": "8720:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8712:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8712:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8792:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8792:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8805:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8805:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8816:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8816:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8801:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8801:3:12"
																		},
																		"nativeSrc": "8801:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8801:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8748:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "8748:43:12"
																},
																"nativeSrc": "8748:71:12",
																"nodeType": "YulFunctionCall",
																"src": "8748:71:12"
															},
															"nativeSrc": "8748:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "8748:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8604:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8674:9:12",
														"nodeType": "YulTypedName",
														"src": "8674:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8686:6:12",
														"nodeType": "YulTypedName",
														"src": "8686:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8697:4:12",
														"nodeType": "YulTypedName",
														"src": "8697:4:12",
														"type": ""
													}
												],
												"src": "8604:222:12"
											},
											{
												"body": {
													"nativeSrc": "8915:391:12",
													"nodeType": "YulBlock",
													"src": "8915:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "8961:83:12",
																"nodeType": "YulBlock",
																"src": "8961:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8963:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "8963:77:12"
																			},
																			"nativeSrc": "8963:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8963:79:12"
																		},
																		"nativeSrc": "8963:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8963:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8936:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8936:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8945:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8945:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8932:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8932:3:12"
																		},
																		"nativeSrc": "8932:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8932:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8957:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8957:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8928:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8928:3:12"
																},
																"nativeSrc": "8928:32:12",
																"nodeType": "YulFunctionCall",
																"src": "8928:32:12"
															},
															"nativeSrc": "8925:119:12",
															"nodeType": "YulIf",
															"src": "8925:119:12"
														},
														{
															"nativeSrc": "9054:117:12",
															"nodeType": "YulBlock",
															"src": "9054:117:12",
															"statements": [
																{
																	"nativeSrc": "9069:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9069:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9083:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9083:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9073:6:12",
																			"nodeType": "YulTypedName",
																			"src": "9073:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9098:63:12",
																	"nodeType": "YulAssignment",
																	"src": "9098:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9133:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9133:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9144:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9144:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9129:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9129:3:12"
																				},
																				"nativeSrc": "9129:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9129:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9153:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9153:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9108:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "9108:20:12"
																		},
																		"nativeSrc": "9108:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9108:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9098:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "9098:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9181:118:12",
															"nodeType": "YulBlock",
															"src": "9181:118:12",
															"statements": [
																{
																	"nativeSrc": "9196:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9196:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9210:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9210:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9200:6:12",
																			"nodeType": "YulTypedName",
																			"src": "9200:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9226:63:12",
																	"nodeType": "YulAssignment",
																	"src": "9226:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9261:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9261:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9272:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9272:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9257:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9257:3:12"
																				},
																				"nativeSrc": "9257:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9257:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9281:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9281:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9236:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "9236:20:12"
																		},
																		"nativeSrc": "9236:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9236:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9226:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "9226:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "8832:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8877:9:12",
														"nodeType": "YulTypedName",
														"src": "8877:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8888:7:12",
														"nodeType": "YulTypedName",
														"src": "8888:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8900:6:12",
														"nodeType": "YulTypedName",
														"src": "8900:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8908:6:12",
														"nodeType": "YulTypedName",
														"src": "8908:6:12",
														"type": ""
													}
												],
												"src": "8832:474:12"
											},
											{
												"body": {
													"nativeSrc": "9716:1084:12",
													"nodeType": "YulBlock",
													"src": "9716:1084:12",
													"statements": [
														{
															"nativeSrc": "9726:27:12",
															"nodeType": "YulAssignment",
															"src": "9726:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9738:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9738:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9749:3:12",
																		"nodeType": "YulLiteral",
																		"src": "9749:3:12",
																		"type": "",
																		"value": "384"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9734:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9734:3:12"
																},
																"nativeSrc": "9734:19:12",
																"nodeType": "YulFunctionCall",
																"src": "9734:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9726:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9726:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9807:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9807:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9820:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9820:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9831:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9831:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9816:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9816:3:12"
																		},
																		"nativeSrc": "9816:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9816:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9763:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "9763:43:12"
																},
																"nativeSrc": "9763:71:12",
																"nodeType": "YulFunctionCall",
																"src": "9763:71:12"
															},
															"nativeSrc": "9763:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "9763:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9888:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9888:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9901:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9901:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9912:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9912:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9897:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9897:3:12"
																		},
																		"nativeSrc": "9897:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9897:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9844:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "9844:43:12"
																},
																"nativeSrc": "9844:72:12",
																"nodeType": "YulFunctionCall",
																"src": "9844:72:12"
															},
															"nativeSrc": "9844:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "9844:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9970:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9970:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9983:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9983:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9994:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9994:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9979:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9979:3:12"
																		},
																		"nativeSrc": "9979:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9979:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9926:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "9926:43:12"
																},
																"nativeSrc": "9926:72:12",
																"nodeType": "YulFunctionCall",
																"src": "9926:72:12"
															},
															"nativeSrc": "9926:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "9926:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "10052:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10052:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10065:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10065:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10076:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10076:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10061:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10061:3:12"
																		},
																		"nativeSrc": "10061:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10061:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10008:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10008:43:12"
																},
																"nativeSrc": "10008:72:12",
																"nodeType": "YulFunctionCall",
																"src": "10008:72:12"
															},
															"nativeSrc": "10008:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "10008:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "10134:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10134:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10147:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10147:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10158:3:12",
																				"nodeType": "YulLiteral",
																				"src": "10158:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10143:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10143:3:12"
																		},
																		"nativeSrc": "10143:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10143:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10090:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10090:43:12"
																},
																"nativeSrc": "10090:73:12",
																"nodeType": "YulFunctionCall",
																"src": "10090:73:12"
															},
															"nativeSrc": "10090:73:12",
															"nodeType": "YulExpressionStatement",
															"src": "10090:73:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "10217:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10217:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10230:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10230:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10241:3:12",
																				"nodeType": "YulLiteral",
																				"src": "10241:3:12",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10226:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10226:3:12"
																		},
																		"nativeSrc": "10226:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10226:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10173:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10173:43:12"
																},
																"nativeSrc": "10173:73:12",
																"nodeType": "YulFunctionCall",
																"src": "10173:73:12"
															},
															"nativeSrc": "10173:73:12",
															"nodeType": "YulExpressionStatement",
															"src": "10173:73:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "10294:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10294:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10307:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10307:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10318:3:12",
																				"nodeType": "YulLiteral",
																				"src": "10318:3:12",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10303:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10303:3:12"
																		},
																		"nativeSrc": "10303:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10303:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "10256:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "10256:37:12"
																},
																"nativeSrc": "10256:67:12",
																"nodeType": "YulFunctionCall",
																"src": "10256:67:12"
															},
															"nativeSrc": "10256:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "10256:67:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value7",
																		"nativeSrc": "10371:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10371:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10384:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10384:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10395:3:12",
																				"nodeType": "YulLiteral",
																				"src": "10395:3:12",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10380:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10380:3:12"
																		},
																		"nativeSrc": "10380:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10380:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "10333:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "10333:37:12"
																},
																"nativeSrc": "10333:67:12",
																"nodeType": "YulFunctionCall",
																"src": "10333:67:12"
															},
															"nativeSrc": "10333:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "10333:67:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value8",
																		"nativeSrc": "10448:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10448:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10461:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10461:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10472:3:12",
																				"nodeType": "YulLiteral",
																				"src": "10472:3:12",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10457:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10457:3:12"
																		},
																		"nativeSrc": "10457:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10457:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "10410:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "10410:37:12"
																},
																"nativeSrc": "10410:67:12",
																"nodeType": "YulFunctionCall",
																"src": "10410:67:12"
															},
															"nativeSrc": "10410:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "10410:67:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value9",
																		"nativeSrc": "10531:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10531:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10544:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10544:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10555:3:12",
																				"nodeType": "YulLiteral",
																				"src": "10555:3:12",
																				"type": "",
																				"value": "288"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10540:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10540:3:12"
																		},
																		"nativeSrc": "10540:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10540:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10487:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10487:43:12"
																},
																"nativeSrc": "10487:73:12",
																"nodeType": "YulFunctionCall",
																"src": "10487:73:12"
															},
															"nativeSrc": "10487:73:12",
															"nodeType": "YulExpressionStatement",
															"src": "10487:73:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value10",
																		"nativeSrc": "10608:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "10608:7:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10622:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10622:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10633:3:12",
																				"nodeType": "YulLiteral",
																				"src": "10633:3:12",
																				"type": "",
																				"value": "320"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10618:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10618:3:12"
																		},
																		"nativeSrc": "10618:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10618:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "10570:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "10570:37:12"
																},
																"nativeSrc": "10570:68:12",
																"nodeType": "YulFunctionCall",
																"src": "10570:68:12"
															},
															"nativeSrc": "10570:68:12",
															"nodeType": "YulExpressionStatement",
															"src": "10570:68:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10659:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10659:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10670:3:12",
																				"nodeType": "YulLiteral",
																				"src": "10670:3:12",
																				"type": "",
																				"value": "352"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10655:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10655:3:12"
																		},
																		"nativeSrc": "10655:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10655:19:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10680:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "10680:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10686:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10686:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10676:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10676:3:12"
																		},
																		"nativeSrc": "10676:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10676:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10648:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10648:6:12"
																},
																"nativeSrc": "10648:49:12",
																"nodeType": "YulFunctionCall",
																"src": "10648:49:12"
															},
															"nativeSrc": "10648:49:12",
															"nodeType": "YulExpressionStatement",
															"src": "10648:49:12"
														},
														{
															"nativeSrc": "10706:87:12",
															"nodeType": "YulAssignment",
															"src": "10706:87:12",
															"value": {
																"arguments": [
																	{
																		"name": "value11",
																		"nativeSrc": "10778:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "10778:7:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "10788:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "10788:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10714:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "10714:63:12"
																},
																"nativeSrc": "10714:79:12",
																"nodeType": "YulFunctionCall",
																"src": "10714:79:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10706:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10706:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool_t_bool_t_uint256_t_bool_t_string_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool_t_bool_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9312:1488:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9598:9:12",
														"nodeType": "YulTypedName",
														"src": "9598:9:12",
														"type": ""
													},
													{
														"name": "value11",
														"nativeSrc": "9610:7:12",
														"nodeType": "YulTypedName",
														"src": "9610:7:12",
														"type": ""
													},
													{
														"name": "value10",
														"nativeSrc": "9619:7:12",
														"nodeType": "YulTypedName",
														"src": "9619:7:12",
														"type": ""
													},
													{
														"name": "value9",
														"nativeSrc": "9628:6:12",
														"nodeType": "YulTypedName",
														"src": "9628:6:12",
														"type": ""
													},
													{
														"name": "value8",
														"nativeSrc": "9636:6:12",
														"nodeType": "YulTypedName",
														"src": "9636:6:12",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "9644:6:12",
														"nodeType": "YulTypedName",
														"src": "9644:6:12",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "9652:6:12",
														"nodeType": "YulTypedName",
														"src": "9652:6:12",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "9660:6:12",
														"nodeType": "YulTypedName",
														"src": "9660:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9668:6:12",
														"nodeType": "YulTypedName",
														"src": "9668:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9676:6:12",
														"nodeType": "YulTypedName",
														"src": "9676:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9684:6:12",
														"nodeType": "YulTypedName",
														"src": "9684:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9692:6:12",
														"nodeType": "YulTypedName",
														"src": "9692:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9700:6:12",
														"nodeType": "YulTypedName",
														"src": "9700:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9711:4:12",
														"nodeType": "YulTypedName",
														"src": "9711:4:12",
														"type": ""
													}
												],
												"src": "9312:1488:12"
											},
											{
												"body": {
													"nativeSrc": "10834:152:12",
													"nodeType": "YulBlock",
													"src": "10834:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10851:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10851:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10854:77:12",
																		"nodeType": "YulLiteral",
																		"src": "10854:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10844:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10844:6:12"
																},
																"nativeSrc": "10844:88:12",
																"nodeType": "YulFunctionCall",
																"src": "10844:88:12"
															},
															"nativeSrc": "10844:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "10844:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10948:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10948:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10951:4:12",
																		"nodeType": "YulLiteral",
																		"src": "10951:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10941:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10941:6:12"
																},
																"nativeSrc": "10941:15:12",
																"nodeType": "YulFunctionCall",
																"src": "10941:15:12"
															},
															"nativeSrc": "10941:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "10941:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10972:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10972:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10975:4:12",
																		"nodeType": "YulLiteral",
																		"src": "10975:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10965:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10965:6:12"
																},
																"nativeSrc": "10965:15:12",
																"nodeType": "YulFunctionCall",
																"src": "10965:15:12"
															},
															"nativeSrc": "10965:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "10965:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "10806:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "10806:180:12"
											},
											{
												"body": {
													"nativeSrc": "11043:269:12",
													"nodeType": "YulBlock",
													"src": "11043:269:12",
													"statements": [
														{
															"nativeSrc": "11053:22:12",
															"nodeType": "YulAssignment",
															"src": "11053:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11067:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "11067:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11073:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11073:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11063:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11063:3:12"
																},
																"nativeSrc": "11063:12:12",
																"nodeType": "YulFunctionCall",
																"src": "11063:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11053:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11053:6:12"
																}
															]
														},
														{
															"nativeSrc": "11084:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "11084:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11114:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "11114:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11120:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11120:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11110:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11110:3:12"
																},
																"nativeSrc": "11110:12:12",
																"nodeType": "YulFunctionCall",
																"src": "11110:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "11088:18:12",
																	"nodeType": "YulTypedName",
																	"src": "11088:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11161:51:12",
																"nodeType": "YulBlock",
																"src": "11161:51:12",
																"statements": [
																	{
																		"nativeSrc": "11175:27:12",
																		"nodeType": "YulAssignment",
																		"src": "11175:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "11189:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "11189:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11197:4:12",
																					"nodeType": "YulLiteral",
																					"src": "11197:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "11185:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "11185:3:12"
																			},
																			"nativeSrc": "11185:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11185:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "11175:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11175:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11141:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "11141:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11134:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11134:6:12"
																},
																"nativeSrc": "11134:26:12",
																"nodeType": "YulFunctionCall",
																"src": "11134:26:12"
															},
															"nativeSrc": "11131:81:12",
															"nodeType": "YulIf",
															"src": "11131:81:12"
														},
														{
															"body": {
																"nativeSrc": "11264:42:12",
																"nodeType": "YulBlock",
																"src": "11264:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "11278:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "11278:16:12"
																			},
																			"nativeSrc": "11278:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11278:18:12"
																		},
																		"nativeSrc": "11278:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "11278:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11228:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "11228:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11251:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11251:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11259:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11259:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "11248:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "11248:2:12"
																		},
																		"nativeSrc": "11248:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11248:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11225:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "11225:2:12"
																},
																"nativeSrc": "11225:38:12",
																"nodeType": "YulFunctionCall",
																"src": "11225:38:12"
															},
															"nativeSrc": "11222:84:12",
															"nodeType": "YulIf",
															"src": "11222:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "10992:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "11027:4:12",
														"nodeType": "YulTypedName",
														"src": "11027:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11036:6:12",
														"nodeType": "YulTypedName",
														"src": "11036:6:12",
														"type": ""
													}
												],
												"src": "10992:320:12"
											},
											{
												"body": {
													"nativeSrc": "11424:73:12",
													"nodeType": "YulBlock",
													"src": "11424:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11446:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11446:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11454:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11454:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11442:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11442:3:12"
																		},
																		"nativeSrc": "11442:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11442:14:12"
																	},
																	{
																		"hexValue": "426f72726f776572206d757374206265204b5943207665726966696564",
																		"kind": "string",
																		"nativeSrc": "11458:31:12",
																		"nodeType": "YulLiteral",
																		"src": "11458:31:12",
																		"type": "",
																		"value": "Borrower must be KYC verified"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11435:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11435:6:12"
																},
																"nativeSrc": "11435:55:12",
																"nodeType": "YulFunctionCall",
																"src": "11435:55:12"
															},
															"nativeSrc": "11435:55:12",
															"nodeType": "YulExpressionStatement",
															"src": "11435:55:12"
														}
													]
												},
												"name": "store_literal_in_memory_012f6a3f83e4cc86f0cf1682e12d7740f32dd3e177b248400863dc8750bb6121",
												"nativeSrc": "11318:179:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11416:6:12",
														"nodeType": "YulTypedName",
														"src": "11416:6:12",
														"type": ""
													}
												],
												"src": "11318:179:12"
											},
											{
												"body": {
													"nativeSrc": "11649:220:12",
													"nodeType": "YulBlock",
													"src": "11649:220:12",
													"statements": [
														{
															"nativeSrc": "11659:74:12",
															"nodeType": "YulAssignment",
															"src": "11659:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11725:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11725:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11730:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11730:2:12",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11666:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "11666:58:12"
																},
																"nativeSrc": "11666:67:12",
																"nodeType": "YulFunctionCall",
																"src": "11666:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11659:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11659:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11831:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11831:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_012f6a3f83e4cc86f0cf1682e12d7740f32dd3e177b248400863dc8750bb6121",
																	"nativeSrc": "11742:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "11742:88:12"
																},
																"nativeSrc": "11742:93:12",
																"nodeType": "YulFunctionCall",
																"src": "11742:93:12"
															},
															"nativeSrc": "11742:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "11742:93:12"
														},
														{
															"nativeSrc": "11844:19:12",
															"nodeType": "YulAssignment",
															"src": "11844:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11855:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11855:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11860:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11860:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11851:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11851:3:12"
																},
																"nativeSrc": "11851:12:12",
																"nodeType": "YulFunctionCall",
																"src": "11851:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11844:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11844:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_012f6a3f83e4cc86f0cf1682e12d7740f32dd3e177b248400863dc8750bb6121_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11503:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11637:3:12",
														"nodeType": "YulTypedName",
														"src": "11637:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11645:3:12",
														"nodeType": "YulTypedName",
														"src": "11645:3:12",
														"type": ""
													}
												],
												"src": "11503:366:12"
											},
											{
												"body": {
													"nativeSrc": "12046:248:12",
													"nodeType": "YulBlock",
													"src": "12046:248:12",
													"statements": [
														{
															"nativeSrc": "12056:26:12",
															"nodeType": "YulAssignment",
															"src": "12056:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12068:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12068:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12079:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12079:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12064:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12064:3:12"
																},
																"nativeSrc": "12064:18:12",
																"nodeType": "YulFunctionCall",
																"src": "12064:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12056:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12056:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12103:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12103:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12114:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12114:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12099:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12099:3:12"
																		},
																		"nativeSrc": "12099:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12099:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12122:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "12122:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12128:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12128:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12118:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12118:3:12"
																		},
																		"nativeSrc": "12118:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12118:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12092:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12092:6:12"
																},
																"nativeSrc": "12092:47:12",
																"nodeType": "YulFunctionCall",
																"src": "12092:47:12"
															},
															"nativeSrc": "12092:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "12092:47:12"
														},
														{
															"nativeSrc": "12148:139:12",
															"nodeType": "YulAssignment",
															"src": "12148:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12282:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "12282:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_012f6a3f83e4cc86f0cf1682e12d7740f32dd3e177b248400863dc8750bb6121_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12156:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "12156:124:12"
																},
																"nativeSrc": "12156:131:12",
																"nodeType": "YulFunctionCall",
																"src": "12156:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12148:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12148:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_012f6a3f83e4cc86f0cf1682e12d7740f32dd3e177b248400863dc8750bb6121__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11875:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12026:9:12",
														"nodeType": "YulTypedName",
														"src": "12026:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12041:4:12",
														"nodeType": "YulTypedName",
														"src": "12041:4:12",
														"type": ""
													}
												],
												"src": "11875:419:12"
											},
											{
												"body": {
													"nativeSrc": "12406:62:12",
													"nodeType": "YulBlock",
													"src": "12406:62:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12428:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12428:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12436:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12436:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12424:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12424:3:12"
																		},
																		"nativeSrc": "12424:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12424:14:12"
																	},
																	{
																		"hexValue": "496e73756666696369656e742066756e6473",
																		"kind": "string",
																		"nativeSrc": "12440:20:12",
																		"nodeType": "YulLiteral",
																		"src": "12440:20:12",
																		"type": "",
																		"value": "Insufficient funds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12417:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12417:6:12"
																},
																"nativeSrc": "12417:44:12",
																"nodeType": "YulFunctionCall",
																"src": "12417:44:12"
															},
															"nativeSrc": "12417:44:12",
															"nodeType": "YulExpressionStatement",
															"src": "12417:44:12"
														}
													]
												},
												"name": "store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
												"nativeSrc": "12300:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12398:6:12",
														"nodeType": "YulTypedName",
														"src": "12398:6:12",
														"type": ""
													}
												],
												"src": "12300:168:12"
											},
											{
												"body": {
													"nativeSrc": "12620:220:12",
													"nodeType": "YulBlock",
													"src": "12620:220:12",
													"statements": [
														{
															"nativeSrc": "12630:74:12",
															"nodeType": "YulAssignment",
															"src": "12630:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12696:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12696:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12701:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12701:2:12",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12637:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "12637:58:12"
																},
																"nativeSrc": "12637:67:12",
																"nodeType": "YulFunctionCall",
																"src": "12637:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12630:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12630:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12802:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12802:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																	"nativeSrc": "12713:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "12713:88:12"
																},
																"nativeSrc": "12713:93:12",
																"nodeType": "YulFunctionCall",
																"src": "12713:93:12"
															},
															"nativeSrc": "12713:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "12713:93:12"
														},
														{
															"nativeSrc": "12815:19:12",
															"nodeType": "YulAssignment",
															"src": "12815:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12826:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12826:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12831:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12831:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12822:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12822:3:12"
																},
																"nativeSrc": "12822:12:12",
																"nodeType": "YulFunctionCall",
																"src": "12822:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12815:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12815:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12474:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12608:3:12",
														"nodeType": "YulTypedName",
														"src": "12608:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12616:3:12",
														"nodeType": "YulTypedName",
														"src": "12616:3:12",
														"type": ""
													}
												],
												"src": "12474:366:12"
											},
											{
												"body": {
													"nativeSrc": "13017:248:12",
													"nodeType": "YulBlock",
													"src": "13017:248:12",
													"statements": [
														{
															"nativeSrc": "13027:26:12",
															"nodeType": "YulAssignment",
															"src": "13027:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13039:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "13039:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13050:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13050:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13035:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13035:3:12"
																},
																"nativeSrc": "13035:18:12",
																"nodeType": "YulFunctionCall",
																"src": "13035:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13027:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13027:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13074:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13074:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13085:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13085:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13070:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13070:3:12"
																		},
																		"nativeSrc": "13070:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13070:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13093:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "13093:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13099:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13099:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13089:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13089:3:12"
																		},
																		"nativeSrc": "13089:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13089:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13063:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13063:6:12"
																},
																"nativeSrc": "13063:47:12",
																"nodeType": "YulFunctionCall",
																"src": "13063:47:12"
															},
															"nativeSrc": "13063:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "13063:47:12"
														},
														{
															"nativeSrc": "13119:139:12",
															"nodeType": "YulAssignment",
															"src": "13119:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13253:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13253:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13127:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "13127:124:12"
																},
																"nativeSrc": "13127:131:12",
																"nodeType": "YulFunctionCall",
																"src": "13127:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13119:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13119:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12846:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12997:9:12",
														"nodeType": "YulTypedName",
														"src": "12997:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13012:4:12",
														"nodeType": "YulTypedName",
														"src": "13012:4:12",
														"type": ""
													}
												],
												"src": "12846:419:12"
											},
											{
												"body": {
													"nativeSrc": "13377:67:12",
													"nodeType": "YulBlock",
													"src": "13377:67:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13399:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "13399:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13407:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13407:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13395:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13395:3:12"
																		},
																		"nativeSrc": "13395:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13395:14:12"
																	},
																	{
																		"hexValue": "416c6c6f77616e6365206973206e6f7420656e6f756768",
																		"kind": "string",
																		"nativeSrc": "13411:25:12",
																		"nodeType": "YulLiteral",
																		"src": "13411:25:12",
																		"type": "",
																		"value": "Allowance is not enough"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13388:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13388:6:12"
																},
																"nativeSrc": "13388:49:12",
																"nodeType": "YulFunctionCall",
																"src": "13388:49:12"
															},
															"nativeSrc": "13388:49:12",
															"nodeType": "YulExpressionStatement",
															"src": "13388:49:12"
														}
													]
												},
												"name": "store_literal_in_memory_e8ace920544dc1be56db4376a060214d1b3ad04505f6a4258960ceec2ae8d913",
												"nativeSrc": "13271:173:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13369:6:12",
														"nodeType": "YulTypedName",
														"src": "13369:6:12",
														"type": ""
													}
												],
												"src": "13271:173:12"
											},
											{
												"body": {
													"nativeSrc": "13596:220:12",
													"nodeType": "YulBlock",
													"src": "13596:220:12",
													"statements": [
														{
															"nativeSrc": "13606:74:12",
															"nodeType": "YulAssignment",
															"src": "13606:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13672:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13672:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13677:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13677:2:12",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13613:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "13613:58:12"
																},
																"nativeSrc": "13613:67:12",
																"nodeType": "YulFunctionCall",
																"src": "13613:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13606:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13606:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13778:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13778:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e8ace920544dc1be56db4376a060214d1b3ad04505f6a4258960ceec2ae8d913",
																	"nativeSrc": "13689:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "13689:88:12"
																},
																"nativeSrc": "13689:93:12",
																"nodeType": "YulFunctionCall",
																"src": "13689:93:12"
															},
															"nativeSrc": "13689:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "13689:93:12"
														},
														{
															"nativeSrc": "13791:19:12",
															"nodeType": "YulAssignment",
															"src": "13791:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13802:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13802:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13807:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13807:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13798:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13798:3:12"
																},
																"nativeSrc": "13798:12:12",
																"nodeType": "YulFunctionCall",
																"src": "13798:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13791:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13791:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e8ace920544dc1be56db4376a060214d1b3ad04505f6a4258960ceec2ae8d913_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13450:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13584:3:12",
														"nodeType": "YulTypedName",
														"src": "13584:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13592:3:12",
														"nodeType": "YulTypedName",
														"src": "13592:3:12",
														"type": ""
													}
												],
												"src": "13450:366:12"
											},
											{
												"body": {
													"nativeSrc": "13993:248:12",
													"nodeType": "YulBlock",
													"src": "13993:248:12",
													"statements": [
														{
															"nativeSrc": "14003:26:12",
															"nodeType": "YulAssignment",
															"src": "14003:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14015:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "14015:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14026:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14026:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14011:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14011:3:12"
																},
																"nativeSrc": "14011:18:12",
																"nodeType": "YulFunctionCall",
																"src": "14011:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14003:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14003:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14050:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14050:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14061:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14061:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14046:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14046:3:12"
																		},
																		"nativeSrc": "14046:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14046:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14069:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "14069:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14075:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14075:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14065:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14065:3:12"
																		},
																		"nativeSrc": "14065:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14065:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14039:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14039:6:12"
																},
																"nativeSrc": "14039:47:12",
																"nodeType": "YulFunctionCall",
																"src": "14039:47:12"
															},
															"nativeSrc": "14039:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "14039:47:12"
														},
														{
															"nativeSrc": "14095:139:12",
															"nodeType": "YulAssignment",
															"src": "14095:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14229:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "14229:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e8ace920544dc1be56db4376a060214d1b3ad04505f6a4258960ceec2ae8d913_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14103:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "14103:124:12"
																},
																"nativeSrc": "14103:131:12",
																"nodeType": "YulFunctionCall",
																"src": "14103:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14095:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14095:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e8ace920544dc1be56db4376a060214d1b3ad04505f6a4258960ceec2ae8d913__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13822:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13973:9:12",
														"nodeType": "YulTypedName",
														"src": "13973:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13988:4:12",
														"nodeType": "YulTypedName",
														"src": "13988:4:12",
														"type": ""
													}
												],
												"src": "13822:419:12"
											},
											{
												"body": {
													"nativeSrc": "14275:152:12",
													"nodeType": "YulBlock",
													"src": "14275:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14292:1:12",
																		"nodeType": "YulLiteral",
																		"src": "14292:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14295:77:12",
																		"nodeType": "YulLiteral",
																		"src": "14295:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14285:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14285:6:12"
																},
																"nativeSrc": "14285:88:12",
																"nodeType": "YulFunctionCall",
																"src": "14285:88:12"
															},
															"nativeSrc": "14285:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "14285:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14389:1:12",
																		"nodeType": "YulLiteral",
																		"src": "14389:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14392:4:12",
																		"nodeType": "YulLiteral",
																		"src": "14392:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14382:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14382:6:12"
																},
																"nativeSrc": "14382:15:12",
																"nodeType": "YulFunctionCall",
																"src": "14382:15:12"
															},
															"nativeSrc": "14382:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "14382:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14413:1:12",
																		"nodeType": "YulLiteral",
																		"src": "14413:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14416:4:12",
																		"nodeType": "YulLiteral",
																		"src": "14416:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14406:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14406:6:12"
																},
																"nativeSrc": "14406:15:12",
																"nodeType": "YulFunctionCall",
																"src": "14406:15:12"
															},
															"nativeSrc": "14406:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "14406:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "14247:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "14247:180:12"
											},
											{
												"body": {
													"nativeSrc": "14476:190:12",
													"nodeType": "YulBlock",
													"src": "14476:190:12",
													"statements": [
														{
															"nativeSrc": "14486:33:12",
															"nodeType": "YulAssignment",
															"src": "14486:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14513:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "14513:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14495:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "14495:17:12"
																},
																"nativeSrc": "14495:24:12",
																"nodeType": "YulFunctionCall",
																"src": "14495:24:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14486:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "14486:5:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14609:22:12",
																"nodeType": "YulBlock",
																"src": "14609:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14611:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "14611:16:12"
																			},
																			"nativeSrc": "14611:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "14611:18:12"
																		},
																		"nativeSrc": "14611:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "14611:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14534:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "14534:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14541:66:12",
																		"nodeType": "YulLiteral",
																		"src": "14541:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "14531:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "14531:2:12"
																},
																"nativeSrc": "14531:77:12",
																"nodeType": "YulFunctionCall",
																"src": "14531:77:12"
															},
															"nativeSrc": "14528:103:12",
															"nodeType": "YulIf",
															"src": "14528:103:12"
														},
														{
															"nativeSrc": "14640:20:12",
															"nodeType": "YulAssignment",
															"src": "14640:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14651:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "14651:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14658:1:12",
																		"nodeType": "YulLiteral",
																		"src": "14658:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14647:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14647:3:12"
																},
																"nativeSrc": "14647:13:12",
																"nodeType": "YulFunctionCall",
																"src": "14647:13:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "14640:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14640:3:12"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "14433:233:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14462:5:12",
														"nodeType": "YulTypedName",
														"src": "14462:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "14472:3:12",
														"nodeType": "YulTypedName",
														"src": "14472:3:12",
														"type": ""
													}
												],
												"src": "14433:233:12"
											},
											{
												"body": {
													"nativeSrc": "14720:362:12",
													"nodeType": "YulBlock",
													"src": "14720:362:12",
													"statements": [
														{
															"nativeSrc": "14730:25:12",
															"nodeType": "YulAssignment",
															"src": "14730:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14753:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "14753:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14735:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "14735:17:12"
																},
																"nativeSrc": "14735:20:12",
																"nodeType": "YulFunctionCall",
																"src": "14735:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14730:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "14730:1:12"
																}
															]
														},
														{
															"nativeSrc": "14764:25:12",
															"nodeType": "YulAssignment",
															"src": "14764:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14787:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "14787:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14769:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "14769:17:12"
																},
																"nativeSrc": "14769:20:12",
																"nodeType": "YulFunctionCall",
																"src": "14769:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14764:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "14764:1:12"
																}
															]
														},
														{
															"nativeSrc": "14798:28:12",
															"nodeType": "YulVariableDeclaration",
															"src": "14798:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14821:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "14821:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14824:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "14824:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "14817:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14817:3:12"
																},
																"nativeSrc": "14817:9:12",
																"nodeType": "YulFunctionCall",
																"src": "14817:9:12"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "14802:11:12",
																	"nodeType": "YulTypedName",
																	"src": "14802:11:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14835:41:12",
															"nodeType": "YulAssignment",
															"src": "14835:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "14864:11:12",
																		"nodeType": "YulIdentifier",
																		"src": "14864:11:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14846:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "14846:17:12"
																},
																"nativeSrc": "14846:30:12",
																"nodeType": "YulFunctionCall",
																"src": "14846:30:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "14835:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "14835:7:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15053:22:12",
																"nodeType": "YulBlock",
																"src": "15053:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15055:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "15055:16:12"
																			},
																			"nativeSrc": "15055:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "15055:18:12"
																		},
																		"nativeSrc": "15055:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "15055:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "14986:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "14986:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "14979:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "14979:6:12"
																				},
																				"nativeSrc": "14979:9:12",
																				"nodeType": "YulFunctionCall",
																				"src": "14979:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "15009:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "15009:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "15016:7:12",
																								"nodeType": "YulIdentifier",
																								"src": "15016:7:12"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "15025:1:12",
																								"nodeType": "YulIdentifier",
																								"src": "15025:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "15012:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "15012:3:12"
																						},
																						"nativeSrc": "15012:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "15012:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "15006:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "15006:2:12"
																				},
																				"nativeSrc": "15006:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "15006:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "14959:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "14959:2:12"
																		},
																		"nativeSrc": "14959:83:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14959:83:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14939:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14939:6:12"
																},
																"nativeSrc": "14939:113:12",
																"nodeType": "YulFunctionCall",
																"src": "14939:113:12"
															},
															"nativeSrc": "14936:139:12",
															"nodeType": "YulIf",
															"src": "14936:139:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "14672:410:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14703:1:12",
														"nodeType": "YulTypedName",
														"src": "14703:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14706:1:12",
														"nodeType": "YulTypedName",
														"src": "14706:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "14712:7:12",
														"nodeType": "YulTypedName",
														"src": "14712:7:12",
														"type": ""
													}
												],
												"src": "14672:410:12"
											},
											{
												"body": {
													"nativeSrc": "15132:147:12",
													"nodeType": "YulBlock",
													"src": "15132:147:12",
													"statements": [
														{
															"nativeSrc": "15142:25:12",
															"nodeType": "YulAssignment",
															"src": "15142:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15165:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15165:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15147:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "15147:17:12"
																},
																"nativeSrc": "15147:20:12",
																"nodeType": "YulFunctionCall",
																"src": "15147:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15142:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "15142:1:12"
																}
															]
														},
														{
															"nativeSrc": "15176:25:12",
															"nodeType": "YulAssignment",
															"src": "15176:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15199:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15199:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15181:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "15181:17:12"
																},
																"nativeSrc": "15181:20:12",
																"nodeType": "YulFunctionCall",
																"src": "15181:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15176:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "15176:1:12"
																}
															]
														},
														{
															"nativeSrc": "15210:16:12",
															"nodeType": "YulAssignment",
															"src": "15210:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15221:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15221:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15224:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15224:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15217:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15217:3:12"
																},
																"nativeSrc": "15217:9:12",
																"nodeType": "YulFunctionCall",
																"src": "15217:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "15210:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15210:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15250:22:12",
																"nodeType": "YulBlock",
																"src": "15250:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15252:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "15252:16:12"
																			},
																			"nativeSrc": "15252:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "15252:18:12"
																		},
																		"nativeSrc": "15252:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "15252:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15242:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15242:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "15245:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15245:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15239:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "15239:2:12"
																},
																"nativeSrc": "15239:10:12",
																"nodeType": "YulFunctionCall",
																"src": "15239:10:12"
															},
															"nativeSrc": "15236:36:12",
															"nodeType": "YulIf",
															"src": "15236:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "15088:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15119:1:12",
														"nodeType": "YulTypedName",
														"src": "15119:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15122:1:12",
														"nodeType": "YulTypedName",
														"src": "15122:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "15128:3:12",
														"nodeType": "YulTypedName",
														"src": "15128:3:12",
														"type": ""
													}
												],
												"src": "15088:191:12"
											},
											{
												"body": {
													"nativeSrc": "15339:87:12",
													"nodeType": "YulBlock",
													"src": "15339:87:12",
													"statements": [
														{
															"nativeSrc": "15349:11:12",
															"nodeType": "YulAssignment",
															"src": "15349:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "15357:3:12",
																"nodeType": "YulIdentifier",
																"src": "15357:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "15349:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15349:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15377:1:12",
																		"nodeType": "YulLiteral",
																		"src": "15377:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "15380:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15380:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15370:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15370:6:12"
																},
																"nativeSrc": "15370:14:12",
																"nodeType": "YulFunctionCall",
																"src": "15370:14:12"
															},
															"nativeSrc": "15370:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "15370:14:12"
														},
														{
															"nativeSrc": "15393:26:12",
															"nodeType": "YulAssignment",
															"src": "15393:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15411:1:12",
																		"nodeType": "YulLiteral",
																		"src": "15411:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15414:4:12",
																		"nodeType": "YulLiteral",
																		"src": "15414:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "15401:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "15401:9:12"
																},
																"nativeSrc": "15401:18:12",
																"nodeType": "YulFunctionCall",
																"src": "15401:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "15393:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15393:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "15285:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "15326:3:12",
														"nodeType": "YulTypedName",
														"src": "15326:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "15334:4:12",
														"nodeType": "YulTypedName",
														"src": "15334:4:12",
														"type": ""
													}
												],
												"src": "15285:141:12"
											},
											{
												"body": {
													"nativeSrc": "15476:49:12",
													"nodeType": "YulBlock",
													"src": "15476:49:12",
													"statements": [
														{
															"nativeSrc": "15486:33:12",
															"nodeType": "YulAssignment",
															"src": "15486:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15504:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "15504:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15511:2:12",
																				"nodeType": "YulLiteral",
																				"src": "15511:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15500:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15500:3:12"
																		},
																		"nativeSrc": "15500:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15500:14:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15516:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15516:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "15496:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15496:3:12"
																},
																"nativeSrc": "15496:23:12",
																"nodeType": "YulFunctionCall",
																"src": "15496:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "15486:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15486:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "15432:93:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15459:5:12",
														"nodeType": "YulTypedName",
														"src": "15459:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "15469:6:12",
														"nodeType": "YulTypedName",
														"src": "15469:6:12",
														"type": ""
													}
												],
												"src": "15432:93:12"
											},
											{
												"body": {
													"nativeSrc": "15584:54:12",
													"nodeType": "YulBlock",
													"src": "15584:54:12",
													"statements": [
														{
															"nativeSrc": "15594:37:12",
															"nodeType": "YulAssignment",
															"src": "15594:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "15619:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "15619:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "15625:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "15625:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "15615:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15615:3:12"
																},
																"nativeSrc": "15615:16:12",
																"nodeType": "YulFunctionCall",
																"src": "15615:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "15594:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "15594:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "15531:107:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "15559:4:12",
														"nodeType": "YulTypedName",
														"src": "15559:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "15565:5:12",
														"nodeType": "YulTypedName",
														"src": "15565:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "15575:8:12",
														"nodeType": "YulTypedName",
														"src": "15575:8:12",
														"type": ""
													}
												],
												"src": "15531:107:12"
											},
											{
												"body": {
													"nativeSrc": "15720:317:12",
													"nodeType": "YulBlock",
													"src": "15720:317:12",
													"statements": [
														{
															"nativeSrc": "15730:35:12",
															"nodeType": "YulVariableDeclaration",
															"src": "15730:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "15751:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "15751:10:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15763:1:12",
																		"nodeType": "YulLiteral",
																		"src": "15763:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "15747:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15747:3:12"
																},
																"nativeSrc": "15747:18:12",
																"nodeType": "YulFunctionCall",
																"src": "15747:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "15734:9:12",
																	"nodeType": "YulTypedName",
																	"src": "15734:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15774:109:12",
															"nodeType": "YulVariableDeclaration",
															"src": "15774:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "15805:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "15805:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15816:66:12",
																		"nodeType": "YulLiteral",
																		"src": "15816:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "15786:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "15786:18:12"
																},
																"nativeSrc": "15786:97:12",
																"nodeType": "YulFunctionCall",
																"src": "15786:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "15778:4:12",
																	"nodeType": "YulTypedName",
																	"src": "15778:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15892:51:12",
															"nodeType": "YulAssignment",
															"src": "15892:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "15923:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "15923:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "15934:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "15934:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "15904:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "15904:18:12"
																},
																"nativeSrc": "15904:39:12",
																"nodeType": "YulFunctionCall",
																"src": "15904:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "15892:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "15892:8:12"
																}
															]
														},
														{
															"nativeSrc": "15952:30:12",
															"nodeType": "YulAssignment",
															"src": "15952:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15965:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "15965:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "15976:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "15976:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "15972:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15972:3:12"
																		},
																		"nativeSrc": "15972:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15972:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "15961:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15961:3:12"
																},
																"nativeSrc": "15961:21:12",
																"nodeType": "YulFunctionCall",
																"src": "15961:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15952:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "15952:5:12"
																}
															]
														},
														{
															"nativeSrc": "15991:40:12",
															"nodeType": "YulAssignment",
															"src": "15991:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16004:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "16004:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "16015:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "16015:8:12"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "16025:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "16025:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "16011:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16011:3:12"
																		},
																		"nativeSrc": "16011:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16011:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "16001:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "16001:2:12"
																},
																"nativeSrc": "16001:30:12",
																"nodeType": "YulFunctionCall",
																"src": "16001:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "15991:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15991:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "15644:393:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15681:5:12",
														"nodeType": "YulTypedName",
														"src": "15681:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "15688:10:12",
														"nodeType": "YulTypedName",
														"src": "15688:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "15700:8:12",
														"nodeType": "YulTypedName",
														"src": "15700:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "15713:6:12",
														"nodeType": "YulTypedName",
														"src": "15713:6:12",
														"type": ""
													}
												],
												"src": "15644:393:12"
											},
											{
												"body": {
													"nativeSrc": "16075:28:12",
													"nodeType": "YulBlock",
													"src": "16075:28:12",
													"statements": [
														{
															"nativeSrc": "16085:12:12",
															"nodeType": "YulAssignment",
															"src": "16085:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "16092:5:12",
																"nodeType": "YulIdentifier",
																"src": "16092:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "16085:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16085:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "16043:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16061:5:12",
														"nodeType": "YulTypedName",
														"src": "16061:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "16071:3:12",
														"nodeType": "YulTypedName",
														"src": "16071:3:12",
														"type": ""
													}
												],
												"src": "16043:60:12"
											},
											{
												"body": {
													"nativeSrc": "16169:82:12",
													"nodeType": "YulBlock",
													"src": "16169:82:12",
													"statements": [
														{
															"nativeSrc": "16179:66:12",
															"nodeType": "YulAssignment",
															"src": "16179:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16237:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "16237:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "16219:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "16219:17:12"
																				},
																				"nativeSrc": "16219:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "16219:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "16210:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "16210:8:12"
																		},
																		"nativeSrc": "16210:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16210:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16192:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "16192:17:12"
																},
																"nativeSrc": "16192:53:12",
																"nodeType": "YulFunctionCall",
																"src": "16192:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "16179:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "16179:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "16109:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16149:5:12",
														"nodeType": "YulTypedName",
														"src": "16149:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "16159:9:12",
														"nodeType": "YulTypedName",
														"src": "16159:9:12",
														"type": ""
													}
												],
												"src": "16109:142:12"
											},
											{
												"body": {
													"nativeSrc": "16304:28:12",
													"nodeType": "YulBlock",
													"src": "16304:28:12",
													"statements": [
														{
															"nativeSrc": "16314:12:12",
															"nodeType": "YulAssignment",
															"src": "16314:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "16321:5:12",
																"nodeType": "YulIdentifier",
																"src": "16321:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "16314:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16314:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "16257:75:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16290:5:12",
														"nodeType": "YulTypedName",
														"src": "16290:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "16300:3:12",
														"nodeType": "YulTypedName",
														"src": "16300:3:12",
														"type": ""
													}
												],
												"src": "16257:75:12"
											},
											{
												"body": {
													"nativeSrc": "16414:193:12",
													"nodeType": "YulBlock",
													"src": "16414:193:12",
													"statements": [
														{
															"nativeSrc": "16424:63:12",
															"nodeType": "YulVariableDeclaration",
															"src": "16424:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "16479:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "16479:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "16448:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "16448:30:12"
																},
																"nativeSrc": "16448:39:12",
																"nodeType": "YulFunctionCall",
																"src": "16448:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "16428:16:12",
																	"nodeType": "YulTypedName",
																	"src": "16428:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "16503:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "16503:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "16543:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "16543:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "16537:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "16537:5:12"
																				},
																				"nativeSrc": "16537:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "16537:11:12"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "16550:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "16550:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "16582:16:12",
																						"nodeType": "YulIdentifier",
																						"src": "16582:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "16558:23:12",
																					"nodeType": "YulIdentifier",
																					"src": "16558:23:12"
																				},
																				"nativeSrc": "16558:41:12",
																				"nodeType": "YulFunctionCall",
																				"src": "16558:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "16509:27:12",
																			"nodeType": "YulIdentifier",
																			"src": "16509:27:12"
																		},
																		"nativeSrc": "16509:91:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16509:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "16496:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16496:6:12"
																},
																"nativeSrc": "16496:105:12",
																"nodeType": "YulFunctionCall",
																"src": "16496:105:12"
															},
															"nativeSrc": "16496:105:12",
															"nodeType": "YulExpressionStatement",
															"src": "16496:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "16338:269:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "16391:4:12",
														"nodeType": "YulTypedName",
														"src": "16391:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "16397:6:12",
														"nodeType": "YulTypedName",
														"src": "16397:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "16405:7:12",
														"nodeType": "YulTypedName",
														"src": "16405:7:12",
														"type": ""
													}
												],
												"src": "16338:269:12"
											},
											{
												"body": {
													"nativeSrc": "16662:24:12",
													"nodeType": "YulBlock",
													"src": "16662:24:12",
													"statements": [
														{
															"nativeSrc": "16672:8:12",
															"nodeType": "YulAssignment",
															"src": "16672:8:12",
															"value": {
																"kind": "number",
																"nativeSrc": "16679:1:12",
																"nodeType": "YulLiteral",
																"src": "16679:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "16672:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16672:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "16613:73:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "16658:3:12",
														"nodeType": "YulTypedName",
														"src": "16658:3:12",
														"type": ""
													}
												],
												"src": "16613:73:12"
											},
											{
												"body": {
													"nativeSrc": "16745:136:12",
													"nodeType": "YulBlock",
													"src": "16745:136:12",
													"statements": [
														{
															"nativeSrc": "16755:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "16755:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "16769:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "16769:30:12"
																},
																"nativeSrc": "16769:32:12",
																"nodeType": "YulFunctionCall",
																"src": "16769:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "16759:6:12",
																	"nodeType": "YulTypedName",
																	"src": "16759:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "16854:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "16854:4:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "16860:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16860:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "16868:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16868:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "16810:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "16810:43:12"
																},
																"nativeSrc": "16810:65:12",
																"nodeType": "YulFunctionCall",
																"src": "16810:65:12"
															},
															"nativeSrc": "16810:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "16810:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "16692:189:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "16731:4:12",
														"nodeType": "YulTypedName",
														"src": "16731:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "16737:6:12",
														"nodeType": "YulTypedName",
														"src": "16737:6:12",
														"type": ""
													}
												],
												"src": "16692:189:12"
											},
											{
												"body": {
													"nativeSrc": "16937:136:12",
													"nodeType": "YulBlock",
													"src": "16937:136:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "17004:63:12",
																"nodeType": "YulBlock",
																"src": "17004:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "17048:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "17048:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17055:1:12",
																					"nodeType": "YulLiteral",
																					"src": "17055:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "17018:29:12",
																				"nodeType": "YulIdentifier",
																				"src": "17018:29:12"
																			},
																			"nativeSrc": "17018:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "17018:39:12"
																		},
																		"nativeSrc": "17018:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "17018:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "16957:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "16957:5:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "16964:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16964:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "16954:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "16954:2:12"
																},
																"nativeSrc": "16954:14:12",
																"nodeType": "YulFunctionCall",
																"src": "16954:14:12"
															},
															"nativeSrc": "16947:120:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "16969:26:12",
																"nodeType": "YulBlock",
																"src": "16969:26:12",
																"statements": [
																	{
																		"nativeSrc": "16971:22:12",
																		"nodeType": "YulAssignment",
																		"src": "16971:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "16984:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "16984:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16991:1:12",
																					"nodeType": "YulLiteral",
																					"src": "16991:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "16980:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "16980:3:12"
																			},
																			"nativeSrc": "16980:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "16980:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "16971:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "16971:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "16951:2:12",
																"nodeType": "YulBlock",
																"src": "16951:2:12",
																"statements": []
															},
															"src": "16947:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "16887:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "16925:5:12",
														"nodeType": "YulTypedName",
														"src": "16925:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "16932:3:12",
														"nodeType": "YulTypedName",
														"src": "16932:3:12",
														"type": ""
													}
												],
												"src": "16887:186:12"
											},
											{
												"body": {
													"nativeSrc": "17158:464:12",
													"nodeType": "YulBlock",
													"src": "17158:464:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "17184:431:12",
																"nodeType": "YulBlock",
																"src": "17184:431:12",
																"statements": [
																	{
																		"nativeSrc": "17198:54:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "17198:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "17246:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "17246:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "17214:31:12",
																				"nodeType": "YulIdentifier",
																				"src": "17214:31:12"
																			},
																			"nativeSrc": "17214:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "17214:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "17202:8:12",
																				"nodeType": "YulTypedName",
																				"src": "17202:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "17265:63:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "17265:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "17288:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "17288:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "17316:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "17316:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "17298:17:12",
																						"nodeType": "YulIdentifier",
																						"src": "17298:17:12"
																					},
																					"nativeSrc": "17298:29:12",
																					"nodeType": "YulFunctionCall",
																					"src": "17298:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "17284:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "17284:3:12"
																			},
																			"nativeSrc": "17284:44:12",
																			"nodeType": "YulFunctionCall",
																			"src": "17284:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "17269:11:12",
																				"nodeType": "YulTypedName",
																				"src": "17269:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "17485:27:12",
																			"nodeType": "YulBlock",
																			"src": "17485:27:12",
																			"statements": [
																				{
																					"nativeSrc": "17487:23:12",
																					"nodeType": "YulAssignment",
																					"src": "17487:23:12",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "17502:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "17502:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "17487:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "17487:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "17469:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "17469:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17481:2:12",
																					"nodeType": "YulLiteral",
																					"src": "17481:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "17466:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "17466:2:12"
																			},
																			"nativeSrc": "17466:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "17466:18:12"
																		},
																		"nativeSrc": "17463:49:12",
																		"nodeType": "YulIf",
																		"src": "17463:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "17554:11:12",
																					"nodeType": "YulIdentifier",
																					"src": "17554:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "17571:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "17571:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "17599:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "17599:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "17581:17:12",
																								"nodeType": "YulIdentifier",
																								"src": "17581:17:12"
																							},
																							"nativeSrc": "17581:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "17581:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "17567:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "17567:3:12"
																					},
																					"nativeSrc": "17567:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "17567:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "17525:28:12",
																				"nodeType": "YulIdentifier",
																				"src": "17525:28:12"
																			},
																			"nativeSrc": "17525:80:12",
																			"nodeType": "YulFunctionCall",
																			"src": "17525:80:12"
																		},
																		"nativeSrc": "17525:80:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "17525:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "17175:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "17175:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17180:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17180:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17172:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "17172:2:12"
																},
																"nativeSrc": "17172:11:12",
																"nodeType": "YulFunctionCall",
																"src": "17172:11:12"
															},
															"nativeSrc": "17169:446:12",
															"nodeType": "YulIf",
															"src": "17169:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "17079:543:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "17134:5:12",
														"nodeType": "YulTypedName",
														"src": "17134:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "17141:3:12",
														"nodeType": "YulTypedName",
														"src": "17141:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "17146:10:12",
														"nodeType": "YulTypedName",
														"src": "17146:10:12",
														"type": ""
													}
												],
												"src": "17079:543:12"
											},
											{
												"body": {
													"nativeSrc": "17691:54:12",
													"nodeType": "YulBlock",
													"src": "17691:54:12",
													"statements": [
														{
															"nativeSrc": "17701:37:12",
															"nodeType": "YulAssignment",
															"src": "17701:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "17726:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "17726:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "17732:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "17732:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "17722:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17722:3:12"
																},
																"nativeSrc": "17722:16:12",
																"nodeType": "YulFunctionCall",
																"src": "17722:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "17701:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "17701:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "17628:117:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "17666:4:12",
														"nodeType": "YulTypedName",
														"src": "17666:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "17672:5:12",
														"nodeType": "YulTypedName",
														"src": "17672:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "17682:8:12",
														"nodeType": "YulTypedName",
														"src": "17682:8:12",
														"type": ""
													}
												],
												"src": "17628:117:12"
											},
											{
												"body": {
													"nativeSrc": "17802:118:12",
													"nodeType": "YulBlock",
													"src": "17802:118:12",
													"statements": [
														{
															"nativeSrc": "17812:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "17812:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "17861:1:12",
																						"nodeType": "YulLiteral",
																						"src": "17861:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "17864:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "17864:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "17857:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "17857:3:12"
																				},
																				"nativeSrc": "17857:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "17857:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "17876:1:12",
																						"nodeType": "YulLiteral",
																						"src": "17876:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "17872:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "17872:3:12"
																				},
																				"nativeSrc": "17872:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "17872:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "17828:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "17828:28:12"
																		},
																		"nativeSrc": "17828:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17828:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "17824:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17824:3:12"
																},
																"nativeSrc": "17824:56:12",
																"nodeType": "YulFunctionCall",
																"src": "17824:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "17816:4:12",
																	"nodeType": "YulTypedName",
																	"src": "17816:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17889:25:12",
															"nodeType": "YulAssignment",
															"src": "17889:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "17903:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "17903:4:12"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "17909:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "17909:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "17899:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17899:3:12"
																},
																"nativeSrc": "17899:15:12",
																"nodeType": "YulFunctionCall",
																"src": "17899:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "17889:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17889:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "17751:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "17779:4:12",
														"nodeType": "YulTypedName",
														"src": "17779:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "17785:5:12",
														"nodeType": "YulTypedName",
														"src": "17785:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "17795:6:12",
														"nodeType": "YulTypedName",
														"src": "17795:6:12",
														"type": ""
													}
												],
												"src": "17751:169:12"
											},
											{
												"body": {
													"nativeSrc": "18006:214:12",
													"nodeType": "YulBlock",
													"src": "18006:214:12",
													"statements": [
														{
															"nativeSrc": "18139:37:12",
															"nodeType": "YulAssignment",
															"src": "18139:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18166:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "18166:4:12"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "18172:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18172:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "18147:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "18147:18:12"
																},
																"nativeSrc": "18147:29:12",
																"nodeType": "YulFunctionCall",
																"src": "18147:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "18139:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "18139:4:12"
																}
															]
														},
														{
															"nativeSrc": "18185:29:12",
															"nodeType": "YulAssignment",
															"src": "18185:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18196:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "18196:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "18206:1:12",
																				"nodeType": "YulLiteral",
																				"src": "18206:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "18209:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "18209:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "18202:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18202:3:12"
																		},
																		"nativeSrc": "18202:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18202:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "18193:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "18193:2:12"
																},
																"nativeSrc": "18193:21:12",
																"nodeType": "YulFunctionCall",
																"src": "18193:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "18185:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "18185:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "17925:295:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "17987:4:12",
														"nodeType": "YulTypedName",
														"src": "17987:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "17993:3:12",
														"nodeType": "YulTypedName",
														"src": "17993:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "18001:4:12",
														"nodeType": "YulTypedName",
														"src": "18001:4:12",
														"type": ""
													}
												],
												"src": "17925:295:12"
											},
											{
												"body": {
													"nativeSrc": "18317:1303:12",
													"nodeType": "YulBlock",
													"src": "18317:1303:12",
													"statements": [
														{
															"nativeSrc": "18328:51:12",
															"nodeType": "YulVariableDeclaration",
															"src": "18328:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "18375:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18375:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "18342:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "18342:32:12"
																},
																"nativeSrc": "18342:37:12",
																"nodeType": "YulFunctionCall",
																"src": "18342:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "18332:6:12",
																	"nodeType": "YulTypedName",
																	"src": "18332:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18464:22:12",
																"nodeType": "YulBlock",
																"src": "18464:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "18466:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "18466:16:12"
																			},
																			"nativeSrc": "18466:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "18466:18:12"
																		},
																		"nativeSrc": "18466:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "18466:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "18436:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18436:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18444:18:12",
																		"nodeType": "YulLiteral",
																		"src": "18444:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18433:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "18433:2:12"
																},
																"nativeSrc": "18433:30:12",
																"nodeType": "YulFunctionCall",
																"src": "18433:30:12"
															},
															"nativeSrc": "18430:56:12",
															"nodeType": "YulIf",
															"src": "18430:56:12"
														},
														{
															"nativeSrc": "18496:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "18496:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "18542:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "18542:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "18536:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "18536:5:12"
																		},
																		"nativeSrc": "18536:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18536:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "18510:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "18510:25:12"
																},
																"nativeSrc": "18510:38:12",
																"nodeType": "YulFunctionCall",
																"src": "18510:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "18500:6:12",
																	"nodeType": "YulTypedName",
																	"src": "18500:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "18641:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "18641:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "18647:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18647:6:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "18655:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18655:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "18595:45:12",
																	"nodeType": "YulIdentifier",
																	"src": "18595:45:12"
																},
																"nativeSrc": "18595:67:12",
																"nodeType": "YulFunctionCall",
																"src": "18595:67:12"
															},
															"nativeSrc": "18595:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "18595:67:12"
														},
														{
															"nativeSrc": "18672:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "18672:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "18689:1:12",
																"nodeType": "YulLiteral",
																"src": "18689:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "18676:9:12",
																	"nodeType": "YulTypedName",
																	"src": "18676:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18700:17:12",
															"nodeType": "YulAssignment",
															"src": "18700:17:12",
															"value": {
																"kind": "number",
																"nativeSrc": "18713:4:12",
																"nodeType": "YulLiteral",
																"src": "18713:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "18700:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "18700:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "18764:611:12",
																		"nodeType": "YulBlock",
																		"src": "18764:611:12",
																		"statements": [
																			{
																				"nativeSrc": "18778:37:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "18778:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "18797:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "18797:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "18809:4:12",
																									"nodeType": "YulLiteral",
																									"src": "18809:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "18805:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "18805:3:12"
																							},
																							"nativeSrc": "18805:9:12",
																							"nodeType": "YulFunctionCall",
																							"src": "18805:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "18793:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "18793:3:12"
																					},
																					"nativeSrc": "18793:22:12",
																					"nodeType": "YulFunctionCall",
																					"src": "18793:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "18782:7:12",
																						"nodeType": "YulTypedName",
																						"src": "18782:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "18829:51:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "18829:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "18875:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "18875:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "18843:31:12",
																						"nodeType": "YulIdentifier",
																						"src": "18843:31:12"
																					},
																					"nativeSrc": "18843:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "18843:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "18833:6:12",
																						"nodeType": "YulTypedName",
																						"src": "18833:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "18893:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "18893:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "18902:1:12",
																					"nodeType": "YulLiteral",
																					"src": "18902:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "18897:1:12",
																						"nodeType": "YulTypedName",
																						"src": "18897:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "18961:163:12",
																					"nodeType": "YulBlock",
																					"src": "18961:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "18986:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "18986:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "19004:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "19004:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "19009:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "19009:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "19000:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "19000:3:12"
																												},
																												"nativeSrc": "19000:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "19000:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "18994:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "18994:5:12"
																										},
																										"nativeSrc": "18994:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "18994:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "18979:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "18979:6:12"
																								},
																								"nativeSrc": "18979:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "18979:42:12"
																							},
																							"nativeSrc": "18979:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "18979:42:12"
																						},
																						{
																							"nativeSrc": "19038:24:12",
																							"nodeType": "YulAssignment",
																							"src": "19038:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "19052:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "19052:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "19060:1:12",
																										"nodeType": "YulLiteral",
																										"src": "19060:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "19048:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "19048:3:12"
																								},
																								"nativeSrc": "19048:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "19048:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "19038:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "19038:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "19079:31:12",
																							"nodeType": "YulAssignment",
																							"src": "19079:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "19096:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "19096:9:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "19107:2:12",
																										"nodeType": "YulLiteral",
																										"src": "19107:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "19092:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "19092:3:12"
																								},
																								"nativeSrc": "19092:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "19092:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "19079:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "19079:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "18927:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "18927:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "18930:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "18930:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "18924:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "18924:2:12"
																					},
																					"nativeSrc": "18924:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "18924:14:12"
																				},
																				"nativeSrc": "18916:208:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "18939:21:12",
																					"nodeType": "YulBlock",
																					"src": "18939:21:12",
																					"statements": [
																						{
																							"nativeSrc": "18941:17:12",
																							"nodeType": "YulAssignment",
																							"src": "18941:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "18950:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "18950:1:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "18953:4:12",
																										"nodeType": "YulLiteral",
																										"src": "18953:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "18946:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "18946:3:12"
																								},
																								"nativeSrc": "18946:12:12",
																								"nodeType": "YulFunctionCall",
																								"src": "18946:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "18941:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "18941:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "18920:3:12",
																					"nodeType": "YulBlock",
																					"src": "18920:3:12",
																					"statements": []
																				},
																				"src": "18916:208:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "19160:156:12",
																					"nodeType": "YulBlock",
																					"src": "19160:156:12",
																					"statements": [
																						{
																							"nativeSrc": "19178:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "19178:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "19205:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "19205:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "19210:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "19210:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "19201:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "19201:3:12"
																										},
																										"nativeSrc": "19201:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "19201:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "19195:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "19195:5:12"
																								},
																								"nativeSrc": "19195:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "19195:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "19182:9:12",
																									"nodeType": "YulTypedName",
																									"src": "19182:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "19245:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "19245:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "19272:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "19272:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "19287:6:12",
																														"nodeType": "YulIdentifier",
																														"src": "19287:6:12"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "19295:4:12",
																														"nodeType": "YulLiteral",
																														"src": "19295:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "19283:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "19283:3:12"
																												},
																												"nativeSrc": "19283:17:12",
																												"nodeType": "YulFunctionCall",
																												"src": "19283:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "19253:18:12",
																											"nodeType": "YulIdentifier",
																											"src": "19253:18:12"
																										},
																										"nativeSrc": "19253:48:12",
																										"nodeType": "YulFunctionCall",
																										"src": "19253:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "19238:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "19238:6:12"
																								},
																								"nativeSrc": "19238:64:12",
																								"nodeType": "YulFunctionCall",
																								"src": "19238:64:12"
																							},
																							"nativeSrc": "19238:64:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "19238:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "19143:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "19143:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "19152:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "19152:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "19140:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "19140:2:12"
																					},
																					"nativeSrc": "19140:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "19140:19:12"
																				},
																				"nativeSrc": "19137:179:12",
																				"nodeType": "YulIf",
																				"src": "19137:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "19336:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "19336:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "19350:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "19350:6:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "19358:1:12",
																											"nodeType": "YulLiteral",
																											"src": "19358:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "19346:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "19346:3:12"
																									},
																									"nativeSrc": "19346:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "19346:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "19362:1:12",
																									"nodeType": "YulLiteral",
																									"src": "19362:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "19342:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "19342:3:12"
																							},
																							"nativeSrc": "19342:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "19342:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "19329:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "19329:6:12"
																					},
																					"nativeSrc": "19329:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "19329:36:12"
																				},
																				"nativeSrc": "19329:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "19329:36:12"
																			}
																		]
																	},
																	"nativeSrc": "18757:618:12",
																	"nodeType": "YulCase",
																	"src": "18757:618:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18762:1:12",
																		"nodeType": "YulLiteral",
																		"src": "18762:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "19392:222:12",
																		"nodeType": "YulBlock",
																		"src": "19392:222:12",
																		"statements": [
																			{
																				"nativeSrc": "19406:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19406:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "19419:1:12",
																					"nodeType": "YulLiteral",
																					"src": "19419:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "19410:5:12",
																						"nodeType": "YulTypedName",
																						"src": "19410:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "19443:67:12",
																					"nodeType": "YulBlock",
																					"src": "19443:67:12",
																					"statements": [
																						{
																							"nativeSrc": "19461:35:12",
																							"nodeType": "YulAssignment",
																							"src": "19461:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "19480:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "19480:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "19485:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "19485:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "19476:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "19476:3:12"
																										},
																										"nativeSrc": "19476:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "19476:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "19470:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "19470:5:12"
																								},
																								"nativeSrc": "19470:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "19470:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "19461:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "19461:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "19436:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "19436:6:12"
																				},
																				"nativeSrc": "19433:77:12",
																				"nodeType": "YulIf",
																				"src": "19433:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "19530:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "19530:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "19589:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "19589:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "19596:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "19596:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "19536:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "19536:52:12"
																							},
																							"nativeSrc": "19536:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "19536:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "19523:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "19523:6:12"
																					},
																					"nativeSrc": "19523:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "19523:81:12"
																				},
																				"nativeSrc": "19523:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "19523:81:12"
																			}
																		]
																	},
																	"nativeSrc": "19384:230:12",
																	"nodeType": "YulCase",
																	"src": "19384:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "18737:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18737:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18745:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18745:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18734:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "18734:2:12"
																},
																"nativeSrc": "18734:14:12",
																"nodeType": "YulFunctionCall",
																"src": "18734:14:12"
															},
															"nativeSrc": "18727:887:12",
															"nodeType": "YulSwitch",
															"src": "18727:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "18225:1395:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "18306:4:12",
														"nodeType": "YulTypedName",
														"src": "18306:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "18312:3:12",
														"nodeType": "YulTypedName",
														"src": "18312:3:12",
														"type": ""
													}
												],
												"src": "18225:1395:12"
											},
											{
												"body": {
													"nativeSrc": "19940:774:12",
													"nodeType": "YulBlock",
													"src": "19940:774:12",
													"statements": [
														{
															"nativeSrc": "19950:27:12",
															"nodeType": "YulAssignment",
															"src": "19950:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19962:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "19962:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19973:3:12",
																		"nodeType": "YulLiteral",
																		"src": "19973:3:12",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19958:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19958:3:12"
																},
																"nativeSrc": "19958:19:12",
																"nodeType": "YulFunctionCall",
																"src": "19958:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19950:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "19950:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20031:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20031:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20044:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20044:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20055:1:12",
																				"nodeType": "YulLiteral",
																				"src": "20055:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20040:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20040:3:12"
																		},
																		"nativeSrc": "20040:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20040:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19987:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "19987:43:12"
																},
																"nativeSrc": "19987:71:12",
																"nodeType": "YulFunctionCall",
																"src": "19987:71:12"
															},
															"nativeSrc": "19987:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "19987:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20112:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20112:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20125:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20125:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20136:2:12",
																				"nodeType": "YulLiteral",
																				"src": "20136:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20121:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20121:3:12"
																		},
																		"nativeSrc": "20121:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20121:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20068:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "20068:43:12"
																},
																"nativeSrc": "20068:72:12",
																"nodeType": "YulFunctionCall",
																"src": "20068:72:12"
															},
															"nativeSrc": "20068:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "20068:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "20194:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20194:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20207:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20207:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20218:2:12",
																				"nodeType": "YulLiteral",
																				"src": "20218:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20203:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20203:3:12"
																		},
																		"nativeSrc": "20203:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20203:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20150:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "20150:43:12"
																},
																"nativeSrc": "20150:72:12",
																"nodeType": "YulFunctionCall",
																"src": "20150:72:12"
															},
															"nativeSrc": "20150:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "20150:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "20276:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20276:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20289:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20289:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20300:2:12",
																				"nodeType": "YulLiteral",
																				"src": "20300:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20285:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20285:3:12"
																		},
																		"nativeSrc": "20285:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20285:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20232:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "20232:43:12"
																},
																"nativeSrc": "20232:72:12",
																"nodeType": "YulFunctionCall",
																"src": "20232:72:12"
															},
															"nativeSrc": "20232:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "20232:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "20358:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20358:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20371:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20371:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20382:3:12",
																				"nodeType": "YulLiteral",
																				"src": "20382:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20367:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20367:3:12"
																		},
																		"nativeSrc": "20367:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20367:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20314:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "20314:43:12"
																},
																"nativeSrc": "20314:73:12",
																"nodeType": "YulFunctionCall",
																"src": "20314:73:12"
															},
															"nativeSrc": "20314:73:12",
															"nodeType": "YulExpressionStatement",
															"src": "20314:73:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "20441:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20441:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20454:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20454:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20465:3:12",
																				"nodeType": "YulLiteral",
																				"src": "20465:3:12",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20450:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20450:3:12"
																		},
																		"nativeSrc": "20450:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20450:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20397:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "20397:43:12"
																},
																"nativeSrc": "20397:73:12",
																"nodeType": "YulFunctionCall",
																"src": "20397:73:12"
															},
															"nativeSrc": "20397:73:12",
															"nodeType": "YulExpressionStatement",
															"src": "20397:73:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "20524:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20524:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20537:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20537:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20548:3:12",
																				"nodeType": "YulLiteral",
																				"src": "20548:3:12",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20533:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20533:3:12"
																		},
																		"nativeSrc": "20533:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20533:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20480:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "20480:43:12"
																},
																"nativeSrc": "20480:73:12",
																"nodeType": "YulFunctionCall",
																"src": "20480:73:12"
															},
															"nativeSrc": "20480:73:12",
															"nodeType": "YulExpressionStatement",
															"src": "20480:73:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20574:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20574:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20585:3:12",
																				"nodeType": "YulLiteral",
																				"src": "20585:3:12",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20570:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20570:3:12"
																		},
																		"nativeSrc": "20570:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20570:19:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20595:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "20595:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20601:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20601:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20591:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20591:3:12"
																		},
																		"nativeSrc": "20591:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20591:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20563:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "20563:6:12"
																},
																"nativeSrc": "20563:49:12",
																"nodeType": "YulFunctionCall",
																"src": "20563:49:12"
															},
															"nativeSrc": "20563:49:12",
															"nodeType": "YulExpressionStatement",
															"src": "20563:49:12"
														},
														{
															"nativeSrc": "20621:86:12",
															"nodeType": "YulAssignment",
															"src": "20621:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value7",
																		"nativeSrc": "20693:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20693:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "20702:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "20702:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20629:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "20629:63:12"
																},
																"nativeSrc": "20629:78:12",
																"nodeType": "YulFunctionCall",
																"src": "20629:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20621:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "20621:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19626:1088:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19856:9:12",
														"nodeType": "YulTypedName",
														"src": "19856:9:12",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "19868:6:12",
														"nodeType": "YulTypedName",
														"src": "19868:6:12",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "19876:6:12",
														"nodeType": "YulTypedName",
														"src": "19876:6:12",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "19884:6:12",
														"nodeType": "YulTypedName",
														"src": "19884:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "19892:6:12",
														"nodeType": "YulTypedName",
														"src": "19892:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "19900:6:12",
														"nodeType": "YulTypedName",
														"src": "19900:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19908:6:12",
														"nodeType": "YulTypedName",
														"src": "19908:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19916:6:12",
														"nodeType": "YulTypedName",
														"src": "19916:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19924:6:12",
														"nodeType": "YulTypedName",
														"src": "19924:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19935:4:12",
														"nodeType": "YulTypedName",
														"src": "19935:4:12",
														"type": ""
													}
												],
												"src": "19626:1088:12"
											},
											{
												"body": {
													"nativeSrc": "20826:118:12",
													"nodeType": "YulBlock",
													"src": "20826:118:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20848:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "20848:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20856:1:12",
																				"nodeType": "YulLiteral",
																				"src": "20856:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20844:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20844:3:12"
																		},
																		"nativeSrc": "20844:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20844:14:12"
																	},
																	{
																		"hexValue": "4c6f616e206973207374696c6c2077697468696e2072657061796d656e742070",
																		"kind": "string",
																		"nativeSrc": "20860:34:12",
																		"nodeType": "YulLiteral",
																		"src": "20860:34:12",
																		"type": "",
																		"value": "Loan is still within repayment p"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20837:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "20837:6:12"
																},
																"nativeSrc": "20837:58:12",
																"nodeType": "YulFunctionCall",
																"src": "20837:58:12"
															},
															"nativeSrc": "20837:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "20837:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20916:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "20916:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20924:2:12",
																				"nodeType": "YulLiteral",
																				"src": "20924:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20912:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20912:3:12"
																		},
																		"nativeSrc": "20912:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20912:15:12"
																	},
																	{
																		"hexValue": "6572696f64",
																		"kind": "string",
																		"nativeSrc": "20929:7:12",
																		"nodeType": "YulLiteral",
																		"src": "20929:7:12",
																		"type": "",
																		"value": "eriod"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20905:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "20905:6:12"
																},
																"nativeSrc": "20905:32:12",
																"nodeType": "YulFunctionCall",
																"src": "20905:32:12"
															},
															"nativeSrc": "20905:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "20905:32:12"
														}
													]
												},
												"name": "store_literal_in_memory_e192d299a97f125a942ab2d9468382b9cac83264907053cf28511765133e0251",
												"nativeSrc": "20720:224:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20818:6:12",
														"nodeType": "YulTypedName",
														"src": "20818:6:12",
														"type": ""
													}
												],
												"src": "20720:224:12"
											},
											{
												"body": {
													"nativeSrc": "21096:220:12",
													"nodeType": "YulBlock",
													"src": "21096:220:12",
													"statements": [
														{
															"nativeSrc": "21106:74:12",
															"nodeType": "YulAssignment",
															"src": "21106:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21172:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "21172:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21177:2:12",
																		"nodeType": "YulLiteral",
																		"src": "21177:2:12",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21113:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "21113:58:12"
																},
																"nativeSrc": "21113:67:12",
																"nodeType": "YulFunctionCall",
																"src": "21113:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21106:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21106:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21278:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "21278:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e192d299a97f125a942ab2d9468382b9cac83264907053cf28511765133e0251",
																	"nativeSrc": "21189:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "21189:88:12"
																},
																"nativeSrc": "21189:93:12",
																"nodeType": "YulFunctionCall",
																"src": "21189:93:12"
															},
															"nativeSrc": "21189:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "21189:93:12"
														},
														{
															"nativeSrc": "21291:19:12",
															"nodeType": "YulAssignment",
															"src": "21291:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21302:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "21302:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21307:2:12",
																		"nodeType": "YulLiteral",
																		"src": "21307:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21298:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21298:3:12"
																},
																"nativeSrc": "21298:12:12",
																"nodeType": "YulFunctionCall",
																"src": "21298:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21291:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21291:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e192d299a97f125a942ab2d9468382b9cac83264907053cf28511765133e0251_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20950:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21084:3:12",
														"nodeType": "YulTypedName",
														"src": "21084:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21092:3:12",
														"nodeType": "YulTypedName",
														"src": "21092:3:12",
														"type": ""
													}
												],
												"src": "20950:366:12"
											},
											{
												"body": {
													"nativeSrc": "21493:248:12",
													"nodeType": "YulBlock",
													"src": "21493:248:12",
													"statements": [
														{
															"nativeSrc": "21503:26:12",
															"nodeType": "YulAssignment",
															"src": "21503:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21515:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "21515:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21526:2:12",
																		"nodeType": "YulLiteral",
																		"src": "21526:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21511:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21511:3:12"
																},
																"nativeSrc": "21511:18:12",
																"nodeType": "YulFunctionCall",
																"src": "21511:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21503:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "21503:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21550:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21550:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21561:1:12",
																				"nodeType": "YulLiteral",
																				"src": "21561:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21546:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21546:3:12"
																		},
																		"nativeSrc": "21546:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21546:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21569:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "21569:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21575:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21575:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21565:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21565:3:12"
																		},
																		"nativeSrc": "21565:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21565:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21539:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "21539:6:12"
																},
																"nativeSrc": "21539:47:12",
																"nodeType": "YulFunctionCall",
																"src": "21539:47:12"
															},
															"nativeSrc": "21539:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "21539:47:12"
														},
														{
															"nativeSrc": "21595:139:12",
															"nodeType": "YulAssignment",
															"src": "21595:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21729:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "21729:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e192d299a97f125a942ab2d9468382b9cac83264907053cf28511765133e0251_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21603:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "21603:124:12"
																},
																"nativeSrc": "21603:131:12",
																"nodeType": "YulFunctionCall",
																"src": "21603:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21595:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "21595:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e192d299a97f125a942ab2d9468382b9cac83264907053cf28511765133e0251__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21322:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21473:9:12",
														"nodeType": "YulTypedName",
														"src": "21473:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21488:4:12",
														"nodeType": "YulTypedName",
														"src": "21488:4:12",
														"type": ""
													}
												],
												"src": "21322:419:12"
											},
											{
												"body": {
													"nativeSrc": "21853:63:12",
													"nodeType": "YulBlock",
													"src": "21853:63:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21875:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "21875:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21883:1:12",
																				"nodeType": "YulLiteral",
																				"src": "21883:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21871:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21871:3:12"
																		},
																		"nativeSrc": "21871:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21871:14:12"
																	},
																	{
																		"hexValue": "4c6f616e20616c726561647920726570616964",
																		"kind": "string",
																		"nativeSrc": "21887:21:12",
																		"nodeType": "YulLiteral",
																		"src": "21887:21:12",
																		"type": "",
																		"value": "Loan already repaid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21864:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "21864:6:12"
																},
																"nativeSrc": "21864:45:12",
																"nodeType": "YulFunctionCall",
																"src": "21864:45:12"
															},
															"nativeSrc": "21864:45:12",
															"nodeType": "YulExpressionStatement",
															"src": "21864:45:12"
														}
													]
												},
												"name": "store_literal_in_memory_a088ab1f5c37ff63830f8ba110e314fea69e930646a4a57be513c9eb44c36474",
												"nativeSrc": "21747:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21845:6:12",
														"nodeType": "YulTypedName",
														"src": "21845:6:12",
														"type": ""
													}
												],
												"src": "21747:169:12"
											},
											{
												"body": {
													"nativeSrc": "22068:220:12",
													"nodeType": "YulBlock",
													"src": "22068:220:12",
													"statements": [
														{
															"nativeSrc": "22078:74:12",
															"nodeType": "YulAssignment",
															"src": "22078:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22144:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "22144:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22149:2:12",
																		"nodeType": "YulLiteral",
																		"src": "22149:2:12",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22085:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "22085:58:12"
																},
																"nativeSrc": "22085:67:12",
																"nodeType": "YulFunctionCall",
																"src": "22085:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22078:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22078:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22250:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "22250:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a088ab1f5c37ff63830f8ba110e314fea69e930646a4a57be513c9eb44c36474",
																	"nativeSrc": "22161:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "22161:88:12"
																},
																"nativeSrc": "22161:93:12",
																"nodeType": "YulFunctionCall",
																"src": "22161:93:12"
															},
															"nativeSrc": "22161:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "22161:93:12"
														},
														{
															"nativeSrc": "22263:19:12",
															"nodeType": "YulAssignment",
															"src": "22263:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22274:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "22274:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22279:2:12",
																		"nodeType": "YulLiteral",
																		"src": "22279:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22270:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22270:3:12"
																},
																"nativeSrc": "22270:12:12",
																"nodeType": "YulFunctionCall",
																"src": "22270:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22263:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22263:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a088ab1f5c37ff63830f8ba110e314fea69e930646a4a57be513c9eb44c36474_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21922:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22056:3:12",
														"nodeType": "YulTypedName",
														"src": "22056:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22064:3:12",
														"nodeType": "YulTypedName",
														"src": "22064:3:12",
														"type": ""
													}
												],
												"src": "21922:366:12"
											},
											{
												"body": {
													"nativeSrc": "22465:248:12",
													"nodeType": "YulBlock",
													"src": "22465:248:12",
													"statements": [
														{
															"nativeSrc": "22475:26:12",
															"nodeType": "YulAssignment",
															"src": "22475:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22487:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "22487:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22498:2:12",
																		"nodeType": "YulLiteral",
																		"src": "22498:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22483:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22483:3:12"
																},
																"nativeSrc": "22483:18:12",
																"nodeType": "YulFunctionCall",
																"src": "22483:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22475:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "22475:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22522:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "22522:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22533:1:12",
																				"nodeType": "YulLiteral",
																				"src": "22533:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22518:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22518:3:12"
																		},
																		"nativeSrc": "22518:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22518:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22541:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "22541:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22547:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "22547:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22537:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22537:3:12"
																		},
																		"nativeSrc": "22537:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22537:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22511:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "22511:6:12"
																},
																"nativeSrc": "22511:47:12",
																"nodeType": "YulFunctionCall",
																"src": "22511:47:12"
															},
															"nativeSrc": "22511:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "22511:47:12"
														},
														{
															"nativeSrc": "22567:139:12",
															"nodeType": "YulAssignment",
															"src": "22567:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22701:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "22701:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a088ab1f5c37ff63830f8ba110e314fea69e930646a4a57be513c9eb44c36474_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22575:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "22575:124:12"
																},
																"nativeSrc": "22575:131:12",
																"nodeType": "YulFunctionCall",
																"src": "22575:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22567:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "22567:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a088ab1f5c37ff63830f8ba110e314fea69e930646a4a57be513c9eb44c36474__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22294:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22445:9:12",
														"nodeType": "YulTypedName",
														"src": "22445:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22460:4:12",
														"nodeType": "YulTypedName",
														"src": "22460:4:12",
														"type": ""
													}
												],
												"src": "22294:419:12"
											},
											{
												"body": {
													"nativeSrc": "22764:149:12",
													"nodeType": "YulBlock",
													"src": "22764:149:12",
													"statements": [
														{
															"nativeSrc": "22774:25:12",
															"nodeType": "YulAssignment",
															"src": "22774:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "22797:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "22797:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "22779:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "22779:17:12"
																},
																"nativeSrc": "22779:20:12",
																"nodeType": "YulFunctionCall",
																"src": "22779:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "22774:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "22774:1:12"
																}
															]
														},
														{
															"nativeSrc": "22808:25:12",
															"nodeType": "YulAssignment",
															"src": "22808:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "22831:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "22831:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "22813:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "22813:17:12"
																},
																"nativeSrc": "22813:20:12",
																"nodeType": "YulFunctionCall",
																"src": "22813:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "22808:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "22808:1:12"
																}
															]
														},
														{
															"nativeSrc": "22842:17:12",
															"nodeType": "YulAssignment",
															"src": "22842:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "22854:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "22854:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "22857:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "22857:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "22850:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22850:3:12"
																},
																"nativeSrc": "22850:9:12",
																"nodeType": "YulFunctionCall",
																"src": "22850:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "22842:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "22842:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "22884:22:12",
																"nodeType": "YulBlock",
																"src": "22884:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "22886:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "22886:16:12"
																			},
																			"nativeSrc": "22886:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "22886:18:12"
																		},
																		"nativeSrc": "22886:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "22886:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "22875:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "22875:4:12"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "22881:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "22881:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "22872:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "22872:2:12"
																},
																"nativeSrc": "22872:11:12",
																"nodeType": "YulFunctionCall",
																"src": "22872:11:12"
															},
															"nativeSrc": "22869:37:12",
															"nodeType": "YulIf",
															"src": "22869:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "22719:194:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "22750:1:12",
														"nodeType": "YulTypedName",
														"src": "22750:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "22753:1:12",
														"nodeType": "YulTypedName",
														"src": "22753:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "22759:4:12",
														"nodeType": "YulTypedName",
														"src": "22759:4:12",
														"type": ""
													}
												],
												"src": "22719:194:12"
											},
											{
												"body": {
													"nativeSrc": "23025:67:12",
													"nodeType": "YulBlock",
													"src": "23025:67:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23047:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "23047:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23055:1:12",
																				"nodeType": "YulLiteral",
																				"src": "23055:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23043:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "23043:3:12"
																		},
																		"nativeSrc": "23043:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "23043:14:12"
																	},
																	{
																		"hexValue": "4f6e6c7920626f72726f7765722063616e207265706179",
																		"kind": "string",
																		"nativeSrc": "23059:25:12",
																		"nodeType": "YulLiteral",
																		"src": "23059:25:12",
																		"type": "",
																		"value": "Only borrower can repay"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23036:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "23036:6:12"
																},
																"nativeSrc": "23036:49:12",
																"nodeType": "YulFunctionCall",
																"src": "23036:49:12"
															},
															"nativeSrc": "23036:49:12",
															"nodeType": "YulExpressionStatement",
															"src": "23036:49:12"
														}
													]
												},
												"name": "store_literal_in_memory_ea61514b076355fd74cc868f0a530b4816a48e9424c44b3218f6eaf917d3d18e",
												"nativeSrc": "22919:173:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "23017:6:12",
														"nodeType": "YulTypedName",
														"src": "23017:6:12",
														"type": ""
													}
												],
												"src": "22919:173:12"
											},
											{
												"body": {
													"nativeSrc": "23244:220:12",
													"nodeType": "YulBlock",
													"src": "23244:220:12",
													"statements": [
														{
															"nativeSrc": "23254:74:12",
															"nodeType": "YulAssignment",
															"src": "23254:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23320:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "23320:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23325:2:12",
																		"nodeType": "YulLiteral",
																		"src": "23325:2:12",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23261:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "23261:58:12"
																},
																"nativeSrc": "23261:67:12",
																"nodeType": "YulFunctionCall",
																"src": "23261:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23254:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "23254:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23426:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "23426:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ea61514b076355fd74cc868f0a530b4816a48e9424c44b3218f6eaf917d3d18e",
																	"nativeSrc": "23337:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "23337:88:12"
																},
																"nativeSrc": "23337:93:12",
																"nodeType": "YulFunctionCall",
																"src": "23337:93:12"
															},
															"nativeSrc": "23337:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "23337:93:12"
														},
														{
															"nativeSrc": "23439:19:12",
															"nodeType": "YulAssignment",
															"src": "23439:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23450:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "23450:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23455:2:12",
																		"nodeType": "YulLiteral",
																		"src": "23455:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23446:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "23446:3:12"
																},
																"nativeSrc": "23446:12:12",
																"nodeType": "YulFunctionCall",
																"src": "23446:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23439:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "23439:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ea61514b076355fd74cc868f0a530b4816a48e9424c44b3218f6eaf917d3d18e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "23098:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23232:3:12",
														"nodeType": "YulTypedName",
														"src": "23232:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23240:3:12",
														"nodeType": "YulTypedName",
														"src": "23240:3:12",
														"type": ""
													}
												],
												"src": "23098:366:12"
											},
											{
												"body": {
													"nativeSrc": "23641:248:12",
													"nodeType": "YulBlock",
													"src": "23641:248:12",
													"statements": [
														{
															"nativeSrc": "23651:26:12",
															"nodeType": "YulAssignment",
															"src": "23651:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23663:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "23663:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23674:2:12",
																		"nodeType": "YulLiteral",
																		"src": "23674:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23659:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "23659:3:12"
																},
																"nativeSrc": "23659:18:12",
																"nodeType": "YulFunctionCall",
																"src": "23659:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23651:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "23651:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23698:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "23698:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23709:1:12",
																				"nodeType": "YulLiteral",
																				"src": "23709:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23694:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "23694:3:12"
																		},
																		"nativeSrc": "23694:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "23694:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23717:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "23717:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23723:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "23723:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23713:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "23713:3:12"
																		},
																		"nativeSrc": "23713:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "23713:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23687:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "23687:6:12"
																},
																"nativeSrc": "23687:47:12",
																"nodeType": "YulFunctionCall",
																"src": "23687:47:12"
															},
															"nativeSrc": "23687:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "23687:47:12"
														},
														{
															"nativeSrc": "23743:139:12",
															"nodeType": "YulAssignment",
															"src": "23743:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23877:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "23877:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ea61514b076355fd74cc868f0a530b4816a48e9424c44b3218f6eaf917d3d18e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23751:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "23751:124:12"
																},
																"nativeSrc": "23751:131:12",
																"nodeType": "YulFunctionCall",
																"src": "23751:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23743:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "23743:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ea61514b076355fd74cc868f0a530b4816a48e9424c44b3218f6eaf917d3d18e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23470:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23621:9:12",
														"nodeType": "YulTypedName",
														"src": "23621:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23636:4:12",
														"nodeType": "YulTypedName",
														"src": "23636:4:12",
														"type": ""
													}
												],
												"src": "23470:419:12"
											},
											{
												"body": {
													"nativeSrc": "24001:71:12",
													"nodeType": "YulBlock",
													"src": "24001:71:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "24023:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "24023:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24031:1:12",
																				"nodeType": "YulLiteral",
																				"src": "24031:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24019:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "24019:3:12"
																		},
																		"nativeSrc": "24019:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "24019:14:12"
																	},
																	{
																		"hexValue": "4c6f616e206d757374206265206163636570746564206669727374",
																		"kind": "string",
																		"nativeSrc": "24035:29:12",
																		"nodeType": "YulLiteral",
																		"src": "24035:29:12",
																		"type": "",
																		"value": "Loan must be accepted first"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24012:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "24012:6:12"
																},
																"nativeSrc": "24012:53:12",
																"nodeType": "YulFunctionCall",
																"src": "24012:53:12"
															},
															"nativeSrc": "24012:53:12",
															"nodeType": "YulExpressionStatement",
															"src": "24012:53:12"
														}
													]
												},
												"name": "store_literal_in_memory_ee10fd3130e11f66c5668ce4a72b75e62fb1c6c3bf42e0daa0866d6aebb323c9",
												"nativeSrc": "23895:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "23993:6:12",
														"nodeType": "YulTypedName",
														"src": "23993:6:12",
														"type": ""
													}
												],
												"src": "23895:177:12"
											},
											{
												"body": {
													"nativeSrc": "24224:220:12",
													"nodeType": "YulBlock",
													"src": "24224:220:12",
													"statements": [
														{
															"nativeSrc": "24234:74:12",
															"nodeType": "YulAssignment",
															"src": "24234:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24300:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "24300:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24305:2:12",
																		"nodeType": "YulLiteral",
																		"src": "24305:2:12",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24241:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "24241:58:12"
																},
																"nativeSrc": "24241:67:12",
																"nodeType": "YulFunctionCall",
																"src": "24241:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24234:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24234:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24406:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "24406:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ee10fd3130e11f66c5668ce4a72b75e62fb1c6c3bf42e0daa0866d6aebb323c9",
																	"nativeSrc": "24317:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "24317:88:12"
																},
																"nativeSrc": "24317:93:12",
																"nodeType": "YulFunctionCall",
																"src": "24317:93:12"
															},
															"nativeSrc": "24317:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "24317:93:12"
														},
														{
															"nativeSrc": "24419:19:12",
															"nodeType": "YulAssignment",
															"src": "24419:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24430:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "24430:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24435:2:12",
																		"nodeType": "YulLiteral",
																		"src": "24435:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24426:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24426:3:12"
																},
																"nativeSrc": "24426:12:12",
																"nodeType": "YulFunctionCall",
																"src": "24426:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24419:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24419:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ee10fd3130e11f66c5668ce4a72b75e62fb1c6c3bf42e0daa0866d6aebb323c9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "24078:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24212:3:12",
														"nodeType": "YulTypedName",
														"src": "24212:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24220:3:12",
														"nodeType": "YulTypedName",
														"src": "24220:3:12",
														"type": ""
													}
												],
												"src": "24078:366:12"
											},
											{
												"body": {
													"nativeSrc": "24621:248:12",
													"nodeType": "YulBlock",
													"src": "24621:248:12",
													"statements": [
														{
															"nativeSrc": "24631:26:12",
															"nodeType": "YulAssignment",
															"src": "24631:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24643:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "24643:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24654:2:12",
																		"nodeType": "YulLiteral",
																		"src": "24654:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24639:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24639:3:12"
																},
																"nativeSrc": "24639:18:12",
																"nodeType": "YulFunctionCall",
																"src": "24639:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24631:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "24631:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24678:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "24678:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24689:1:12",
																				"nodeType": "YulLiteral",
																				"src": "24689:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24674:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "24674:3:12"
																		},
																		"nativeSrc": "24674:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "24674:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24697:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "24697:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24703:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "24703:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24693:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "24693:3:12"
																		},
																		"nativeSrc": "24693:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "24693:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24667:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "24667:6:12"
																},
																"nativeSrc": "24667:47:12",
																"nodeType": "YulFunctionCall",
																"src": "24667:47:12"
															},
															"nativeSrc": "24667:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "24667:47:12"
														},
														{
															"nativeSrc": "24723:139:12",
															"nodeType": "YulAssignment",
															"src": "24723:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "24857:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "24857:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ee10fd3130e11f66c5668ce4a72b75e62fb1c6c3bf42e0daa0866d6aebb323c9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24731:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "24731:124:12"
																},
																"nativeSrc": "24731:131:12",
																"nodeType": "YulFunctionCall",
																"src": "24731:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24723:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "24723:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ee10fd3130e11f66c5668ce4a72b75e62fb1c6c3bf42e0daa0866d6aebb323c9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "24450:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24601:9:12",
														"nodeType": "YulTypedName",
														"src": "24601:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24616:4:12",
														"nodeType": "YulTypedName",
														"src": "24616:4:12",
														"type": ""
													}
												],
												"src": "24450:419:12"
											},
											{
												"body": {
													"nativeSrc": "24981:68:12",
													"nodeType": "YulBlock",
													"src": "24981:68:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "25003:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "25003:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25011:1:12",
																				"nodeType": "YulLiteral",
																				"src": "25011:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24999:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "24999:3:12"
																		},
																		"nativeSrc": "24999:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "24999:14:12"
																	},
																	{
																		"hexValue": "4f6e6c7920626f72726f7765722063616e20616363657074",
																		"kind": "string",
																		"nativeSrc": "25015:26:12",
																		"nodeType": "YulLiteral",
																		"src": "25015:26:12",
																		"type": "",
																		"value": "Only borrower can accept"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24992:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "24992:6:12"
																},
																"nativeSrc": "24992:50:12",
																"nodeType": "YulFunctionCall",
																"src": "24992:50:12"
															},
															"nativeSrc": "24992:50:12",
															"nodeType": "YulExpressionStatement",
															"src": "24992:50:12"
														}
													]
												},
												"name": "store_literal_in_memory_4d80d3094575a659c46b7e44006980a5dd7955bb1e180e936b9bc133c4f8218f",
												"nativeSrc": "24875:174:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "24973:6:12",
														"nodeType": "YulTypedName",
														"src": "24973:6:12",
														"type": ""
													}
												],
												"src": "24875:174:12"
											},
											{
												"body": {
													"nativeSrc": "25201:220:12",
													"nodeType": "YulBlock",
													"src": "25201:220:12",
													"statements": [
														{
															"nativeSrc": "25211:74:12",
															"nodeType": "YulAssignment",
															"src": "25211:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25277:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "25277:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25282:2:12",
																		"nodeType": "YulLiteral",
																		"src": "25282:2:12",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25218:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "25218:58:12"
																},
																"nativeSrc": "25218:67:12",
																"nodeType": "YulFunctionCall",
																"src": "25218:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "25211:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "25211:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25383:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "25383:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4d80d3094575a659c46b7e44006980a5dd7955bb1e180e936b9bc133c4f8218f",
																	"nativeSrc": "25294:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "25294:88:12"
																},
																"nativeSrc": "25294:93:12",
																"nodeType": "YulFunctionCall",
																"src": "25294:93:12"
															},
															"nativeSrc": "25294:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "25294:93:12"
														},
														{
															"nativeSrc": "25396:19:12",
															"nodeType": "YulAssignment",
															"src": "25396:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25407:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "25407:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25412:2:12",
																		"nodeType": "YulLiteral",
																		"src": "25412:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25403:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "25403:3:12"
																},
																"nativeSrc": "25403:12:12",
																"nodeType": "YulFunctionCall",
																"src": "25403:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "25396:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "25396:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4d80d3094575a659c46b7e44006980a5dd7955bb1e180e936b9bc133c4f8218f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "25055:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "25189:3:12",
														"nodeType": "YulTypedName",
														"src": "25189:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "25197:3:12",
														"nodeType": "YulTypedName",
														"src": "25197:3:12",
														"type": ""
													}
												],
												"src": "25055:366:12"
											},
											{
												"body": {
													"nativeSrc": "25598:248:12",
													"nodeType": "YulBlock",
													"src": "25598:248:12",
													"statements": [
														{
															"nativeSrc": "25608:26:12",
															"nodeType": "YulAssignment",
															"src": "25608:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25620:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "25620:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25631:2:12",
																		"nodeType": "YulLiteral",
																		"src": "25631:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25616:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "25616:3:12"
																},
																"nativeSrc": "25616:18:12",
																"nodeType": "YulFunctionCall",
																"src": "25616:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25608:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "25608:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25655:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "25655:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25666:1:12",
																				"nodeType": "YulLiteral",
																				"src": "25666:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25651:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "25651:3:12"
																		},
																		"nativeSrc": "25651:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "25651:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "25674:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "25674:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "25680:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "25680:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25670:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "25670:3:12"
																		},
																		"nativeSrc": "25670:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "25670:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25644:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "25644:6:12"
																},
																"nativeSrc": "25644:47:12",
																"nodeType": "YulFunctionCall",
																"src": "25644:47:12"
															},
															"nativeSrc": "25644:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "25644:47:12"
														},
														{
															"nativeSrc": "25700:139:12",
															"nodeType": "YulAssignment",
															"src": "25700:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "25834:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "25834:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4d80d3094575a659c46b7e44006980a5dd7955bb1e180e936b9bc133c4f8218f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25708:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "25708:124:12"
																},
																"nativeSrc": "25708:131:12",
																"nodeType": "YulFunctionCall",
																"src": "25708:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25700:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "25700:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4d80d3094575a659c46b7e44006980a5dd7955bb1e180e936b9bc133c4f8218f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "25427:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25578:9:12",
														"nodeType": "YulTypedName",
														"src": "25578:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25593:4:12",
														"nodeType": "YulTypedName",
														"src": "25593:4:12",
														"type": ""
													}
												],
												"src": "25427:419:12"
											},
											{
												"body": {
													"nativeSrc": "25958:65:12",
													"nodeType": "YulBlock",
													"src": "25958:65:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "25980:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "25980:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25988:1:12",
																				"nodeType": "YulLiteral",
																				"src": "25988:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25976:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "25976:3:12"
																		},
																		"nativeSrc": "25976:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "25976:14:12"
																	},
																	{
																		"hexValue": "4c6f616e20616c7265616479206163636570746564",
																		"kind": "string",
																		"nativeSrc": "25992:23:12",
																		"nodeType": "YulLiteral",
																		"src": "25992:23:12",
																		"type": "",
																		"value": "Loan already accepted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25969:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "25969:6:12"
																},
																"nativeSrc": "25969:47:12",
																"nodeType": "YulFunctionCall",
																"src": "25969:47:12"
															},
															"nativeSrc": "25969:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "25969:47:12"
														}
													]
												},
												"name": "store_literal_in_memory_3fff4684e62df955459aa4d38296cd5485059b1bcadaa915955ad9bd719f3844",
												"nativeSrc": "25852:171:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "25950:6:12",
														"nodeType": "YulTypedName",
														"src": "25950:6:12",
														"type": ""
													}
												],
												"src": "25852:171:12"
											},
											{
												"body": {
													"nativeSrc": "26175:220:12",
													"nodeType": "YulBlock",
													"src": "26175:220:12",
													"statements": [
														{
															"nativeSrc": "26185:74:12",
															"nodeType": "YulAssignment",
															"src": "26185:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26251:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "26251:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26256:2:12",
																		"nodeType": "YulLiteral",
																		"src": "26256:2:12",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26192:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "26192:58:12"
																},
																"nativeSrc": "26192:67:12",
																"nodeType": "YulFunctionCall",
																"src": "26192:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "26185:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "26185:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26357:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "26357:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3fff4684e62df955459aa4d38296cd5485059b1bcadaa915955ad9bd719f3844",
																	"nativeSrc": "26268:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "26268:88:12"
																},
																"nativeSrc": "26268:93:12",
																"nodeType": "YulFunctionCall",
																"src": "26268:93:12"
															},
															"nativeSrc": "26268:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "26268:93:12"
														},
														{
															"nativeSrc": "26370:19:12",
															"nodeType": "YulAssignment",
															"src": "26370:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26381:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "26381:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26386:2:12",
																		"nodeType": "YulLiteral",
																		"src": "26386:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26377:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "26377:3:12"
																},
																"nativeSrc": "26377:12:12",
																"nodeType": "YulFunctionCall",
																"src": "26377:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "26370:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "26370:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3fff4684e62df955459aa4d38296cd5485059b1bcadaa915955ad9bd719f3844_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "26029:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "26163:3:12",
														"nodeType": "YulTypedName",
														"src": "26163:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "26171:3:12",
														"nodeType": "YulTypedName",
														"src": "26171:3:12",
														"type": ""
													}
												],
												"src": "26029:366:12"
											},
											{
												"body": {
													"nativeSrc": "26572:248:12",
													"nodeType": "YulBlock",
													"src": "26572:248:12",
													"statements": [
														{
															"nativeSrc": "26582:26:12",
															"nodeType": "YulAssignment",
															"src": "26582:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26594:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "26594:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26605:2:12",
																		"nodeType": "YulLiteral",
																		"src": "26605:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26590:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "26590:3:12"
																},
																"nativeSrc": "26590:18:12",
																"nodeType": "YulFunctionCall",
																"src": "26590:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26582:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "26582:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26629:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "26629:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26640:1:12",
																				"nodeType": "YulLiteral",
																				"src": "26640:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26625:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "26625:3:12"
																		},
																		"nativeSrc": "26625:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "26625:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "26648:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "26648:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26654:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "26654:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26644:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "26644:3:12"
																		},
																		"nativeSrc": "26644:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "26644:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26618:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "26618:6:12"
																},
																"nativeSrc": "26618:47:12",
																"nodeType": "YulFunctionCall",
																"src": "26618:47:12"
															},
															"nativeSrc": "26618:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "26618:47:12"
														},
														{
															"nativeSrc": "26674:139:12",
															"nodeType": "YulAssignment",
															"src": "26674:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "26808:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "26808:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3fff4684e62df955459aa4d38296cd5485059b1bcadaa915955ad9bd719f3844_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26682:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "26682:124:12"
																},
																"nativeSrc": "26682:131:12",
																"nodeType": "YulFunctionCall",
																"src": "26682:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26674:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "26674:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3fff4684e62df955459aa4d38296cd5485059b1bcadaa915955ad9bd719f3844__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "26401:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26552:9:12",
														"nodeType": "YulTypedName",
														"src": "26552:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26567:4:12",
														"nodeType": "YulTypedName",
														"src": "26567:4:12",
														"type": ""
													}
												],
												"src": "26401:419:12"
											},
											{
												"body": {
													"nativeSrc": "26932:66:12",
													"nodeType": "YulBlock",
													"src": "26932:66:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "26954:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "26954:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26962:1:12",
																				"nodeType": "YulLiteral",
																				"src": "26962:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26950:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "26950:3:12"
																		},
																		"nativeSrc": "26950:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "26950:14:12"
																	},
																	{
																		"hexValue": "4f6e6c79206c656e6465722063616e2063616e63656c",
																		"kind": "string",
																		"nativeSrc": "26966:24:12",
																		"nodeType": "YulLiteral",
																		"src": "26966:24:12",
																		"type": "",
																		"value": "Only lender can cancel"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26943:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "26943:6:12"
																},
																"nativeSrc": "26943:48:12",
																"nodeType": "YulFunctionCall",
																"src": "26943:48:12"
															},
															"nativeSrc": "26943:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "26943:48:12"
														}
													]
												},
												"name": "store_literal_in_memory_105e73626a7e497364218351d5a4f17588827e87508fa24d8078e82a25737496",
												"nativeSrc": "26826:172:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "26924:6:12",
														"nodeType": "YulTypedName",
														"src": "26924:6:12",
														"type": ""
													}
												],
												"src": "26826:172:12"
											},
											{
												"body": {
													"nativeSrc": "27150:220:12",
													"nodeType": "YulBlock",
													"src": "27150:220:12",
													"statements": [
														{
															"nativeSrc": "27160:74:12",
															"nodeType": "YulAssignment",
															"src": "27160:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27226:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "27226:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27231:2:12",
																		"nodeType": "YulLiteral",
																		"src": "27231:2:12",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "27167:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "27167:58:12"
																},
																"nativeSrc": "27167:67:12",
																"nodeType": "YulFunctionCall",
																"src": "27167:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "27160:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "27160:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27332:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "27332:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_105e73626a7e497364218351d5a4f17588827e87508fa24d8078e82a25737496",
																	"nativeSrc": "27243:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "27243:88:12"
																},
																"nativeSrc": "27243:93:12",
																"nodeType": "YulFunctionCall",
																"src": "27243:93:12"
															},
															"nativeSrc": "27243:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "27243:93:12"
														},
														{
															"nativeSrc": "27345:19:12",
															"nodeType": "YulAssignment",
															"src": "27345:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27356:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "27356:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27361:2:12",
																		"nodeType": "YulLiteral",
																		"src": "27361:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27352:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "27352:3:12"
																},
																"nativeSrc": "27352:12:12",
																"nodeType": "YulFunctionCall",
																"src": "27352:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "27345:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "27345:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_105e73626a7e497364218351d5a4f17588827e87508fa24d8078e82a25737496_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "27004:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "27138:3:12",
														"nodeType": "YulTypedName",
														"src": "27138:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "27146:3:12",
														"nodeType": "YulTypedName",
														"src": "27146:3:12",
														"type": ""
													}
												],
												"src": "27004:366:12"
											},
											{
												"body": {
													"nativeSrc": "27547:248:12",
													"nodeType": "YulBlock",
													"src": "27547:248:12",
													"statements": [
														{
															"nativeSrc": "27557:26:12",
															"nodeType": "YulAssignment",
															"src": "27557:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "27569:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "27569:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27580:2:12",
																		"nodeType": "YulLiteral",
																		"src": "27580:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27565:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "27565:3:12"
																},
																"nativeSrc": "27565:18:12",
																"nodeType": "YulFunctionCall",
																"src": "27565:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27557:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "27557:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27604:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "27604:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27615:1:12",
																				"nodeType": "YulLiteral",
																				"src": "27615:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27600:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "27600:3:12"
																		},
																		"nativeSrc": "27600:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "27600:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "27623:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "27623:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "27629:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "27629:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "27619:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "27619:3:12"
																		},
																		"nativeSrc": "27619:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "27619:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27593:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "27593:6:12"
																},
																"nativeSrc": "27593:47:12",
																"nodeType": "YulFunctionCall",
																"src": "27593:47:12"
															},
															"nativeSrc": "27593:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "27593:47:12"
														},
														{
															"nativeSrc": "27649:139:12",
															"nodeType": "YulAssignment",
															"src": "27649:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "27783:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "27783:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_105e73626a7e497364218351d5a4f17588827e87508fa24d8078e82a25737496_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "27657:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "27657:124:12"
																},
																"nativeSrc": "27657:131:12",
																"nodeType": "YulFunctionCall",
																"src": "27657:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27649:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "27649:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_105e73626a7e497364218351d5a4f17588827e87508fa24d8078e82a25737496__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "27376:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27527:9:12",
														"nodeType": "YulTypedName",
														"src": "27527:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "27542:4:12",
														"nodeType": "YulTypedName",
														"src": "27542:4:12",
														"type": ""
													}
												],
												"src": "27376:419:12"
											},
											{
												"body": {
													"nativeSrc": "27907:66:12",
													"nodeType": "YulBlock",
													"src": "27907:66:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "27929:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "27929:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27937:1:12",
																				"nodeType": "YulLiteral",
																				"src": "27937:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27925:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "27925:3:12"
																		},
																		"nativeSrc": "27925:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "27925:14:12"
																	},
																	{
																		"hexValue": "4c6f616e20616c72656164792063616e63656c6c6564",
																		"kind": "string",
																		"nativeSrc": "27941:24:12",
																		"nodeType": "YulLiteral",
																		"src": "27941:24:12",
																		"type": "",
																		"value": "Loan already cancelled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27918:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "27918:6:12"
																},
																"nativeSrc": "27918:48:12",
																"nodeType": "YulFunctionCall",
																"src": "27918:48:12"
															},
															"nativeSrc": "27918:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "27918:48:12"
														}
													]
												},
												"name": "store_literal_in_memory_6311301fb3b87173647430fa47d57a08f88ecb228c291c7a22b64d3d67bfd616",
												"nativeSrc": "27801:172:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "27899:6:12",
														"nodeType": "YulTypedName",
														"src": "27899:6:12",
														"type": ""
													}
												],
												"src": "27801:172:12"
											},
											{
												"body": {
													"nativeSrc": "28125:220:12",
													"nodeType": "YulBlock",
													"src": "28125:220:12",
													"statements": [
														{
															"nativeSrc": "28135:74:12",
															"nodeType": "YulAssignment",
															"src": "28135:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28201:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "28201:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28206:2:12",
																		"nodeType": "YulLiteral",
																		"src": "28206:2:12",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "28142:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "28142:58:12"
																},
																"nativeSrc": "28142:67:12",
																"nodeType": "YulFunctionCall",
																"src": "28142:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "28135:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "28135:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28307:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "28307:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6311301fb3b87173647430fa47d57a08f88ecb228c291c7a22b64d3d67bfd616",
																	"nativeSrc": "28218:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "28218:88:12"
																},
																"nativeSrc": "28218:93:12",
																"nodeType": "YulFunctionCall",
																"src": "28218:93:12"
															},
															"nativeSrc": "28218:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "28218:93:12"
														},
														{
															"nativeSrc": "28320:19:12",
															"nodeType": "YulAssignment",
															"src": "28320:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28331:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "28331:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28336:2:12",
																		"nodeType": "YulLiteral",
																		"src": "28336:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28327:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "28327:3:12"
																},
																"nativeSrc": "28327:12:12",
																"nodeType": "YulFunctionCall",
																"src": "28327:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "28320:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "28320:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6311301fb3b87173647430fa47d57a08f88ecb228c291c7a22b64d3d67bfd616_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "27979:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "28113:3:12",
														"nodeType": "YulTypedName",
														"src": "28113:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "28121:3:12",
														"nodeType": "YulTypedName",
														"src": "28121:3:12",
														"type": ""
													}
												],
												"src": "27979:366:12"
											},
											{
												"body": {
													"nativeSrc": "28522:248:12",
													"nodeType": "YulBlock",
													"src": "28522:248:12",
													"statements": [
														{
															"nativeSrc": "28532:26:12",
															"nodeType": "YulAssignment",
															"src": "28532:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "28544:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "28544:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28555:2:12",
																		"nodeType": "YulLiteral",
																		"src": "28555:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28540:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "28540:3:12"
																},
																"nativeSrc": "28540:18:12",
																"nodeType": "YulFunctionCall",
																"src": "28540:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28532:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "28532:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28579:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "28579:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28590:1:12",
																				"nodeType": "YulLiteral",
																				"src": "28590:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28575:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "28575:3:12"
																		},
																		"nativeSrc": "28575:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "28575:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "28598:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "28598:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "28604:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "28604:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "28594:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "28594:3:12"
																		},
																		"nativeSrc": "28594:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "28594:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28568:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "28568:6:12"
																},
																"nativeSrc": "28568:47:12",
																"nodeType": "YulFunctionCall",
																"src": "28568:47:12"
															},
															"nativeSrc": "28568:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "28568:47:12"
														},
														{
															"nativeSrc": "28624:139:12",
															"nodeType": "YulAssignment",
															"src": "28624:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "28758:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "28758:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6311301fb3b87173647430fa47d57a08f88ecb228c291c7a22b64d3d67bfd616_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "28632:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "28632:124:12"
																},
																"nativeSrc": "28632:131:12",
																"nodeType": "YulFunctionCall",
																"src": "28632:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28624:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "28624:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6311301fb3b87173647430fa47d57a08f88ecb228c291c7a22b64d3d67bfd616__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "28351:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28502:9:12",
														"nodeType": "YulTypedName",
														"src": "28502:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "28517:4:12",
														"nodeType": "YulTypedName",
														"src": "28517:4:12",
														"type": ""
													}
												],
												"src": "28351:419:12"
											},
											{
												"body": {
													"nativeSrc": "28882:74:12",
													"nodeType": "YulBlock",
													"src": "28882:74:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "28904:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "28904:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28912:1:12",
																				"nodeType": "YulLiteral",
																				"src": "28912:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28900:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "28900:3:12"
																		},
																		"nativeSrc": "28900:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "28900:14:12"
																	},
																	{
																		"hexValue": "43616e6e6f742063616e63656c20616e206163636570746564206c6f616e",
																		"kind": "string",
																		"nativeSrc": "28916:32:12",
																		"nodeType": "YulLiteral",
																		"src": "28916:32:12",
																		"type": "",
																		"value": "Cannot cancel an accepted loan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28893:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "28893:6:12"
																},
																"nativeSrc": "28893:56:12",
																"nodeType": "YulFunctionCall",
																"src": "28893:56:12"
															},
															"nativeSrc": "28893:56:12",
															"nodeType": "YulExpressionStatement",
															"src": "28893:56:12"
														}
													]
												},
												"name": "store_literal_in_memory_83847a01f353647392b24bf89240026d74573a39de2b84d6265cef1478825a96",
												"nativeSrc": "28776:180:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "28874:6:12",
														"nodeType": "YulTypedName",
														"src": "28874:6:12",
														"type": ""
													}
												],
												"src": "28776:180:12"
											},
											{
												"body": {
													"nativeSrc": "29108:220:12",
													"nodeType": "YulBlock",
													"src": "29108:220:12",
													"statements": [
														{
															"nativeSrc": "29118:74:12",
															"nodeType": "YulAssignment",
															"src": "29118:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29184:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "29184:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29189:2:12",
																		"nodeType": "YulLiteral",
																		"src": "29189:2:12",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "29125:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "29125:58:12"
																},
																"nativeSrc": "29125:67:12",
																"nodeType": "YulFunctionCall",
																"src": "29125:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "29118:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "29118:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29290:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "29290:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_83847a01f353647392b24bf89240026d74573a39de2b84d6265cef1478825a96",
																	"nativeSrc": "29201:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "29201:88:12"
																},
																"nativeSrc": "29201:93:12",
																"nodeType": "YulFunctionCall",
																"src": "29201:93:12"
															},
															"nativeSrc": "29201:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "29201:93:12"
														},
														{
															"nativeSrc": "29303:19:12",
															"nodeType": "YulAssignment",
															"src": "29303:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29314:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "29314:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29319:2:12",
																		"nodeType": "YulLiteral",
																		"src": "29319:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29310:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "29310:3:12"
																},
																"nativeSrc": "29310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "29310:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "29303:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "29303:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_83847a01f353647392b24bf89240026d74573a39de2b84d6265cef1478825a96_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "28962:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "29096:3:12",
														"nodeType": "YulTypedName",
														"src": "29096:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "29104:3:12",
														"nodeType": "YulTypedName",
														"src": "29104:3:12",
														"type": ""
													}
												],
												"src": "28962:366:12"
											},
											{
												"body": {
													"nativeSrc": "29505:248:12",
													"nodeType": "YulBlock",
													"src": "29505:248:12",
													"statements": [
														{
															"nativeSrc": "29515:26:12",
															"nodeType": "YulAssignment",
															"src": "29515:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "29527:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "29527:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29538:2:12",
																		"nodeType": "YulLiteral",
																		"src": "29538:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29523:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "29523:3:12"
																},
																"nativeSrc": "29523:18:12",
																"nodeType": "YulFunctionCall",
																"src": "29523:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29515:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "29515:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29562:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "29562:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29573:1:12",
																				"nodeType": "YulLiteral",
																				"src": "29573:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29558:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "29558:3:12"
																		},
																		"nativeSrc": "29558:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "29558:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "29581:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "29581:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "29587:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "29587:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "29577:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "29577:3:12"
																		},
																		"nativeSrc": "29577:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "29577:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29551:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "29551:6:12"
																},
																"nativeSrc": "29551:47:12",
																"nodeType": "YulFunctionCall",
																"src": "29551:47:12"
															},
															"nativeSrc": "29551:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "29551:47:12"
														},
														{
															"nativeSrc": "29607:139:12",
															"nodeType": "YulAssignment",
															"src": "29607:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "29741:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "29741:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_83847a01f353647392b24bf89240026d74573a39de2b84d6265cef1478825a96_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "29615:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "29615:124:12"
																},
																"nativeSrc": "29615:131:12",
																"nodeType": "YulFunctionCall",
																"src": "29615:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29607:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "29607:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_83847a01f353647392b24bf89240026d74573a39de2b84d6265cef1478825a96__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "29334:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "29485:9:12",
														"nodeType": "YulTypedName",
														"src": "29485:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "29500:4:12",
														"nodeType": "YulTypedName",
														"src": "29500:4:12",
														"type": ""
													}
												],
												"src": "29334:419:12"
											},
											{
												"body": {
													"nativeSrc": "29913:288:12",
													"nodeType": "YulBlock",
													"src": "29913:288:12",
													"statements": [
														{
															"nativeSrc": "29923:26:12",
															"nodeType": "YulAssignment",
															"src": "29923:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "29935:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "29935:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29946:2:12",
																		"nodeType": "YulLiteral",
																		"src": "29946:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29931:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "29931:3:12"
																},
																"nativeSrc": "29931:18:12",
																"nodeType": "YulFunctionCall",
																"src": "29931:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29923:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "29923:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "30003:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "30003:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30016:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "30016:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30027:1:12",
																				"nodeType": "YulLiteral",
																				"src": "30027:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30012:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "30012:3:12"
																		},
																		"nativeSrc": "30012:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "30012:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "29959:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "29959:43:12"
																},
																"nativeSrc": "29959:71:12",
																"nodeType": "YulFunctionCall",
																"src": "29959:71:12"
															},
															"nativeSrc": "29959:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "29959:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "30084:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "30084:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30097:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "30097:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30108:2:12",
																				"nodeType": "YulLiteral",
																				"src": "30108:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30093:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "30093:3:12"
																		},
																		"nativeSrc": "30093:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "30093:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "30040:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "30040:43:12"
																},
																"nativeSrc": "30040:72:12",
																"nodeType": "YulFunctionCall",
																"src": "30040:72:12"
															},
															"nativeSrc": "30040:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "30040:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "30166:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "30166:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30179:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "30179:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30190:2:12",
																				"nodeType": "YulLiteral",
																				"src": "30190:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30175:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "30175:3:12"
																		},
																		"nativeSrc": "30175:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "30175:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "30122:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "30122:43:12"
																},
																"nativeSrc": "30122:72:12",
																"nodeType": "YulFunctionCall",
																"src": "30122:72:12"
															},
															"nativeSrc": "30122:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "30122:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "29759:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "29869:9:12",
														"nodeType": "YulTypedName",
														"src": "29869:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "29881:6:12",
														"nodeType": "YulTypedName",
														"src": "29881:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "29889:6:12",
														"nodeType": "YulTypedName",
														"src": "29889:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "29897:6:12",
														"nodeType": "YulTypedName",
														"src": "29897:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "29908:4:12",
														"nodeType": "YulTypedName",
														"src": "29908:4:12",
														"type": ""
													}
												],
												"src": "29759:442:12"
											},
											{
												"body": {
													"nativeSrc": "30361:288:12",
													"nodeType": "YulBlock",
													"src": "30361:288:12",
													"statements": [
														{
															"nativeSrc": "30371:26:12",
															"nodeType": "YulAssignment",
															"src": "30371:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "30383:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "30383:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30394:2:12",
																		"nodeType": "YulLiteral",
																		"src": "30394:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30379:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "30379:3:12"
																},
																"nativeSrc": "30379:18:12",
																"nodeType": "YulFunctionCall",
																"src": "30379:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30371:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "30371:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "30451:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "30451:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30464:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "30464:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30475:1:12",
																				"nodeType": "YulLiteral",
																				"src": "30475:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30460:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "30460:3:12"
																		},
																		"nativeSrc": "30460:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "30460:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "30407:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "30407:43:12"
																},
																"nativeSrc": "30407:71:12",
																"nodeType": "YulFunctionCall",
																"src": "30407:71:12"
															},
															"nativeSrc": "30407:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "30407:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "30532:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "30532:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30545:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "30545:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30556:2:12",
																				"nodeType": "YulLiteral",
																				"src": "30556:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30541:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "30541:3:12"
																		},
																		"nativeSrc": "30541:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "30541:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "30488:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "30488:43:12"
																},
																"nativeSrc": "30488:72:12",
																"nodeType": "YulFunctionCall",
																"src": "30488:72:12"
															},
															"nativeSrc": "30488:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "30488:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "30614:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "30614:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30627:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "30627:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30638:2:12",
																				"nodeType": "YulLiteral",
																				"src": "30638:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30623:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "30623:3:12"
																		},
																		"nativeSrc": "30623:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "30623:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "30570:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "30570:43:12"
																},
																"nativeSrc": "30570:72:12",
																"nodeType": "YulFunctionCall",
																"src": "30570:72:12"
															},
															"nativeSrc": "30570:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "30570:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "30207:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "30317:9:12",
														"nodeType": "YulTypedName",
														"src": "30317:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "30329:6:12",
														"nodeType": "YulTypedName",
														"src": "30329:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "30337:6:12",
														"nodeType": "YulTypedName",
														"src": "30337:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "30345:6:12",
														"nodeType": "YulTypedName",
														"src": "30345:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "30356:4:12",
														"nodeType": "YulTypedName",
														"src": "30356:4:12",
														"type": ""
													}
												],
												"src": "30207:442:12"
											},
											{
												"body": {
													"nativeSrc": "30781:206:12",
													"nodeType": "YulBlock",
													"src": "30781:206:12",
													"statements": [
														{
															"nativeSrc": "30791:26:12",
															"nodeType": "YulAssignment",
															"src": "30791:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "30803:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "30803:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30814:2:12",
																		"nodeType": "YulLiteral",
																		"src": "30814:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30799:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "30799:3:12"
																},
																"nativeSrc": "30799:18:12",
																"nodeType": "YulFunctionCall",
																"src": "30799:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30791:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "30791:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "30871:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "30871:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30884:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "30884:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30895:1:12",
																				"nodeType": "YulLiteral",
																				"src": "30895:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30880:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "30880:3:12"
																		},
																		"nativeSrc": "30880:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "30880:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "30827:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "30827:43:12"
																},
																"nativeSrc": "30827:71:12",
																"nodeType": "YulFunctionCall",
																"src": "30827:71:12"
															},
															"nativeSrc": "30827:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "30827:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "30952:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "30952:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30965:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "30965:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30976:2:12",
																				"nodeType": "YulLiteral",
																				"src": "30976:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30961:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "30961:3:12"
																		},
																		"nativeSrc": "30961:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "30961:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "30908:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "30908:43:12"
																},
																"nativeSrc": "30908:72:12",
																"nodeType": "YulFunctionCall",
																"src": "30908:72:12"
															},
															"nativeSrc": "30908:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "30908:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "30655:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "30745:9:12",
														"nodeType": "YulTypedName",
														"src": "30745:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "30757:6:12",
														"nodeType": "YulTypedName",
														"src": "30757:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "30765:6:12",
														"nodeType": "YulTypedName",
														"src": "30765:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "30776:4:12",
														"nodeType": "YulTypedName",
														"src": "30776:4:12",
														"type": ""
													}
												],
												"src": "30655:332:12"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool_t_bool_t_uint256_t_bool_t_string_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool_t_bool_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed(headStart , value11, value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 384)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value8,  add(headStart, 256))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value9,  add(headStart, 288))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value10,  add(headStart, 320))\n\n        mstore(add(headStart, 352), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value11,  tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_012f6a3f83e4cc86f0cf1682e12d7740f32dd3e177b248400863dc8750bb6121(memPtr) {\n\n        mstore(add(memPtr, 0), \"Borrower must be KYC verified\")\n\n    }\n\n    function abi_encode_t_stringliteral_012f6a3f83e4cc86f0cf1682e12d7740f32dd3e177b248400863dc8750bb6121_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_012f6a3f83e4cc86f0cf1682e12d7740f32dd3e177b248400863dc8750bb6121(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_012f6a3f83e4cc86f0cf1682e12d7740f32dd3e177b248400863dc8750bb6121__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_012f6a3f83e4cc86f0cf1682e12d7740f32dd3e177b248400863dc8750bb6121_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient funds\")\n\n    }\n\n    function abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e8ace920544dc1be56db4376a060214d1b3ad04505f6a4258960ceec2ae8d913(memPtr) {\n\n        mstore(add(memPtr, 0), \"Allowance is not enough\")\n\n    }\n\n    function abi_encode_t_stringliteral_e8ace920544dc1be56db4376a060214d1b3ad04505f6a4258960ceec2ae8d913_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_e8ace920544dc1be56db4376a060214d1b3ad04505f6a4258960ceec2ae8d913(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e8ace920544dc1be56db4376a060214d1b3ad04505f6a4258960ceec2ae8d913__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e8ace920544dc1be56db4376a060214d1b3ad04505f6a4258960ceec2ae8d913_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        mstore(add(headStart, 224), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value7,  tail)\n\n    }\n\n    function store_literal_in_memory_e192d299a97f125a942ab2d9468382b9cac83264907053cf28511765133e0251(memPtr) {\n\n        mstore(add(memPtr, 0), \"Loan is still within repayment p\")\n\n        mstore(add(memPtr, 32), \"eriod\")\n\n    }\n\n    function abi_encode_t_stringliteral_e192d299a97f125a942ab2d9468382b9cac83264907053cf28511765133e0251_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_e192d299a97f125a942ab2d9468382b9cac83264907053cf28511765133e0251(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e192d299a97f125a942ab2d9468382b9cac83264907053cf28511765133e0251__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e192d299a97f125a942ab2d9468382b9cac83264907053cf28511765133e0251_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a088ab1f5c37ff63830f8ba110e314fea69e930646a4a57be513c9eb44c36474(memPtr) {\n\n        mstore(add(memPtr, 0), \"Loan already repaid\")\n\n    }\n\n    function abi_encode_t_stringliteral_a088ab1f5c37ff63830f8ba110e314fea69e930646a4a57be513c9eb44c36474_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_a088ab1f5c37ff63830f8ba110e314fea69e930646a4a57be513c9eb44c36474(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a088ab1f5c37ff63830f8ba110e314fea69e930646a4a57be513c9eb44c36474__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a088ab1f5c37ff63830f8ba110e314fea69e930646a4a57be513c9eb44c36474_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_ea61514b076355fd74cc868f0a530b4816a48e9424c44b3218f6eaf917d3d18e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only borrower can repay\")\n\n    }\n\n    function abi_encode_t_stringliteral_ea61514b076355fd74cc868f0a530b4816a48e9424c44b3218f6eaf917d3d18e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_ea61514b076355fd74cc868f0a530b4816a48e9424c44b3218f6eaf917d3d18e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ea61514b076355fd74cc868f0a530b4816a48e9424c44b3218f6eaf917d3d18e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ea61514b076355fd74cc868f0a530b4816a48e9424c44b3218f6eaf917d3d18e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ee10fd3130e11f66c5668ce4a72b75e62fb1c6c3bf42e0daa0866d6aebb323c9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Loan must be accepted first\")\n\n    }\n\n    function abi_encode_t_stringliteral_ee10fd3130e11f66c5668ce4a72b75e62fb1c6c3bf42e0daa0866d6aebb323c9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_ee10fd3130e11f66c5668ce4a72b75e62fb1c6c3bf42e0daa0866d6aebb323c9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ee10fd3130e11f66c5668ce4a72b75e62fb1c6c3bf42e0daa0866d6aebb323c9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ee10fd3130e11f66c5668ce4a72b75e62fb1c6c3bf42e0daa0866d6aebb323c9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4d80d3094575a659c46b7e44006980a5dd7955bb1e180e936b9bc133c4f8218f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only borrower can accept\")\n\n    }\n\n    function abi_encode_t_stringliteral_4d80d3094575a659c46b7e44006980a5dd7955bb1e180e936b9bc133c4f8218f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_4d80d3094575a659c46b7e44006980a5dd7955bb1e180e936b9bc133c4f8218f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4d80d3094575a659c46b7e44006980a5dd7955bb1e180e936b9bc133c4f8218f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4d80d3094575a659c46b7e44006980a5dd7955bb1e180e936b9bc133c4f8218f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3fff4684e62df955459aa4d38296cd5485059b1bcadaa915955ad9bd719f3844(memPtr) {\n\n        mstore(add(memPtr, 0), \"Loan already accepted\")\n\n    }\n\n    function abi_encode_t_stringliteral_3fff4684e62df955459aa4d38296cd5485059b1bcadaa915955ad9bd719f3844_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_3fff4684e62df955459aa4d38296cd5485059b1bcadaa915955ad9bd719f3844(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3fff4684e62df955459aa4d38296cd5485059b1bcadaa915955ad9bd719f3844__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3fff4684e62df955459aa4d38296cd5485059b1bcadaa915955ad9bd719f3844_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_105e73626a7e497364218351d5a4f17588827e87508fa24d8078e82a25737496(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only lender can cancel\")\n\n    }\n\n    function abi_encode_t_stringliteral_105e73626a7e497364218351d5a4f17588827e87508fa24d8078e82a25737496_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_105e73626a7e497364218351d5a4f17588827e87508fa24d8078e82a25737496(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_105e73626a7e497364218351d5a4f17588827e87508fa24d8078e82a25737496__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_105e73626a7e497364218351d5a4f17588827e87508fa24d8078e82a25737496_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6311301fb3b87173647430fa47d57a08f88ecb228c291c7a22b64d3d67bfd616(memPtr) {\n\n        mstore(add(memPtr, 0), \"Loan already cancelled\")\n\n    }\n\n    function abi_encode_t_stringliteral_6311301fb3b87173647430fa47d57a08f88ecb228c291c7a22b64d3d67bfd616_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_6311301fb3b87173647430fa47d57a08f88ecb228c291c7a22b64d3d67bfd616(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6311301fb3b87173647430fa47d57a08f88ecb228c291c7a22b64d3d67bfd616__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6311301fb3b87173647430fa47d57a08f88ecb228c291c7a22b64d3d67bfd616_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_83847a01f353647392b24bf89240026d74573a39de2b84d6265cef1478825a96(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot cancel an accepted loan\")\n\n    }\n\n    function abi_encode_t_stringliteral_83847a01f353647392b24bf89240026d74573a39de2b84d6265cef1478825a96_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_83847a01f353647392b24bf89240026d74573a39de2b84d6265cef1478825a96(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_83847a01f353647392b24bf89240026d74573a39de2b84d6265cef1478825a96__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_83847a01f353647392b24bf89240026d74573a39de2b84d6265cef1478825a96_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610156575f3560e01c80638da5cb5b116100c1578063adfbe22f1161007a578063adfbe22f146103da578063bdbfa3de146103f6578063c2fdbdad14610412578063dd62ed3e14610442578063e1ec3c6814610472578063f2fde38b146104ad57610156565b80638da5cb5b146102f257806395d89b4114610310578063a5410a661461032e578063a6f5b3b31461035e578063a9059cbb1461038e578063ab7b1c89146103be57610156565b806338d160111161011357806338d160111461024457806370a0823114610260578063715018a61461029057806375794a3c1461029a578063759135a1146102b857806387c51459146102d457610156565b806306fdde031461015a578063095ea7b31461017857806318160ddd146101a85780631a2ff598146101c657806323b872dd146101f6578063313ce56714610226575b5f80fd5b6101626104c9565b60405161016f9190611e8f565b60405180910390f35b610192600480360381019061018d9190611f4d565b610559565b60405161019f9190611fa5565b60405180910390f35b6101b061057b565b6040516101bd9190611fcd565b60405180910390f35b6101e060048036038101906101db9190612112565b610584565b6040516101ed9190611fcd565b60405180910390f35b610210600480360381019061020b9190612192565b61095a565b60405161021d9190611fa5565b60405180910390f35b61022e610988565b60405161023b91906121fd565b60405180910390f35b61025e60048036038101906102599190612216565b61098c565b005b61027a60048036038101906102759190612216565b610a2f565b6040516102879190611fcd565b60405180910390f35b610298610a74565b005b6102a2610a87565b6040516102af9190611fcd565b60405180910390f35b6102d260048036038101906102cd9190612241565b610a8d565b005b6102dc610b90565b6040516102e99190611fcd565b60405180910390f35b6102fa610b96565b604051610307919061227b565b60405180910390f35b610318610bbe565b6040516103259190611e8f565b60405180910390f35b61034860048036038101906103439190612216565b610c4e565b6040516103559190611fa5565b60405180910390f35b61037860048036038101906103739190612241565b610c6b565b6040516103859190611fcd565b60405180910390f35b6103a860048036038101906103a39190611f4d565b610cad565b6040516103b59190611fa5565b60405180910390f35b6103d860048036038101906103d39190612241565b610ccf565b005b6103f460048036038101906103ef9190612241565b610ebf565b005b610410600480360381019061040b9190612241565b61103d565b005b61042c60048036038101906104279190612241565b6111ec565b6040516104399190611fa5565b60405180910390f35b61045c60048036038101906104579190612294565b611258565b6040516104699190611fcd565b60405180910390f35b61048c60048036038101906104879190612241565b6112da565b6040516104a49c9b9a999897969594939291906122d2565b60405180910390f35b6104c760048036038101906104c29190612216565b61142c565b005b6060600380546104d8906123be565b80601f0160208091040260200160405190810160405280929190818152602001828054610504906123be565b801561054f5780601f106105265761010080835404028352916020019161054f565b820191905f5260205f20905b81548152906001019060200180831161053257829003601f168201915b5050505050905090565b5f806105636114b0565b90506105708185856114b7565b600191505092915050565b5f600254905090565b5f60085f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1661060e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060590612438565b60405180910390fd5b8361061833610a2f565b1015610659576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610650906124a0565b60405180910390fd5b836106643330611258565b10156106a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069c90612508565b60405180910390fd5b5f601e90506106b53330876114c9565b5f60065f8154809291906106c890612553565b9190505590505f60095f8154809291906106e190612553565b9190505590506040518061018001604052808973ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff168152602001888152602001878152602001848152602001620151808561074c919061259a565b4261075791906125db565b81526020015f151581526020015f151581526020015f151581526020018381526020015f151581526020018681525060075f8381526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015f6101000a81548160ff02191690831515021790555060e08201518160060160016101000a81548160ff0219169083151502179055506101008201518160060160026101000a81548160ff0219169083151502179055506101208201518160070155610140820151816008015f6101000a81548160ff0219169083151502179055506101608201518160090190816108ea91906127ab565b509050507f065f30d94790e6e129604916065477a26eebb0e2a87f79e6b05b21a0f662d9478189338a8a87620151808a610924919061259a565b4261092f91906125db565b8c60405161094498979695949392919061287a565b60405180910390a1819350505050949350505050565b5f806109646114b0565b90506109718582856114fb565b61097c85858561158e565b60019150509392505050565b5f90565b61099461167e565b600160085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f65c84ee842eafc291d1272a6e3d10f8c454c4288e63f5db3f7be2b3012f321a960405160405180910390a250565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610a7c61167e565b610a855f611705565b565b60065481565b5f60075f8381526020019081526020015f20905080600501544211610ae7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ade9061296d565b60405180910390fd5b806006015f9054906101000a900460ff1615610b38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2f906129d5565b60405180910390fd5b60018160060160026101000a81548160ff0219169083151502179055507f0ab9f35a07aca8965fede1a225ff17bd92f8d63aa4eb9a61ace1e99495e2980d82604051610b849190611fcd565b60405180910390a15050565b60095481565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610bcd906123be565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf9906123be565b8015610c445780601f10610c1b57610100808354040283529160200191610c44565b820191905f5260205f20905b815481529060010190602001808311610c2757829003601f168201915b5050505050905090565b6008602052805f5260405f205f915054906101000a900460ff1681565b5f8060075f8481526020019081526020015f20905080600501544210610c94575f915050610ca8565b428160050154610ca491906129f3565b9150505b919050565b5f80610cb76114b0565b9050610cc481858561158e565b600191505092915050565b5f60075f8381526020019081526020015f209050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6a90612a70565b60405180910390fd5b8060060160019054906101000a900460ff16610dc4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dbb90612ad8565b60405180910390fd5b806006015f9054906101000a900460ff1615610e15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0c906129d5565b60405180910390fd5b5f81600301548260020154610e2a91906125db565b9050610e5a33836001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836114c9565b6001826006015f6101000a81548160ff021916908315150217905550610e8382600701546117c8565b7f9a7851747cd7ffb3fe0a32caf3da48b31f27cebe131267051640f8b72fc4718683604051610eb29190611fcd565b60405180910390a1505050565b5f60075f8381526020019081526020015f209050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5a90612b40565b60405180910390fd5b8060060160019054906101000a900460ff1615610fb5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fac90612ba8565b60405180910390fd5b60018160060160016101000a81548160ff021916908315150217905550611002815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826002015461186c565b7f8313f00f3154c2e8509a2ee261c618804a495403d3ac94fe5fb833af9d13cb27826040516110319190611fcd565b60405180910390a15050565b5f60075f8381526020019081526020015f209050806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d990612c10565b60405180910390fd5b8060060160029054906101000a900460ff1615611134576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112b90612c78565b60405180910390fd5b8060060160019054906101000a900460ff1615611186576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117d90612ce0565b60405180910390fd5b61119433826002015461186c565b60018160060160026101000a81548160ff0219169083151502179055507fdb3578c2b080f19424234c3a83e34455b4b06e90bf24b62f4e13a9ed82fbf0ed826040516111e09190611fcd565b60405180910390a15050565b5f80600190505b60095481101561124e578260075f8381526020019081526020015f2060070154036112415760075f8281526020019081526020015f206008015f9054906101000a900460ff16915050611253565b80806001019150506111f3565b505f90505b919050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6007602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002015490806003015490806004015490806005015490806006015f9054906101000a900460ff16908060060160019054906101000a900460ff16908060060160029054906101000a900460ff1690806007015490806008015f9054906101000a900460ff16908060090180546113ab906123be565b80601f01602080910402602001604051908101604052809291908181526020018280546113d7906123be565b80156114225780601f106113f957610100808354040283529160200191611422565b820191905f5260205f20905b81548152906001019060200180831161140557829003601f168201915b505050505090508c565b61143461167e565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036114a4575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161149b919061227b565b60405180910390fd5b6114ad81611705565b50565b5f33905090565b6114c4838383600161189b565b505050565b6114f68383833073ffffffffffffffffffffffffffffffffffffffff16611a6a909392919063ffffffff16565b505050565b5f6115068484611258565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156115885781811015611579578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161157093929190612cfe565b60405180910390fd5b61158784848484035f61189b565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115fe575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016115f5919061227b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361166e575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611665919061227b565b60405180910390fd5b611679838383611aec565b505050565b6116866114b0565b73ffffffffffffffffffffffffffffffffffffffff166116a4610b96565b73ffffffffffffffffffffffffffffffffffffffff1614611703576116c76114b0565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016116fa919061227b565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f600190505b600954811015611868578160075f8381526020019081526020015f20600701540361185b57600160075f8381526020019081526020015f206008015f6101000a81548160ff0219169083151502179055507f3c176691ca154a2f6fe978a2a633a33ee77dbe2902e67a75400720845a4b2ce18260405161184e9190611fcd565b60405180910390a1611868565b80806001019150506117ce565b5050565b61189782823073ffffffffffffffffffffffffffffffffffffffff16611d059092919063ffffffff16565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361190b575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611902919061227b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361197b575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611972919061227b565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611a64578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611a5b9190611fcd565b60405180910390a35b50505050565b611ae6848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401611a9f93929190612d33565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611d84565b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611b3c578060025f828254611b3091906125db565b92505081905550611c0a565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611bc5578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611bbc93929190612cfe565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611c51578060025f8282540392505081905550611c9b565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611cf89190611fcd565b60405180910390a3505050565b611d7f838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611d38929190612d68565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611d84565b505050565b5f8060205f8451602086015f885af180611da3576040513d5f823e3d81fd5b3d92505f519150505f8214611dbc576001811415611dd7565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15611e1957836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401611e10919061227b565b60405180910390fd5b50505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611e6182611e1f565b611e6b8185611e29565b9350611e7b818560208601611e39565b611e8481611e47565b840191505092915050565b5f6020820190508181035f830152611ea78184611e57565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611ee982611ec0565b9050919050565b611ef981611edf565b8114611f03575f80fd5b50565b5f81359050611f1481611ef0565b92915050565b5f819050919050565b611f2c81611f1a565b8114611f36575f80fd5b50565b5f81359050611f4781611f23565b92915050565b5f8060408385031215611f6357611f62611eb8565b5b5f611f7085828601611f06565b9250506020611f8185828601611f39565b9150509250929050565b5f8115159050919050565b611f9f81611f8b565b82525050565b5f602082019050611fb85f830184611f96565b92915050565b611fc781611f1a565b82525050565b5f602082019050611fe05f830184611fbe565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61202482611e47565b810181811067ffffffffffffffff8211171561204357612042611fee565b5b80604052505050565b5f612055611eaf565b9050612061828261201b565b919050565b5f67ffffffffffffffff8211156120805761207f611fee565b5b61208982611e47565b9050602081019050919050565b828183375f83830152505050565b5f6120b66120b184612066565b61204c565b9050828152602081018484840111156120d2576120d1611fea565b5b6120dd848285612096565b509392505050565b5f82601f8301126120f9576120f8611fe6565b5b81356121098482602086016120a4565b91505092915050565b5f805f806080858703121561212a57612129611eb8565b5b5f61213787828801611f06565b945050602061214887828801611f39565b935050604061215987828801611f39565b925050606085013567ffffffffffffffff81111561217a57612179611ebc565b5b612186878288016120e5565b91505092959194509250565b5f805f606084860312156121a9576121a8611eb8565b5b5f6121b686828701611f06565b93505060206121c786828701611f06565b92505060406121d886828701611f39565b9150509250925092565b5f60ff82169050919050565b6121f7816121e2565b82525050565b5f6020820190506122105f8301846121ee565b92915050565b5f6020828403121561222b5761222a611eb8565b5b5f61223884828501611f06565b91505092915050565b5f6020828403121561225657612255611eb8565b5b5f61226384828501611f39565b91505092915050565b61227581611edf565b82525050565b5f60208201905061228e5f83018461226c565b92915050565b5f80604083850312156122aa576122a9611eb8565b5b5f6122b785828601611f06565b92505060206122c885828601611f06565b9150509250929050565b5f610180820190506122e65f83018f61226c565b6122f3602083018e61226c565b612300604083018d611fbe565b61230d606083018c611fbe565b61231a608083018b611fbe565b61232760a083018a611fbe565b61233460c0830189611f96565b61234160e0830188611f96565b61234f610100830187611f96565b61235d610120830186611fbe565b61236b610140830185611f96565b81810361016083015261237e8184611e57565b90509d9c50505050505050505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806123d557607f821691505b6020821081036123e8576123e7612391565b5b50919050565b7f426f72726f776572206d757374206265204b59432076657269666965640000005f82015250565b5f612422601d83611e29565b915061242d826123ee565b602082019050919050565b5f6020820190508181035f83015261244f81612416565b9050919050565b7f496e73756666696369656e742066756e647300000000000000000000000000005f82015250565b5f61248a601283611e29565b915061249582612456565b602082019050919050565b5f6020820190508181035f8301526124b78161247e565b9050919050565b7f416c6c6f77616e6365206973206e6f7420656e6f7567680000000000000000005f82015250565b5f6124f2601783611e29565b91506124fd826124be565b602082019050919050565b5f6020820190508181035f83015261251f816124e6565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61255d82611f1a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361258f5761258e612526565b5b600182019050919050565b5f6125a482611f1a565b91506125af83611f1a565b92508282026125bd81611f1a565b915082820484148315176125d4576125d3612526565b5b5092915050565b5f6125e582611f1a565b91506125f083611f1a565b925082820190508082111561260857612607612526565b5b92915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261266a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261262f565b612674868361262f565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6126af6126aa6126a584611f1a565b61268c565b611f1a565b9050919050565b5f819050919050565b6126c883612695565b6126dc6126d4826126b6565b84845461263b565b825550505050565b5f90565b6126f06126e4565b6126fb8184846126bf565b505050565b5b8181101561271e576127135f826126e8565b600181019050612701565b5050565b601f821115612763576127348161260e565b61273d84612620565b8101602085101561274c578190505b61276061275885612620565b830182612700565b50505b505050565b5f82821c905092915050565b5f6127835f1984600802612768565b1980831691505092915050565b5f61279b8383612774565b9150826002028217905092915050565b6127b482611e1f565b67ffffffffffffffff8111156127cd576127cc611fee565b5b6127d782546123be565b6127e2828285612722565b5f60209050601f831160018114612813575f8415612801578287015190505b61280b8582612790565b865550612872565b601f1984166128218661260e565b5f5b8281101561284857848901518255600182019150602085019450602081019050612823565b868310156128655784890151612861601f891682612774565b8355505b6001600288020188555050505b505050505050565b5f6101008201905061288e5f83018b611fbe565b61289b602083018a61226c565b6128a8604083018961226c565b6128b56060830188611fbe565b6128c26080830187611fbe565b6128cf60a0830186611fbe565b6128dc60c0830185611fbe565b81810360e08301526128ee8184611e57565b90509998505050505050505050565b7f4c6f616e206973207374696c6c2077697468696e2072657061796d656e7420705f8201527f6572696f64000000000000000000000000000000000000000000000000000000602082015250565b5f612957602583611e29565b9150612962826128fd565b604082019050919050565b5f6020820190508181035f8301526129848161294b565b9050919050565b7f4c6f616e20616c726561647920726570616964000000000000000000000000005f82015250565b5f6129bf601383611e29565b91506129ca8261298b565b602082019050919050565b5f6020820190508181035f8301526129ec816129b3565b9050919050565b5f6129fd82611f1a565b9150612a0883611f1a565b9250828203905081811115612a2057612a1f612526565b5b92915050565b7f4f6e6c7920626f72726f7765722063616e2072657061790000000000000000005f82015250565b5f612a5a601783611e29565b9150612a6582612a26565b602082019050919050565b5f6020820190508181035f830152612a8781612a4e565b9050919050565b7f4c6f616e206d75737420626520616363657074656420666972737400000000005f82015250565b5f612ac2601b83611e29565b9150612acd82612a8e565b602082019050919050565b5f6020820190508181035f830152612aef81612ab6565b9050919050565b7f4f6e6c7920626f72726f7765722063616e2061636365707400000000000000005f82015250565b5f612b2a601883611e29565b9150612b3582612af6565b602082019050919050565b5f6020820190508181035f830152612b5781612b1e565b9050919050565b7f4c6f616e20616c726561647920616363657074656400000000000000000000005f82015250565b5f612b92601583611e29565b9150612b9d82612b5e565b602082019050919050565b5f6020820190508181035f830152612bbf81612b86565b9050919050565b7f4f6e6c79206c656e6465722063616e2063616e63656c000000000000000000005f82015250565b5f612bfa601683611e29565b9150612c0582612bc6565b602082019050919050565b5f6020820190508181035f830152612c2781612bee565b9050919050565b7f4c6f616e20616c72656164792063616e63656c6c6564000000000000000000005f82015250565b5f612c62601683611e29565b9150612c6d82612c2e565b602082019050919050565b5f6020820190508181035f830152612c8f81612c56565b9050919050565b7f43616e6e6f742063616e63656c20616e206163636570746564206c6f616e00005f82015250565b5f612cca601e83611e29565b9150612cd582612c96565b602082019050919050565b5f6020820190508181035f830152612cf781612cbe565b9050919050565b5f606082019050612d115f83018661226c565b612d1e6020830185611fbe565b612d2b6040830184611fbe565b949350505050565b5f606082019050612d465f83018661226c565b612d53602083018561226c565b612d606040830184611fbe565b949350505050565b5f604082019050612d7b5f83018561226c565b612d886020830184611fbe565b939250505056fea2646970667358221220e2f6cfef6bd258567900ab53aa842db56cefe0976b991d7f62bb424f4e82fedd64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x156 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xADFBE22F GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xADFBE22F EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0xBDBFA3DE EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0xC2FDBDAD EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x442 JUMPI DUP1 PUSH4 0xE1EC3C68 EQ PUSH2 0x472 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4AD JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0xA5410A66 EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0xA6F5B3B3 EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0xAB7B1C89 EQ PUSH2 0x3BE JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x38D16011 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x38D16011 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x75794A3C EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x759135A1 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x87C51459 EQ PUSH2 0x2D4 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x1A2FF598 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x226 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x162 PUSH2 0x4C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x1E8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1F4D JUMP JUMPDEST PUSH2 0x559 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1FA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x2112 JUMP JUMPDEST PUSH2 0x584 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x2192 JUMP JUMPDEST PUSH2 0x95A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x1FA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH2 0x988 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x21FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x2216 JUMP JUMPDEST PUSH2 0x98C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x2216 JUMP JUMPDEST PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x298 PUSH2 0xA74 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A2 PUSH2 0xA87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH2 0xA8D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DC PUSH2 0xB90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FA PUSH2 0xB96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x227B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x318 PUSH2 0xBBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x1E8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x348 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x2216 JUMP JUMPDEST PUSH2 0xC4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x1FA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x378 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x373 SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH2 0xC6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x1F4D JUMP JUMPDEST PUSH2 0xCAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x1FA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH2 0xCCF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH2 0xEBF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x410 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH2 0x103D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x42C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x427 SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH2 0x11EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x439 SWAP2 SWAP1 PUSH2 0x1FA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x457 SWAP2 SWAP1 PUSH2 0x2294 JUMP JUMPDEST PUSH2 0x1258 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x469 SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x487 SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH2 0x12DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A4 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C2 SWAP2 SWAP1 PUSH2 0x2216 JUMP JUMPDEST PUSH2 0x142C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4D8 SWAP1 PUSH2 0x23BE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x504 SWAP1 PUSH2 0x23BE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x54F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x526 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x54F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x532 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x563 PUSH2 0x14B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x570 DUP2 DUP6 DUP6 PUSH2 0x14B7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x60E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x605 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH2 0x618 CALLER PUSH2 0xA2F JUMP JUMPDEST LT ISZERO PUSH2 0x659 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x650 SWAP1 PUSH2 0x24A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH2 0x664 CALLER ADDRESS PUSH2 0x1258 JUMP JUMPDEST LT ISZERO PUSH2 0x6A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69C SWAP1 PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1E SWAP1 POP PUSH2 0x6B5 CALLER ADDRESS DUP8 PUSH2 0x14C9 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x6C8 SWAP1 PUSH2 0x2553 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH0 PUSH1 0x9 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x6E1 SWAP1 PUSH2 0x2553 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x15180 DUP6 PUSH2 0x74C SWAP2 SWAP1 PUSH2 0x259A JUMP JUMPDEST TIMESTAMP PUSH2 0x757 SWAP2 SWAP1 PUSH2 0x25DB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE POP PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x160 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD SWAP1 DUP2 PUSH2 0x8EA SWAP2 SWAP1 PUSH2 0x27AB JUMP JUMPDEST POP SWAP1 POP POP PUSH32 0x65F30D94790E6E129604916065477A26EEBB0E2A87F79E6B05B21A0F662D947 DUP2 DUP10 CALLER DUP11 DUP11 DUP8 PUSH3 0x15180 DUP11 PUSH2 0x924 SWAP2 SWAP1 PUSH2 0x259A JUMP JUMPDEST TIMESTAMP PUSH2 0x92F SWAP2 SWAP1 PUSH2 0x25DB JUMP JUMPDEST DUP13 PUSH1 0x40 MLOAD PUSH2 0x944 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x287A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP2 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x964 PUSH2 0x14B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x971 DUP6 DUP3 DUP6 PUSH2 0x14FB JUMP JUMPDEST PUSH2 0x97C DUP6 DUP6 DUP6 PUSH2 0x158E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x994 PUSH2 0x167E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x65C84EE842EAFC291D1272A6E3D10F8C454C4288E63F5DB3F7BE2B3012F321A9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA7C PUSH2 0x167E JUMP JUMPDEST PUSH2 0xA85 PUSH0 PUSH2 0x1705 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x5 ADD SLOAD TIMESTAMP GT PUSH2 0xAE7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADE SWAP1 PUSH2 0x296D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2F SWAP1 PUSH2 0x29D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x6 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xAB9F35A07ACA8965FEDE1A225FF17BD92F8D63AA4EB9A61ACE1E99495E2980D DUP3 PUSH1 0x40 MLOAD PUSH2 0xB84 SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xBCD SWAP1 PUSH2 0x23BE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBF9 SWAP1 PUSH2 0x23BE JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC44 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC1B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC44 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC27 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x5 ADD SLOAD TIMESTAMP LT PUSH2 0xC94 JUMPI PUSH0 SWAP2 POP POP PUSH2 0xCA8 JUMP JUMPDEST TIMESTAMP DUP2 PUSH1 0x5 ADD SLOAD PUSH2 0xCA4 SWAP2 SWAP1 PUSH2 0x29F3 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xCB7 PUSH2 0x14B0 JUMP JUMPDEST SWAP1 POP PUSH2 0xCC4 DUP2 DUP6 DUP6 PUSH2 0x158E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6A SWAP1 PUSH2 0x2A70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xDC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBB SWAP1 PUSH2 0x2AD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE15 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0C SWAP1 PUSH2 0x29D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x3 ADD SLOAD DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0xE2A SWAP2 SWAP1 PUSH2 0x25DB JUMP JUMPDEST SWAP1 POP PUSH2 0xE5A CALLER DUP4 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x6 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xE83 DUP3 PUSH1 0x7 ADD SLOAD PUSH2 0x17C8 JUMP JUMPDEST PUSH32 0x9A7851747CD7FFB3FE0A32CAF3DA48B31F27CEBE131267051640F8B72FC47186 DUP4 PUSH1 0x40 MLOAD PUSH2 0xEB2 SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF5A SWAP1 PUSH2 0x2B40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xFB5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAC SWAP1 PUSH2 0x2BA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x6 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1002 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x186C JUMP JUMPDEST PUSH32 0x8313F00F3154C2E8509A2EE261C618804A495403D3AC94FE5FB833AF9D13CB27 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1031 SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D9 SWAP1 PUSH2 0x2C10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1134 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x112B SWAP1 PUSH2 0x2C78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1186 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x117D SWAP1 PUSH2 0x2CE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1194 CALLER DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x186C JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x6 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xDB3578C2B080F19424234C3A83E34455B4B06E90BF24B62F4E13A9ED82FBF0ED DUP3 PUSH1 0x40 MLOAD PUSH2 0x11E0 SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x124E JUMPI DUP3 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x7 ADD SLOAD SUB PUSH2 0x1241 JUMPI PUSH1 0x7 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x8 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP PUSH2 0x1253 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x11F3 JUMP JUMPDEST POP PUSH0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x6 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x9 ADD DUP1 SLOAD PUSH2 0x13AB SWAP1 PUSH2 0x23BE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x13D7 SWAP1 PUSH2 0x23BE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1422 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1422 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1405 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP13 JUMP JUMPDEST PUSH2 0x1434 PUSH2 0x167E JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14A4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x149B SWAP2 SWAP1 PUSH2 0x227B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14AD DUP2 PUSH2 0x1705 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x14C4 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x189B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x14F6 DUP4 DUP4 DUP4 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A6A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1506 DUP5 DUP5 PUSH2 0x1258 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1588 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1579 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1570 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2CFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1587 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x189B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15FE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15F5 SWAP2 SWAP1 PUSH2 0x227B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x166E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1665 SWAP2 SWAP1 PUSH2 0x227B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1679 DUP4 DUP4 DUP4 PUSH2 0x1AEC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1686 PUSH2 0x14B0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16A4 PUSH2 0xB96 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1703 JUMPI PUSH2 0x16C7 PUSH2 0x14B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16FA SWAP2 SWAP1 PUSH2 0x227B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x1868 JUMPI DUP2 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x7 ADD SLOAD SUB PUSH2 0x185B JUMPI PUSH1 0x1 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x8 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x3C176691CA154A2F6FE978A2A633A33EE77DBE2902E67A75400720845A4B2CE1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x184E SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1868 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x17CE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1897 DUP3 DUP3 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D05 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x190B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1902 SWAP2 SWAP1 PUSH2 0x227B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x197B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1972 SWAP2 SWAP1 PUSH2 0x227B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1A64 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1A5B SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1AE6 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1A9F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1D84 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B3C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1B30 SWAP2 SWAP1 PUSH2 0x25DB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1C0A JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1BC5 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BBC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2CFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C51 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1C9B JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1CF8 SWAP2 SWAP1 PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1D7F DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1D38 SWAP3 SWAP2 SWAP1 PUSH2 0x2D68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1D84 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1DA3 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1DBC JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1DD7 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1E19 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E10 SWAP2 SWAP1 PUSH2 0x227B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E61 DUP3 PUSH2 0x1E1F JUMP JUMPDEST PUSH2 0x1E6B DUP2 DUP6 PUSH2 0x1E29 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E7B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E39 JUMP JUMPDEST PUSH2 0x1E84 DUP2 PUSH2 0x1E47 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EA7 DUP2 DUP5 PUSH2 0x1E57 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EE9 DUP3 PUSH2 0x1EC0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EF9 DUP2 PUSH2 0x1EDF JUMP JUMPDEST DUP2 EQ PUSH2 0x1F03 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F14 DUP2 PUSH2 0x1EF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F2C DUP2 PUSH2 0x1F1A JUMP JUMPDEST DUP2 EQ PUSH2 0x1F36 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F47 DUP2 PUSH2 0x1F23 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F63 JUMPI PUSH2 0x1F62 PUSH2 0x1EB8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F70 DUP6 DUP3 DUP7 ADD PUSH2 0x1F06 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F81 DUP6 DUP3 DUP7 ADD PUSH2 0x1F39 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F9F DUP2 PUSH2 0x1F8B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FB8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FC7 DUP2 PUSH2 0x1F1A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FE0 PUSH0 DUP4 ADD DUP5 PUSH2 0x1FBE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2024 DUP3 PUSH2 0x1E47 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2043 JUMPI PUSH2 0x2042 PUSH2 0x1FEE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2055 PUSH2 0x1EAF JUMP JUMPDEST SWAP1 POP PUSH2 0x2061 DUP3 DUP3 PUSH2 0x201B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2080 JUMPI PUSH2 0x207F PUSH2 0x1FEE JUMP JUMPDEST JUMPDEST PUSH2 0x2089 DUP3 PUSH2 0x1E47 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20B6 PUSH2 0x20B1 DUP5 PUSH2 0x2066 JUMP JUMPDEST PUSH2 0x204C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x20D2 JUMPI PUSH2 0x20D1 PUSH2 0x1FEA JUMP JUMPDEST JUMPDEST PUSH2 0x20DD DUP5 DUP3 DUP6 PUSH2 0x2096 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x20F9 JUMPI PUSH2 0x20F8 PUSH2 0x1FE6 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2109 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x20A4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x212A JUMPI PUSH2 0x2129 PUSH2 0x1EB8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2137 DUP8 DUP3 DUP9 ADD PUSH2 0x1F06 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2148 DUP8 DUP3 DUP9 ADD PUSH2 0x1F39 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2159 DUP8 DUP3 DUP9 ADD PUSH2 0x1F39 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x217A JUMPI PUSH2 0x2179 PUSH2 0x1EBC JUMP JUMPDEST JUMPDEST PUSH2 0x2186 DUP8 DUP3 DUP9 ADD PUSH2 0x20E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21A9 JUMPI PUSH2 0x21A8 PUSH2 0x1EB8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21B6 DUP7 DUP3 DUP8 ADD PUSH2 0x1F06 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x21C7 DUP7 DUP3 DUP8 ADD PUSH2 0x1F06 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x21D8 DUP7 DUP3 DUP8 ADD PUSH2 0x1F39 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21F7 DUP2 PUSH2 0x21E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2210 PUSH0 DUP4 ADD DUP5 PUSH2 0x21EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x222B JUMPI PUSH2 0x222A PUSH2 0x1EB8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2238 DUP5 DUP3 DUP6 ADD PUSH2 0x1F06 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2256 JUMPI PUSH2 0x2255 PUSH2 0x1EB8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2263 DUP5 DUP3 DUP6 ADD PUSH2 0x1F39 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2275 DUP2 PUSH2 0x1EDF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x228E PUSH0 DUP4 ADD DUP5 PUSH2 0x226C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22AA JUMPI PUSH2 0x22A9 PUSH2 0x1EB8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22B7 DUP6 DUP3 DUP7 ADD PUSH2 0x1F06 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22C8 DUP6 DUP3 DUP7 ADD PUSH2 0x1F06 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x180 DUP3 ADD SWAP1 POP PUSH2 0x22E6 PUSH0 DUP4 ADD DUP16 PUSH2 0x226C JUMP JUMPDEST PUSH2 0x22F3 PUSH1 0x20 DUP4 ADD DUP15 PUSH2 0x226C JUMP JUMPDEST PUSH2 0x2300 PUSH1 0x40 DUP4 ADD DUP14 PUSH2 0x1FBE JUMP JUMPDEST PUSH2 0x230D PUSH1 0x60 DUP4 ADD DUP13 PUSH2 0x1FBE JUMP JUMPDEST PUSH2 0x231A PUSH1 0x80 DUP4 ADD DUP12 PUSH2 0x1FBE JUMP JUMPDEST PUSH2 0x2327 PUSH1 0xA0 DUP4 ADD DUP11 PUSH2 0x1FBE JUMP JUMPDEST PUSH2 0x2334 PUSH1 0xC0 DUP4 ADD DUP10 PUSH2 0x1F96 JUMP JUMPDEST PUSH2 0x2341 PUSH1 0xE0 DUP4 ADD DUP9 PUSH2 0x1F96 JUMP JUMPDEST PUSH2 0x234F PUSH2 0x100 DUP4 ADD DUP8 PUSH2 0x1F96 JUMP JUMPDEST PUSH2 0x235D PUSH2 0x120 DUP4 ADD DUP7 PUSH2 0x1FBE JUMP JUMPDEST PUSH2 0x236B PUSH2 0x140 DUP4 ADD DUP6 PUSH2 0x1F96 JUMP JUMPDEST DUP2 DUP2 SUB PUSH2 0x160 DUP4 ADD MSTORE PUSH2 0x237E DUP2 DUP5 PUSH2 0x1E57 JUMP JUMPDEST SWAP1 POP SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x23D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x23E8 JUMPI PUSH2 0x23E7 PUSH2 0x2391 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426F72726F776572206D757374206265204B5943207665726966696564000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2422 PUSH1 0x1D DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x242D DUP3 PUSH2 0x23EE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x244F DUP2 PUSH2 0x2416 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x248A PUSH1 0x12 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x2495 DUP3 PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24B7 DUP2 PUSH2 0x247E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C6C6F77616E6365206973206E6F7420656E6F756768000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24F2 PUSH1 0x17 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x24FD DUP3 PUSH2 0x24BE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x251F DUP2 PUSH2 0x24E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x255D DUP3 PUSH2 0x1F1A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x258F JUMPI PUSH2 0x258E PUSH2 0x2526 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x25A4 DUP3 PUSH2 0x1F1A JUMP JUMPDEST SWAP2 POP PUSH2 0x25AF DUP4 PUSH2 0x1F1A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x25BD DUP2 PUSH2 0x1F1A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x25D4 JUMPI PUSH2 0x25D3 PUSH2 0x2526 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25E5 DUP3 PUSH2 0x1F1A JUMP JUMPDEST SWAP2 POP PUSH2 0x25F0 DUP4 PUSH2 0x1F1A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2608 JUMPI PUSH2 0x2607 PUSH2 0x2526 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x266A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x262F JUMP JUMPDEST PUSH2 0x2674 DUP7 DUP4 PUSH2 0x262F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x26AF PUSH2 0x26AA PUSH2 0x26A5 DUP5 PUSH2 0x1F1A JUMP JUMPDEST PUSH2 0x268C JUMP JUMPDEST PUSH2 0x1F1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26C8 DUP4 PUSH2 0x2695 JUMP JUMPDEST PUSH2 0x26DC PUSH2 0x26D4 DUP3 PUSH2 0x26B6 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x263B JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x26F0 PUSH2 0x26E4 JUMP JUMPDEST PUSH2 0x26FB DUP2 DUP5 DUP5 PUSH2 0x26BF JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x271E JUMPI PUSH2 0x2713 PUSH0 DUP3 PUSH2 0x26E8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2701 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2763 JUMPI PUSH2 0x2734 DUP2 PUSH2 0x260E JUMP JUMPDEST PUSH2 0x273D DUP5 PUSH2 0x2620 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x274C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2760 PUSH2 0x2758 DUP6 PUSH2 0x2620 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2700 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2783 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2768 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x279B DUP4 DUP4 PUSH2 0x2774 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27B4 DUP3 PUSH2 0x1E1F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27CD JUMPI PUSH2 0x27CC PUSH2 0x1FEE JUMP JUMPDEST JUMPDEST PUSH2 0x27D7 DUP3 SLOAD PUSH2 0x23BE JUMP JUMPDEST PUSH2 0x27E2 DUP3 DUP3 DUP6 PUSH2 0x2722 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2813 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2801 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x280B DUP6 DUP3 PUSH2 0x2790 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2872 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2821 DUP7 PUSH2 0x260E JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2848 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2823 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2865 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2861 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2774 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x288E PUSH0 DUP4 ADD DUP12 PUSH2 0x1FBE JUMP JUMPDEST PUSH2 0x289B PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x226C JUMP JUMPDEST PUSH2 0x28A8 PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x226C JUMP JUMPDEST PUSH2 0x28B5 PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x1FBE JUMP JUMPDEST PUSH2 0x28C2 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x1FBE JUMP JUMPDEST PUSH2 0x28CF PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x1FBE JUMP JUMPDEST PUSH2 0x28DC PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x1FBE JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x28EE DUP2 DUP5 PUSH2 0x1E57 JUMP JUMPDEST SWAP1 POP SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4C6F616E206973207374696C6C2077697468696E2072657061796D656E742070 PUSH0 DUP3 ADD MSTORE PUSH32 0x6572696F64000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2957 PUSH1 0x25 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x2962 DUP3 PUSH2 0x28FD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2984 DUP2 PUSH2 0x294B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C6F616E20616C72656164792072657061696400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29BF PUSH1 0x13 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x29CA DUP3 PUSH2 0x298B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29EC DUP2 PUSH2 0x29B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x29FD DUP3 PUSH2 0x1F1A JUMP JUMPDEST SWAP2 POP PUSH2 0x2A08 DUP4 PUSH2 0x1F1A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2A20 JUMPI PUSH2 0x2A1F PUSH2 0x2526 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C7920626F72726F7765722063616E207265706179000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A5A PUSH1 0x17 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A65 DUP3 PUSH2 0x2A26 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A87 DUP2 PUSH2 0x2A4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C6F616E206D7573742062652061636365707465642066697273740000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2AC2 PUSH1 0x1B DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x2ACD DUP3 PUSH2 0x2A8E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2AEF DUP2 PUSH2 0x2AB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C7920626F72726F7765722063616E206163636570740000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B2A PUSH1 0x18 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B35 DUP3 PUSH2 0x2AF6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B57 DUP2 PUSH2 0x2B1E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C6F616E20616C72656164792061636365707465640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B92 PUSH1 0x15 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B9D DUP3 PUSH2 0x2B5E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BBF DUP2 PUSH2 0x2B86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C79206C656E6465722063616E2063616E63656C00000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2BFA PUSH1 0x16 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C05 DUP3 PUSH2 0x2BC6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C27 DUP2 PUSH2 0x2BEE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C6F616E20616C72656164792063616E63656C6C656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C62 PUSH1 0x16 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C6D DUP3 PUSH2 0x2C2E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C8F DUP2 PUSH2 0x2C56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F742063616E63656C20616E206163636570746564206C6F616E0000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2CCA PUSH1 0x1E DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CD5 DUP3 PUSH2 0x2C96 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2CF7 DUP2 PUSH2 0x2CBE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2D11 PUSH0 DUP4 ADD DUP7 PUSH2 0x226C JUMP JUMPDEST PUSH2 0x2D1E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1FBE JUMP JUMPDEST PUSH2 0x2D2B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1FBE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2D46 PUSH0 DUP4 ADD DUP7 PUSH2 0x226C JUMP JUMPDEST PUSH2 0x2D53 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x226C JUMP JUMPDEST PUSH2 0x2D60 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1FBE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2D7B PUSH0 DUP4 ADD DUP6 PUSH2 0x226C JUMP JUMPDEST PUSH2 0x2D88 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1FBE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 0xF6 0xCF 0xEF PUSH12 0xD258567900AB53AA842DB56C 0xEF 0xE0 SWAP8 PUSH12 0x991D7F62BB424F4E82FEDD64 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "247:5469:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1664:1251:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1564:92:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1428:128;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:116:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;327:30:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4826:313;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;804:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;754:43:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5147:274;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3281:521:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2923:350;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4406:412;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4119:279;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;710:37:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1779:89:5;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;1664:1251:11:-;1823:7;1851:11;:21;1863:8;1851:21;;;;;;;;;;;;;;;;;;;;;;;;;1843:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1950:6;1925:21;1935:10;1925:9;:21::i;:::-;:31;;1917:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2038:6;1998:36;2008:10;2028:4;1998:9;:36::i;:::-;:46;;1990:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;2085:20;2108:2;2085:25;;2121:52;2139:10;2159:4;2166:6;2121:17;:52::i;:::-;2184:18;2205:11;;:13;;;;;;;;;:::i;:::-;;;;;2184:34;;2229:14;2246:10;;:12;;;;;;;;;:::i;:::-;;;;;2229:29;;2287:448;;;;;;;;2317:8;2287:448;;;;;;2348:10;2287:448;;;;;;2381:6;2287:448;;;;2418:14;2287:448;;;;2461:12;2287:448;;;;2531:6;2516:12;:21;;;;:::i;:::-;2497:15;:41;;;;:::i;:::-;2287:448;;;;2561:5;2287:448;;;;;;2591:5;2287:448;;;;;;2621:5;2287:448;;;;;;2653:10;2287:448;;;;2691:5;2287:448;;;;;;2718:5;2287:448;;;2271:5;:13;2277:6;2271:13;;;;;;;;;;;:464;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;2753:126;2764:6;2772:8;2782:10;2794:6;2802:14;2818:10;2864:6;2849:12;:21;;;;:::i;:::-;2830:15;:41;;;;:::i;:::-;2873:5;2753:126;;;;;;;;;;;;;:::i;:::-;;;;;;;;2897:10;2890:17;;;;;1664:1251;;;;;;:::o;4776:244:5:-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;1564:92:11:-;1622:5;1564:92;:::o;1428:128::-;1531:13:0;:11;:13::i;:::-;1511:4:11::1;1491:11;:17;1503:4;1491:17;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;1543:4;1531:17;;;;;;;;;;;;1428:128:::0;:::o;3004:116:5:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;327:30:11:-;;;;:::o;4826:313::-;4884:17;4904:5;:13;4910:6;4904:13;;;;;;;;;;;4884:33;;4954:4;:12;;;4936:15;:30;4928:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;5028:4;:11;;;;;;;;;;;;5027:12;5019:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;5090:4;5074;:13;;;:20;;;;;;;;;;;;;;;;;;5110:21;5124:6;5110:21;;;;;;:::i;:::-;;;;;;;;4873:266;4826:313;:::o;804:29::-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:5:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;754:43:11:-;;;;;;;;;;;;;;;;;;;;;;:::o;5147:274::-;5208:7;5228:17;5248:5;:13;5254:6;5248:13;;;;;;;;;;;5228:33;;5295:4;:12;;;5276:15;:31;5272:142;;5331:1;5324:8;;;;;5272:142;5387:15;5372:4;:12;;;:30;;;;:::i;:::-;5365:37;;;5147:274;;;;:::o;3315:178:5:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;3281:521:11:-;3336:17;3356:5;:13;3362:6;3356:13;;;;;;;;;;;3336:33;;3402:4;:13;;;;;;;;;;;;3388:27;;:10;:27;;;3380:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;3462:4;:13;;;;;;;;;;;;3454:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;3527:4;:11;;;;;;;;;;;;3526:12;3518:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;3575:19;3611:4;:19;;;3597:4;:11;;;:33;;;;:::i;:::-;3575:55;;3641;3659:10;3671:4;:11;;;;;;;;;;;;3684;3641:17;:55::i;:::-;3721:4;3707;:11;;;:18;;;;;;;;;;;;;;;;;;3736:24;3744:4;:15;;;3736:7;:24::i;:::-;3776:18;3787:6;3776:18;;;;;;:::i;:::-;;;;;;;;3325:477;;3281:521;:::o;2923:350::-;2979:17;2999:5;:13;3005:6;2999:13;;;;;;;;;;;2979:33;;3045:4;:13;;;;;;;;;;;;3031:27;;:10;:27;;;3023:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3107:4;:13;;;;;;;;;;;;3106:14;3098:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;3173:4;3157;:13;;;:20;;;;;;;;;;;;;;;;;;3188:41;3202:4;:13;;;;;;;;;;;;3217:4;:11;;;3188:13;:41::i;:::-;3245:20;3258:6;3245:20;;;;;;:::i;:::-;;;;;;;;2968:305;2923:350;:::o;4406:412::-;4462:17;4482:5;:13;4488:6;4482:13;;;;;;;;;;;4462:33;;4528:4;:11;;;;;;;;;;;;4514:25;;:10;:25;;;4506:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;4586:4;:13;;;;;;;;;;;;4585:14;4577:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;4646:4;:13;;;;;;;;;;;;4645:14;4637:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;4705:38;4719:10;4731:4;:11;;;4705:13;:38::i;:::-;4770:4;4754;:13;;;:20;;;;;;;;;;;;;;;;;;4790;4803:6;4790:20;;;;;;:::i;:::-;;;;;;;;4451:367;4406:412;:::o;4119:279::-;4183:4;4205:9;4217:1;4205:13;;4200:168;4224:10;;4220:1;:14;4200:168;;;4283:10;4260:5;:8;4266:1;4260:8;;;;;;;;;;;:19;;;:33;4256:101;;4321:5;:8;4327:1;4321:8;;;;;;;;;;;:20;;;;;;;;;;;;4314:27;;;;;4256:101;4236:3;;;;;;;4200:168;;;;4385:5;4378:12;;4119:279;;;;:::o;3551:140:5:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;710:37:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:9:-;709:7;735:10;728:17;;656:96;:::o;8726:128:5:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;5429:152:11:-;5518:55;5556:4;5562:2;5566:6;5532:4;5518:37;;;;:55;;;;;;:::i;:::-;5429:152;;;:::o;10415:476:5:-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;3810:301:11:-;3872:9;3884:1;3872:13;;3867:237;3891:10;;3887:1;:14;3867:237;;;3950:10;3927:5;:8;3933:1;3927:8;;;;;;;;;;;:19;;;:33;3923:170;;4004:4;3981:5;:8;3987:1;3981:8;;;;;;;;;;;:20;;;:27;;;;;;;;;;;;;;;;;;4032:21;4042:10;4032:21;;;;;;:::i;:::-;;;;;;;;4072:5;;3923:170;3903:3;;;;;;;3867:237;;;;3810:301;:::o;5589:124::-;5660:45;5694:2;5698:6;5674:4;5660:33;;;;:45;;;;;:::i;:::-;5589:124;;:::o;9701:432:5:-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;1618:188:8:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;6008:1107:5:-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;1219:160:8:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;7686:720::-;7766:18;7794:19;7932:4;7929:1;7922:4;7916:11;7909:4;7903;7899:15;7896:1;7889:5;7882;7877:60;7989:7;7979:176;;8033:4;8027:11;8078:16;8075:1;8070:3;8055:40;8124:16;8119:3;8112:29;7979:176;8182:16;8168:30;;8232:1;8226:8;8211:23;;7848:396;8272:1;8258:10;:15;:68;;8325:1;8310:11;:16;;8258:68;;;8306:1;8284:5;8276:26;;;:31;8258:68;8254:146;;;8382:5;8349:40;;;;;;;;;;;:::i;:::-;;;;;;;;8254:146;7756:650;;7686:720;;:::o;7:99:12:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1242:75::-;1275:6;1308:2;1302:9;1292:19;;1242:75;:::o;1323:117::-;1432:1;1429;1422:12;1446:117;1555:1;1552;1545:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:117::-;3800:1;3797;3790:12;3814:117;3923:1;3920;3913:12;3937:180;3985:77;3982:1;3975:88;4082:4;4079:1;4072:15;4106:4;4103:1;4096:15;4123:281;4206:27;4228:4;4206:27;:::i;:::-;4198:6;4194:40;4336:6;4324:10;4321:22;4300:18;4288:10;4285:34;4282:62;4279:88;;;4347:18;;:::i;:::-;4279:88;4387:10;4383:2;4376:22;4166:238;4123:281;;:::o;4410:129::-;4444:6;4471:20;;:::i;:::-;4461:30;;4500:33;4528:4;4520:6;4500:33;:::i;:::-;4410:129;;;:::o;4545:308::-;4607:4;4697:18;4689:6;4686:30;4683:56;;;4719:18;;:::i;:::-;4683:56;4757:29;4779:6;4757:29;:::i;:::-;4749:37;;4841:4;4835;4831:15;4823:23;;4545:308;;;:::o;4859:148::-;4957:6;4952:3;4947;4934:30;4998:1;4989:6;4984:3;4980:16;4973:27;4859:148;;;:::o;5013:425::-;5091:5;5116:66;5132:49;5174:6;5132:49;:::i;:::-;5116:66;:::i;:::-;5107:75;;5205:6;5198:5;5191:21;5243:4;5236:5;5232:16;5281:3;5272:6;5267:3;5263:16;5260:25;5257:112;;;5288:79;;:::i;:::-;5257:112;5378:54;5425:6;5420:3;5415;5378:54;:::i;:::-;5097:341;5013:425;;;;;:::o;5458:340::-;5514:5;5563:3;5556:4;5548:6;5544:17;5540:27;5530:122;;5571:79;;:::i;:::-;5530:122;5688:6;5675:20;5713:79;5788:3;5780:6;5773:4;5765:6;5761:17;5713:79;:::i;:::-;5704:88;;5520:278;5458:340;;;;:::o;5804:945::-;5900:6;5908;5916;5924;5973:3;5961:9;5952:7;5948:23;5944:33;5941:120;;;5980:79;;:::i;:::-;5941:120;6100:1;6125:53;6170:7;6161:6;6150:9;6146:22;6125:53;:::i;:::-;6115:63;;6071:117;6227:2;6253:53;6298:7;6289:6;6278:9;6274:22;6253:53;:::i;:::-;6243:63;;6198:118;6355:2;6381:53;6426:7;6417:6;6406:9;6402:22;6381:53;:::i;:::-;6371:63;;6326:118;6511:2;6500:9;6496:18;6483:32;6542:18;6534:6;6531:30;6528:117;;;6564:79;;:::i;:::-;6528:117;6669:63;6724:7;6715:6;6704:9;6700:22;6669:63;:::i;:::-;6659:73;;6454:288;5804:945;;;;;;;:::o;6755:619::-;6832:6;6840;6848;6897:2;6885:9;6876:7;6872:23;6868:32;6865:119;;;6903:79;;:::i;:::-;6865:119;7023:1;7048:53;7093:7;7084:6;7073:9;7069:22;7048:53;:::i;:::-;7038:63;;6994:117;7150:2;7176:53;7221:7;7212:6;7201:9;7197:22;7176:53;:::i;:::-;7166:63;;7121:118;7278:2;7304:53;7349:7;7340:6;7329:9;7325:22;7304:53;:::i;:::-;7294:63;;7249:118;6755:619;;;;;:::o;7380:86::-;7415:7;7455:4;7448:5;7444:16;7433:27;;7380:86;;;:::o;7472:112::-;7555:22;7571:5;7555:22;:::i;:::-;7550:3;7543:35;7472:112;;:::o;7590:214::-;7679:4;7717:2;7706:9;7702:18;7694:26;;7730:67;7794:1;7783:9;7779:17;7770:6;7730:67;:::i;:::-;7590:214;;;;:::o;7810:329::-;7869:6;7918:2;7906:9;7897:7;7893:23;7889:32;7886:119;;;7924:79;;:::i;:::-;7886:119;8044:1;8069:53;8114:7;8105:6;8094:9;8090:22;8069:53;:::i;:::-;8059:63;;8015:117;7810:329;;;;:::o;8145:::-;8204:6;8253:2;8241:9;8232:7;8228:23;8224:32;8221:119;;;8259:79;;:::i;:::-;8221:119;8379:1;8404:53;8449:7;8440:6;8429:9;8425:22;8404:53;:::i;:::-;8394:63;;8350:117;8145:329;;;;:::o;8480:118::-;8567:24;8585:5;8567:24;:::i;:::-;8562:3;8555:37;8480:118;;:::o;8604:222::-;8697:4;8735:2;8724:9;8720:18;8712:26;;8748:71;8816:1;8805:9;8801:17;8792:6;8748:71;:::i;:::-;8604:222;;;;:::o;8832:474::-;8900:6;8908;8957:2;8945:9;8936:7;8932:23;8928:32;8925:119;;;8963:79;;:::i;:::-;8925:119;9083:1;9108:53;9153:7;9144:6;9133:9;9129:22;9108:53;:::i;:::-;9098:63;;9054:117;9210:2;9236:53;9281:7;9272:6;9261:9;9257:22;9236:53;:::i;:::-;9226:63;;9181:118;8832:474;;;;;:::o;9312:1488::-;9711:4;9749:3;9738:9;9734:19;9726:27;;9763:71;9831:1;9820:9;9816:17;9807:6;9763:71;:::i;:::-;9844:72;9912:2;9901:9;9897:18;9888:6;9844:72;:::i;:::-;9926;9994:2;9983:9;9979:18;9970:6;9926:72;:::i;:::-;10008;10076:2;10065:9;10061:18;10052:6;10008:72;:::i;:::-;10090:73;10158:3;10147:9;10143:19;10134:6;10090:73;:::i;:::-;10173;10241:3;10230:9;10226:19;10217:6;10173:73;:::i;:::-;10256:67;10318:3;10307:9;10303:19;10294:6;10256:67;:::i;:::-;10333;10395:3;10384:9;10380:19;10371:6;10333:67;:::i;:::-;10410;10472:3;10461:9;10457:19;10448:6;10410:67;:::i;:::-;10487:73;10555:3;10544:9;10540:19;10531:6;10487:73;:::i;:::-;10570:68;10633:3;10622:9;10618:19;10608:7;10570:68;:::i;:::-;10686:9;10680:4;10676:20;10670:3;10659:9;10655:19;10648:49;10714:79;10788:4;10778:7;10714:79;:::i;:::-;10706:87;;9312:1488;;;;;;;;;;;;;;;:::o;10806:180::-;10854:77;10851:1;10844:88;10951:4;10948:1;10941:15;10975:4;10972:1;10965:15;10992:320;11036:6;11073:1;11067:4;11063:12;11053:22;;11120:1;11114:4;11110:12;11141:18;11131:81;;11197:4;11189:6;11185:17;11175:27;;11131:81;11259:2;11251:6;11248:14;11228:18;11225:38;11222:84;;11278:18;;:::i;:::-;11222:84;11043:269;10992:320;;;:::o;11318:179::-;11458:31;11454:1;11446:6;11442:14;11435:55;11318:179;:::o;11503:366::-;11645:3;11666:67;11730:2;11725:3;11666:67;:::i;:::-;11659:74;;11742:93;11831:3;11742:93;:::i;:::-;11860:2;11855:3;11851:12;11844:19;;11503:366;;;:::o;11875:419::-;12041:4;12079:2;12068:9;12064:18;12056:26;;12128:9;12122:4;12118:20;12114:1;12103:9;12099:17;12092:47;12156:131;12282:4;12156:131;:::i;:::-;12148:139;;11875:419;;;:::o;12300:168::-;12440:20;12436:1;12428:6;12424:14;12417:44;12300:168;:::o;12474:366::-;12616:3;12637:67;12701:2;12696:3;12637:67;:::i;:::-;12630:74;;12713:93;12802:3;12713:93;:::i;:::-;12831:2;12826:3;12822:12;12815:19;;12474:366;;;:::o;12846:419::-;13012:4;13050:2;13039:9;13035:18;13027:26;;13099:9;13093:4;13089:20;13085:1;13074:9;13070:17;13063:47;13127:131;13253:4;13127:131;:::i;:::-;13119:139;;12846:419;;;:::o;13271:173::-;13411:25;13407:1;13399:6;13395:14;13388:49;13271:173;:::o;13450:366::-;13592:3;13613:67;13677:2;13672:3;13613:67;:::i;:::-;13606:74;;13689:93;13778:3;13689:93;:::i;:::-;13807:2;13802:3;13798:12;13791:19;;13450:366;;;:::o;13822:419::-;13988:4;14026:2;14015:9;14011:18;14003:26;;14075:9;14069:4;14065:20;14061:1;14050:9;14046:17;14039:47;14103:131;14229:4;14103:131;:::i;:::-;14095:139;;13822:419;;;:::o;14247:180::-;14295:77;14292:1;14285:88;14392:4;14389:1;14382:15;14416:4;14413:1;14406:15;14433:233;14472:3;14495:24;14513:5;14495:24;:::i;:::-;14486:33;;14541:66;14534:5;14531:77;14528:103;;14611:18;;:::i;:::-;14528:103;14658:1;14651:5;14647:13;14640:20;;14433:233;;;:::o;14672:410::-;14712:7;14735:20;14753:1;14735:20;:::i;:::-;14730:25;;14769:20;14787:1;14769:20;:::i;:::-;14764:25;;14824:1;14821;14817:9;14846:30;14864:11;14846:30;:::i;:::-;14835:41;;15025:1;15016:7;15012:15;15009:1;15006:22;14986:1;14979:9;14959:83;14936:139;;15055:18;;:::i;:::-;14936:139;14720:362;14672:410;;;;:::o;15088:191::-;15128:3;15147:20;15165:1;15147:20;:::i;:::-;15142:25;;15181:20;15199:1;15181:20;:::i;:::-;15176:25;;15224:1;15221;15217:9;15210:16;;15245:3;15242:1;15239:10;15236:36;;;15252:18;;:::i;:::-;15236:36;15088:191;;;;:::o;15285:141::-;15334:4;15357:3;15349:11;;15380:3;15377:1;15370:14;15414:4;15411:1;15401:18;15393:26;;15285:141;;;:::o;15432:93::-;15469:6;15516:2;15511;15504:5;15500:14;15496:23;15486:33;;15432:93;;;:::o;15531:107::-;15575:8;15625:5;15619:4;15615:16;15594:37;;15531:107;;;;:::o;15644:393::-;15713:6;15763:1;15751:10;15747:18;15786:97;15816:66;15805:9;15786:97;:::i;:::-;15904:39;15934:8;15923:9;15904:39;:::i;:::-;15892:51;;15976:4;15972:9;15965:5;15961:21;15952:30;;16025:4;16015:8;16011:19;16004:5;16001:30;15991:40;;15720:317;;15644:393;;;;;:::o;16043:60::-;16071:3;16092:5;16085:12;;16043:60;;;:::o;16109:142::-;16159:9;16192:53;16210:34;16219:24;16237:5;16219:24;:::i;:::-;16210:34;:::i;:::-;16192:53;:::i;:::-;16179:66;;16109:142;;;:::o;16257:75::-;16300:3;16321:5;16314:12;;16257:75;;;:::o;16338:269::-;16448:39;16479:7;16448:39;:::i;:::-;16509:91;16558:41;16582:16;16558:41;:::i;:::-;16550:6;16543:4;16537:11;16509:91;:::i;:::-;16503:4;16496:105;16414:193;16338:269;;;:::o;16613:73::-;16658:3;16613:73;:::o;16692:189::-;16769:32;;:::i;:::-;16810:65;16868:6;16860;16854:4;16810:65;:::i;:::-;16745:136;16692:189;;:::o;16887:186::-;16947:120;16964:3;16957:5;16954:14;16947:120;;;17018:39;17055:1;17048:5;17018:39;:::i;:::-;16991:1;16984:5;16980:13;16971:22;;16947:120;;;16887:186;;:::o;17079:543::-;17180:2;17175:3;17172:11;17169:446;;;17214:38;17246:5;17214:38;:::i;:::-;17298:29;17316:10;17298:29;:::i;:::-;17288:8;17284:44;17481:2;17469:10;17466:18;17463:49;;;17502:8;17487:23;;17463:49;17525:80;17581:22;17599:3;17581:22;:::i;:::-;17571:8;17567:37;17554:11;17525:80;:::i;:::-;17184:431;;17169:446;17079:543;;;:::o;17628:117::-;17682:8;17732:5;17726:4;17722:16;17701:37;;17628:117;;;;:::o;17751:169::-;17795:6;17828:51;17876:1;17872:6;17864:5;17861:1;17857:13;17828:51;:::i;:::-;17824:56;17909:4;17903;17899:15;17889:25;;17802:118;17751:169;;;;:::o;17925:295::-;18001:4;18147:29;18172:3;18166:4;18147:29;:::i;:::-;18139:37;;18209:3;18206:1;18202:11;18196:4;18193:21;18185:29;;17925:295;;;;:::o;18225:1395::-;18342:37;18375:3;18342:37;:::i;:::-;18444:18;18436:6;18433:30;18430:56;;;18466:18;;:::i;:::-;18430:56;18510:38;18542:4;18536:11;18510:38;:::i;:::-;18595:67;18655:6;18647;18641:4;18595:67;:::i;:::-;18689:1;18713:4;18700:17;;18745:2;18737:6;18734:14;18762:1;18757:618;;;;19419:1;19436:6;19433:77;;;19485:9;19480:3;19476:19;19470:26;19461:35;;19433:77;19536:67;19596:6;19589:5;19536:67;:::i;:::-;19530:4;19523:81;19392:222;18727:887;;18757:618;18809:4;18805:9;18797:6;18793:22;18843:37;18875:4;18843:37;:::i;:::-;18902:1;18916:208;18930:7;18927:1;18924:14;18916:208;;;19009:9;19004:3;19000:19;18994:26;18986:6;18979:42;19060:1;19052:6;19048:14;19038:24;;19107:2;19096:9;19092:18;19079:31;;18953:4;18950:1;18946:12;18941:17;;18916:208;;;19152:6;19143:7;19140:19;19137:179;;;19210:9;19205:3;19201:19;19195:26;19253:48;19295:4;19287:6;19283:17;19272:9;19253:48;:::i;:::-;19245:6;19238:64;19160:156;19137:179;19362:1;19358;19350:6;19346:14;19342:22;19336:4;19329:36;18764:611;;;18727:887;;18317:1303;;;18225:1395;;:::o;19626:1088::-;19935:4;19973:3;19962:9;19958:19;19950:27;;19987:71;20055:1;20044:9;20040:17;20031:6;19987:71;:::i;:::-;20068:72;20136:2;20125:9;20121:18;20112:6;20068:72;:::i;:::-;20150;20218:2;20207:9;20203:18;20194:6;20150:72;:::i;:::-;20232;20300:2;20289:9;20285:18;20276:6;20232:72;:::i;:::-;20314:73;20382:3;20371:9;20367:19;20358:6;20314:73;:::i;:::-;20397;20465:3;20454:9;20450:19;20441:6;20397:73;:::i;:::-;20480;20548:3;20537:9;20533:19;20524:6;20480:73;:::i;:::-;20601:9;20595:4;20591:20;20585:3;20574:9;20570:19;20563:49;20629:78;20702:4;20693:6;20629:78;:::i;:::-;20621:86;;19626:1088;;;;;;;;;;;:::o;20720:224::-;20860:34;20856:1;20848:6;20844:14;20837:58;20929:7;20924:2;20916:6;20912:15;20905:32;20720:224;:::o;20950:366::-;21092:3;21113:67;21177:2;21172:3;21113:67;:::i;:::-;21106:74;;21189:93;21278:3;21189:93;:::i;:::-;21307:2;21302:3;21298:12;21291:19;;20950:366;;;:::o;21322:419::-;21488:4;21526:2;21515:9;21511:18;21503:26;;21575:9;21569:4;21565:20;21561:1;21550:9;21546:17;21539:47;21603:131;21729:4;21603:131;:::i;:::-;21595:139;;21322:419;;;:::o;21747:169::-;21887:21;21883:1;21875:6;21871:14;21864:45;21747:169;:::o;21922:366::-;22064:3;22085:67;22149:2;22144:3;22085:67;:::i;:::-;22078:74;;22161:93;22250:3;22161:93;:::i;:::-;22279:2;22274:3;22270:12;22263:19;;21922:366;;;:::o;22294:419::-;22460:4;22498:2;22487:9;22483:18;22475:26;;22547:9;22541:4;22537:20;22533:1;22522:9;22518:17;22511:47;22575:131;22701:4;22575:131;:::i;:::-;22567:139;;22294:419;;;:::o;22719:194::-;22759:4;22779:20;22797:1;22779:20;:::i;:::-;22774:25;;22813:20;22831:1;22813:20;:::i;:::-;22808:25;;22857:1;22854;22850:9;22842:17;;22881:1;22875:4;22872:11;22869:37;;;22886:18;;:::i;:::-;22869:37;22719:194;;;;:::o;22919:173::-;23059:25;23055:1;23047:6;23043:14;23036:49;22919:173;:::o;23098:366::-;23240:3;23261:67;23325:2;23320:3;23261:67;:::i;:::-;23254:74;;23337:93;23426:3;23337:93;:::i;:::-;23455:2;23450:3;23446:12;23439:19;;23098:366;;;:::o;23470:419::-;23636:4;23674:2;23663:9;23659:18;23651:26;;23723:9;23717:4;23713:20;23709:1;23698:9;23694:17;23687:47;23751:131;23877:4;23751:131;:::i;:::-;23743:139;;23470:419;;;:::o;23895:177::-;24035:29;24031:1;24023:6;24019:14;24012:53;23895:177;:::o;24078:366::-;24220:3;24241:67;24305:2;24300:3;24241:67;:::i;:::-;24234:74;;24317:93;24406:3;24317:93;:::i;:::-;24435:2;24430:3;24426:12;24419:19;;24078:366;;;:::o;24450:419::-;24616:4;24654:2;24643:9;24639:18;24631:26;;24703:9;24697:4;24693:20;24689:1;24678:9;24674:17;24667:47;24731:131;24857:4;24731:131;:::i;:::-;24723:139;;24450:419;;;:::o;24875:174::-;25015:26;25011:1;25003:6;24999:14;24992:50;24875:174;:::o;25055:366::-;25197:3;25218:67;25282:2;25277:3;25218:67;:::i;:::-;25211:74;;25294:93;25383:3;25294:93;:::i;:::-;25412:2;25407:3;25403:12;25396:19;;25055:366;;;:::o;25427:419::-;25593:4;25631:2;25620:9;25616:18;25608:26;;25680:9;25674:4;25670:20;25666:1;25655:9;25651:17;25644:47;25708:131;25834:4;25708:131;:::i;:::-;25700:139;;25427:419;;;:::o;25852:171::-;25992:23;25988:1;25980:6;25976:14;25969:47;25852:171;:::o;26029:366::-;26171:3;26192:67;26256:2;26251:3;26192:67;:::i;:::-;26185:74;;26268:93;26357:3;26268:93;:::i;:::-;26386:2;26381:3;26377:12;26370:19;;26029:366;;;:::o;26401:419::-;26567:4;26605:2;26594:9;26590:18;26582:26;;26654:9;26648:4;26644:20;26640:1;26629:9;26625:17;26618:47;26682:131;26808:4;26682:131;:::i;:::-;26674:139;;26401:419;;;:::o;26826:172::-;26966:24;26962:1;26954:6;26950:14;26943:48;26826:172;:::o;27004:366::-;27146:3;27167:67;27231:2;27226:3;27167:67;:::i;:::-;27160:74;;27243:93;27332:3;27243:93;:::i;:::-;27361:2;27356:3;27352:12;27345:19;;27004:366;;;:::o;27376:419::-;27542:4;27580:2;27569:9;27565:18;27557:26;;27629:9;27623:4;27619:20;27615:1;27604:9;27600:17;27593:47;27657:131;27783:4;27657:131;:::i;:::-;27649:139;;27376:419;;;:::o;27801:172::-;27941:24;27937:1;27929:6;27925:14;27918:48;27801:172;:::o;27979:366::-;28121:3;28142:67;28206:2;28201:3;28142:67;:::i;:::-;28135:74;;28218:93;28307:3;28218:93;:::i;:::-;28336:2;28331:3;28327:12;28320:19;;27979:366;;;:::o;28351:419::-;28517:4;28555:2;28544:9;28540:18;28532:26;;28604:9;28598:4;28594:20;28590:1;28579:9;28575:17;28568:47;28632:131;28758:4;28632:131;:::i;:::-;28624:139;;28351:419;;;:::o;28776:180::-;28916:32;28912:1;28904:6;28900:14;28893:56;28776:180;:::o;28962:366::-;29104:3;29125:67;29189:2;29184:3;29125:67;:::i;:::-;29118:74;;29201:93;29290:3;29201:93;:::i;:::-;29319:2;29314:3;29310:12;29303:19;;28962:366;;;:::o;29334:419::-;29500:4;29538:2;29527:9;29523:18;29515:26;;29587:9;29581:4;29577:20;29573:1;29562:9;29558:17;29551:47;29615:131;29741:4;29615:131;:::i;:::-;29607:139;;29334:419;;;:::o;29759:442::-;29908:4;29946:2;29935:9;29931:18;29923:26;;29959:71;30027:1;30016:9;30012:17;30003:6;29959:71;:::i;:::-;30040:72;30108:2;30097:9;30093:18;30084:6;30040:72;:::i;:::-;30122;30190:2;30179:9;30175:18;30166:6;30122:72;:::i;:::-;29759:442;;;;;;:::o;30207:::-;30356:4;30394:2;30383:9;30379:18;30371:26;;30407:71;30475:1;30464:9;30460:17;30451:6;30407:71;:::i;:::-;30488:72;30556:2;30545:9;30541:18;30532:6;30488:72;:::i;:::-;30570;30638:2;30627:9;30623:18;30614:6;30570:72;:::i;:::-;30207:442;;;;;;:::o;30655:332::-;30776:4;30814:2;30803:9;30799:18;30791:26;;30827:71;30895:1;30884:9;30880:17;30871:6;30827:71;:::i;:::-;30908:72;30976:2;30965:9;30961:18;30952:6;30908:72;:::i;:::-;30655:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2343400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"acceptLoan(uint256)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2874",
								"cancelLoan(uint256)": "infinite",
								"checkDefault(uint256)": "infinite",
								"decimals()": "464",
								"isNFTBurned(uint256)": "infinite",
								"issueLoan(address,uint256,uint256,string)": "infinite",
								"kycVerified(address)": "2900",
								"loans(uint256)": "infinite",
								"name()": "infinite",
								"nextLoanId()": "2558",
								"nextTokenId()": "2514",
								"owner()": "2538",
								"renounceOwnership()": "infinite",
								"repayLoan(uint256)": "infinite",
								"symbol()": "infinite",
								"timeUntilDue(uint256)": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"verifyKYC(address)": "infinite"
							},
							"internal": {
								"_safeTransfer(address,uint256)": "infinite",
								"_safeTransferFrom(address,address,uint256)": "infinite",
								"burnNFT(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 247,
									"end": 5716,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 247,
									"end": 5716,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 247,
									"end": 5716,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 356,
									"end": 357,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 327,
									"end": 357,
									"name": "PUSH",
									"source": 11,
									"value": "6"
								},
								{
									"begin": 327,
									"end": 357,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 832,
									"end": 833,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 804,
									"end": 833,
									"name": "PUSH",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 804,
									"end": 833,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 1259,
									"end": 1420,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 1259,
									"end": 1420,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1259,
									"end": 1420,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1259,
									"end": 1420,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1259,
									"end": 1420,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1259,
									"end": 1420,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1259,
									"end": 1420,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1259,
									"end": 1420,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1259,
									"end": 1420,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1259,
									"end": 1420,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1259,
									"end": 1420,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1309,
									"end": 1319,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "437265646974546F6B656E000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "4352440000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1332,
									"end": 1353,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1356,
									"end": 1369,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "3B9ACA00"
								},
								{
									"begin": 1332,
									"end": 1369,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1332,
									"end": 1369,
									"modifierDepth": 2,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1380,
									"end": 1412,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 1386,
									"end": 1396,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 1398,
									"end": 1411,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1380,
									"end": 1385,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 1380,
									"end": 1385,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1380,
									"end": 1385,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1380,
									"end": 1412,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1380,
									"end": 1412,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1380,
									"end": 1412,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1380,
									"end": 1412,
									"modifierDepth": 2,
									"name": "tag",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 1380,
									"end": 1412,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1321,
									"end": 1420,
									"modifierDepth": 2,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 247,
									"end": 5716,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 247,
									"end": 5716,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 5,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 5,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 5,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 5
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 12,
									"value": "92"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "92"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "98"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 12,
									"value": "98"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "99"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 12,
									"value": "99"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "105"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 12,
									"value": "105"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "113"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 12,
									"value": "113"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "115"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 12,
									"value": "115"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "118"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 12,
									"value": "118"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "tag",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5353,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5304,
									"end": 5309,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5300,
									"end": 5354,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5234,
									"end": 5360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "tag",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5403,
									"end": 5410,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 5432,
									"end": 5456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "tag",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5366,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "tag",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "128"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 5555,
									"end": 5579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "tag",
									"source": 12,
									"value": "128"
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5550,
									"end": 5553,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5543,
									"end": 5580,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5468,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "tag",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5685,
									"end": 5689,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5723,
									"end": 5725,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 5712,
									"end": 5721,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5708,
									"end": 5726,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "130"
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5793,
									"end": 5802,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5789,
									"end": 5806,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5780,
									"end": 5786,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 5736,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "tag",
									"source": 12,
									"value": "130"
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5592,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5820,
									"end": 6000,
									"name": "tag",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 5820,
									"end": 6000,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5868,
									"end": 5945,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5865,
									"end": 5866,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5858,
									"end": 5946,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 5965,
									"end": 5969,
									"name": "PUSH",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 5962,
									"end": 5963,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 5955,
									"end": 5970,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 5989,
									"end": 5993,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 5986,
									"end": 5987,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5979,
									"end": 5994,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6046,
									"end": 6049,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 6083,
									"end": 6084,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 6065,
									"end": 6085,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "tag",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6060,
									"end": 6085,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6060,
									"end": 6085,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "134"
								},
								{
									"begin": 6117,
									"end": 6118,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 6099,
									"end": 6119,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "tag",
									"source": 12,
									"value": "134"
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6094,
									"end": 6119,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 6094,
									"end": 6119,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6142,
									"end": 6143,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6139,
									"end": 6140,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6135,
									"end": 6144,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6128,
									"end": 6144,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6128,
									"end": 6144,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6163,
									"end": 6166,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 6160,
									"end": 6161,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6157,
									"end": 6167,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "135"
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "136"
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 6170,
									"end": 6188,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "tag",
									"source": 12,
									"value": "136"
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "tag",
									"source": 12,
									"value": "135"
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6006,
									"end": 6197,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "tag",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "138"
								},
								{
									"begin": 6308,
									"end": 6313,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 6290,
									"end": 6314,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "tag",
									"source": 12,
									"value": "138"
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6285,
									"end": 6288,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6278,
									"end": 6315,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6203,
									"end": 6321,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6476,
									"end": 6480,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6514,
									"end": 6516,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 6503,
									"end": 6512,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6499,
									"end": 6517,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6491,
									"end": 6517,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6491,
									"end": 6517,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "140"
								},
								{
									"begin": 6595,
									"end": 6596,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6584,
									"end": 6593,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6580,
									"end": 6597,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6571,
									"end": 6577,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 6527,
									"end": 6598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "tag",
									"source": 12,
									"value": "140"
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "141"
								},
								{
									"begin": 6676,
									"end": 6678,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 6665,
									"end": 6674,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6661,
									"end": 6679,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6652,
									"end": 6658,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 6608,
									"end": 6680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "tag",
									"source": 12,
									"value": "141"
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "142"
								},
								{
									"begin": 6758,
									"end": 6760,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 6747,
									"end": 6756,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6743,
									"end": 6761,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6734,
									"end": 6740,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 6690,
									"end": 6762,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "tag",
									"source": 12,
									"value": "142"
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6327,
									"end": 6769,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6868,
									"end": 6872,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6906,
									"end": 6908,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 6895,
									"end": 6904,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6891,
									"end": 6909,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6883,
									"end": 6909,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6883,
									"end": 6909,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "144"
								},
								{
									"begin": 6987,
									"end": 6988,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6976,
									"end": 6985,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6972,
									"end": 6989,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6963,
									"end": 6969,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 6919,
									"end": 6990,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "tag",
									"source": 12,
									"value": "144"
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6775,
									"end": 6997,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 247,
									"end": 5716,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 247,
									"end": 5716,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 247,
									"end": 5716,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 247,
									"end": 5716,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 247,
									"end": 5716,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 247,
									"end": 5716,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 247,
									"end": 5716,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 247,
									"end": 5716,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 247,
									"end": 5716,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e2f6cfef6bd258567900ab53aa842db56cefe0976b991d7f62bb424f4e82fedd64736f6c634300081a0033",
									".code": [
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH",
											"source": 11,
											"value": "ADFBE22F"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH",
											"source": 11,
											"value": "ADFBE22F"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH",
											"source": 11,
											"value": "BDBFA3DE"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH",
											"source": 11,
											"value": "C2FDBDAD"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH",
											"source": 11,
											"value": "DD62ED3E"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH",
											"source": 11,
											"value": "E1EC3C68"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH",
											"source": 11,
											"value": "95D89B41"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH",
											"source": 11,
											"value": "A5410A66"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH",
											"source": 11,
											"value": "A6F5B3B3"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH",
											"source": 11,
											"value": "A9059CBB"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH",
											"source": 11,
											"value": "AB7B1C89"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH",
											"source": 11,
											"value": "38D16011"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH",
											"source": 11,
											"value": "38D16011"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH",
											"source": 11,
											"value": "75794A3C"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH",
											"source": 11,
											"value": "759135A1"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH",
											"source": 11,
											"value": "87C51459"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH",
											"source": 11,
											"value": "6FDDE03"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH",
											"source": 11,
											"value": "95EA7B3"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH",
											"source": 11,
											"value": "18160DDD"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH",
											"source": 11,
											"value": "1A2FF598"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH",
											"source": 11,
											"value": "313CE567"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 247,
											"end": 5716,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 1664,
											"end": 2915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 1664,
											"end": 2915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 1664,
											"end": 2915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1564,
											"end": 1656,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 1564,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1564,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 1564,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 1564,
											"end": 1656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1564,
											"end": 1656,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 1564,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1564,
											"end": 1656,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1564,
											"end": 1656,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1564,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 1564,
											"end": 1656,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1564,
											"end": 1656,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1564,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 1564,
											"end": 1656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1564,
											"end": 1656,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 1564,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1564,
											"end": 1656,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1564,
											"end": 1656,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1564,
											"end": 1656,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1564,
											"end": 1656,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1564,
											"end": 1656,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1564,
											"end": 1656,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1564,
											"end": 1656,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1428,
											"end": 1556,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 1428,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1428,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 1428,
											"end": 1556,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1428,
											"end": 1556,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1428,
											"end": 1556,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1428,
											"end": 1556,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1428,
											"end": 1556,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1428,
											"end": 1556,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1428,
											"end": 1556,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1428,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 1428,
											"end": 1556,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1428,
											"end": 1556,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1428,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1428,
											"end": 1556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1428,
											"end": 1556,
											"name": "tag",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 1428,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1428,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 1428,
											"end": 1556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1428,
											"end": 1556,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 1428,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1428,
											"end": 1556,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 327,
											"end": 357,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 327,
											"end": 357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 327,
											"end": 357,
											"name": "tag",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 327,
											"end": 357,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 327,
											"end": 357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 327,
											"end": 357,
											"name": "tag",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 327,
											"end": 357,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 327,
											"end": 357,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 327,
											"end": 357,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 327,
											"end": 357,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 327,
											"end": 357,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4826,
											"end": 5139,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 4826,
											"end": 5139,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4826,
											"end": 5139,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 4826,
											"end": 5139,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4826,
											"end": 5139,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4826,
											"end": 5139,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4826,
											"end": 5139,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4826,
											"end": 5139,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4826,
											"end": 5139,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4826,
											"end": 5139,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4826,
											"end": 5139,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 4826,
											"end": 5139,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4826,
											"end": 5139,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4826,
											"end": 5139,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 4826,
											"end": 5139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4826,
											"end": 5139,
											"name": "tag",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 4826,
											"end": 5139,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4826,
											"end": 5139,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 4826,
											"end": 5139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4826,
											"end": 5139,
											"name": "tag",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 4826,
											"end": 5139,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4826,
											"end": 5139,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 804,
											"end": 833,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 804,
											"end": 833,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 804,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 804,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 804,
											"end": 833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 804,
											"end": 833,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 804,
											"end": 833,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 804,
											"end": 833,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 804,
											"end": 833,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 804,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 804,
											"end": 833,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 804,
											"end": 833,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 804,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 804,
											"end": 833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 804,
											"end": 833,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 804,
											"end": 833,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 804,
											"end": 833,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 804,
											"end": 833,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 804,
											"end": 833,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 804,
											"end": 833,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 804,
											"end": 833,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 804,
											"end": 833,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 804,
											"end": 833,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 754,
											"end": 797,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 754,
											"end": 797,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 754,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 754,
											"end": 797,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 754,
											"end": 797,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 754,
											"end": 797,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 754,
											"end": 797,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 754,
											"end": 797,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 754,
											"end": 797,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 754,
											"end": 797,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 754,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 754,
											"end": 797,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 754,
											"end": 797,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 754,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 754,
											"end": 797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 754,
											"end": 797,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 754,
											"end": 797,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 754,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 754,
											"end": 797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 754,
											"end": 797,
											"name": "tag",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 754,
											"end": 797,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 754,
											"end": 797,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 754,
											"end": 797,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 754,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 754,
											"end": 797,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 754,
											"end": 797,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 754,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 754,
											"end": 797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 754,
											"end": 797,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 754,
											"end": 797,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 754,
											"end": 797,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 754,
											"end": 797,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 754,
											"end": 797,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 754,
											"end": 797,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 754,
											"end": 797,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 754,
											"end": 797,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 754,
											"end": 797,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 5147,
											"end": 5421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "tag",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 5147,
											"end": 5421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 5147,
											"end": 5421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "tag",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3281,
											"end": 3802,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3281,
											"end": 3802,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3281,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 3281,
											"end": 3802,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3281,
											"end": 3802,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3281,
											"end": 3802,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3281,
											"end": 3802,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3281,
											"end": 3802,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3281,
											"end": 3802,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3281,
											"end": 3802,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3281,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 3281,
											"end": 3802,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3281,
											"end": 3802,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3281,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 3281,
											"end": 3802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3281,
											"end": 3802,
											"name": "tag",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 3281,
											"end": 3802,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3281,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 3281,
											"end": 3802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3281,
											"end": 3802,
											"name": "tag",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 3281,
											"end": 3802,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3281,
											"end": 3802,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 3273,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 2923,
											"end": 3273,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 3273,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2923,
											"end": 3273,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2923,
											"end": 3273,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 3273,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 3273,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 3273,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 3273,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 3273,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 3273,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 2923,
											"end": 3273,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 3273,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 3273,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 2923,
											"end": 3273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 3273,
											"name": "tag",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 2923,
											"end": 3273,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 3273,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 2923,
											"end": 3273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 3273,
											"name": "tag",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2923,
											"end": 3273,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 3273,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 4406,
											"end": 4818,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 4406,
											"end": 4818,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4406,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 4406,
											"end": 4818,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4406,
											"end": 4818,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4406,
											"end": 4818,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4406,
											"end": 4818,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4406,
											"end": 4818,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4406,
											"end": 4818,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4406,
											"end": 4818,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4406,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 4406,
											"end": 4818,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4406,
											"end": 4818,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4406,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 4406,
											"end": 4818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4406,
											"end": 4818,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 4406,
											"end": 4818,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4406,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 4406,
											"end": 4818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4406,
											"end": 4818,
											"name": "tag",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 4406,
											"end": 4818,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4406,
											"end": 4818,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 4119,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "tag",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 4119,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 4119,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "tag",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 710,
											"end": 747,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 710,
											"end": 747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "tag",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 710,
											"end": 747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "tag",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP13",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP12",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP11",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP10",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 710,
											"end": 747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "tag",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1823,
											"end": 1830,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1851,
											"end": 1862,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 1851,
											"end": 1872,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1863,
											"end": 1871,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1851,
											"end": 1872,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1851,
											"end": 1872,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1851,
											"end": 1872,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1851,
											"end": 1872,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1851,
											"end": 1872,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1851,
											"end": 1872,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1851,
											"end": 1872,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1872,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1851,
											"end": 1872,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1851,
											"end": 1872,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1851,
											"end": 1872,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1851,
											"end": 1872,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1872,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1851,
											"end": 1872,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1851,
											"end": 1872,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1851,
											"end": 1872,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1851,
											"end": 1872,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1851,
											"end": 1872,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1851,
											"end": 1872,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1851,
											"end": 1872,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1851,
											"end": 1872,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1851,
											"end": 1872,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1851,
											"end": 1872,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1851,
											"end": 1872,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1851,
											"end": 1872,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1843,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 1843,
											"end": 1906,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1843,
											"end": 1906,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1906,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1843,
											"end": 1906,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1843,
											"end": 1906,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1843,
											"end": 1906,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1843,
											"end": 1906,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1843,
											"end": 1906,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1843,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 1843,
											"end": 1906,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1843,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 1843,
											"end": 1906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1843,
											"end": 1906,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 1843,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1843,
											"end": 1906,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1906,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1843,
											"end": 1906,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1843,
											"end": 1906,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1843,
											"end": 1906,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1843,
											"end": 1906,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1843,
											"end": 1906,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1843,
											"end": 1906,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 1843,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1950,
											"end": 1956,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1925,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 1935,
											"end": 1945,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1925,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 1925,
											"end": 1946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1925,
											"end": 1946,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 1925,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1925,
											"end": 1956,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1925,
											"end": 1956,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1917,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 1917,
											"end": 1979,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1917,
											"end": 1979,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1917,
											"end": 1979,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1917,
											"end": 1979,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1917,
											"end": 1979,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1917,
											"end": 1979,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1917,
											"end": 1979,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1917,
											"end": 1979,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1917,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 1917,
											"end": 1979,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1917,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 1917,
											"end": 1979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1917,
											"end": 1979,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 1917,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1917,
											"end": 1979,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1917,
											"end": 1979,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1917,
											"end": 1979,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1917,
											"end": 1979,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1917,
											"end": 1979,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1917,
											"end": 1979,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1917,
											"end": 1979,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1917,
											"end": 1979,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 1917,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2038,
											"end": 2044,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1998,
											"end": 2034,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2028,
											"end": 2032,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 1998,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 1998,
											"end": 2034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1998,
											"end": 2034,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 1998,
											"end": 2034,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1998,
											"end": 2044,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1998,
											"end": 2044,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 1990,
											"end": 2072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2072,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1990,
											"end": 2072,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2072,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1990,
											"end": 2072,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2072,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2072,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1990,
											"end": 2072,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 1990,
											"end": 2072,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 1990,
											"end": 2072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2072,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 1990,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2072,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1990,
											"end": 2072,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2072,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2072,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2072,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2072,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2072,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 1990,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2108,
											"end": 2110,
											"name": "PUSH",
											"source": 11,
											"value": "1E"
										},
										{
											"begin": 2085,
											"end": 2110,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2085,
											"end": 2110,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2121,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 2139,
											"end": 2149,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2159,
											"end": 2163,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2121,
											"end": 2138,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 2121,
											"end": 2173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2121,
											"end": 2173,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 2121,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2184,
											"end": 2202,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2205,
											"end": 2216,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 2205,
											"end": 2216,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2205,
											"end": 2218,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2205,
											"end": 2218,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2205,
											"end": 2218,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2205,
											"end": 2218,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2205,
											"end": 2218,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2205,
											"end": 2218,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2205,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 2205,
											"end": 2218,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2205,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 2205,
											"end": 2218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2205,
											"end": 2218,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 2205,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2205,
											"end": 2218,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2205,
											"end": 2218,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2205,
											"end": 2218,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2205,
											"end": 2218,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2184,
											"end": 2218,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2184,
											"end": 2218,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2229,
											"end": 2243,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2246,
											"end": 2256,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 2246,
											"end": 2256,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2246,
											"end": 2258,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2246,
											"end": 2258,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2246,
											"end": 2258,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2246,
											"end": 2258,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2246,
											"end": 2258,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2246,
											"end": 2258,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2246,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 2246,
											"end": 2258,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2246,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 2246,
											"end": 2258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2246,
											"end": 2258,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 2246,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2246,
											"end": 2258,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2246,
											"end": 2258,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2246,
											"end": 2258,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2246,
											"end": 2258,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2229,
											"end": 2258,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2229,
											"end": 2258,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2317,
											"end": 2325,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2348,
											"end": 2358,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2381,
											"end": 2387,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2418,
											"end": 2432,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2461,
											"end": 2473,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "PUSH",
											"source": 11,
											"value": "15180"
										},
										{
											"begin": 2516,
											"end": 2528,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2516,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 2516,
											"end": 2537,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2516,
											"end": 2537,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2516,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 2516,
											"end": 2537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2516,
											"end": 2537,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 2516,
											"end": 2537,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2497,
											"end": 2512,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 2497,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 2497,
											"end": 2538,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2497,
											"end": 2538,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2497,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 2497,
											"end": 2538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2497,
											"end": 2538,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 2497,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2561,
											"end": 2566,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2596,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2621,
											"end": 2626,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2653,
											"end": 2663,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2691,
											"end": 2696,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2718,
											"end": 2723,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2735,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2276,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2271,
											"end": 2284,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2277,
											"end": 2283,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2284,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2284,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2284,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2271,
											"end": 2284,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2284,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2284,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2284,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2284,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2271,
											"end": 2284,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2284,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2284,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 2271,
											"end": 2735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "tag",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2735,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "PUSH",
											"source": 11,
											"value": "65F30D94790E6E129604916065477A26EEBB0E2A87F79E6B05B21A0F662D947"
										},
										{
											"begin": 2764,
											"end": 2770,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2772,
											"end": 2780,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 2782,
											"end": 2792,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2794,
											"end": 2800,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2816,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 2818,
											"end": 2828,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2864,
											"end": 2870,
											"name": "PUSH",
											"source": 11,
											"value": "15180"
										},
										{
											"begin": 2849,
											"end": 2861,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 2849,
											"end": 2870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "tag",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2830,
											"end": 2845,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 2830,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 2830,
											"end": 2871,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2830,
											"end": 2871,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2830,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 2830,
											"end": 2871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2830,
											"end": 2871,
											"name": "tag",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 2830,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2873,
											"end": 2878,
											"name": "DUP13",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 2753,
											"end": 2879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "tag",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "LOG1",
											"source": 11
										},
										{
											"begin": 2897,
											"end": 2907,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2907,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2907,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2907,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2907,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2907,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 2915,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 2915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1564,
											"end": 1656,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 1564,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1622,
											"end": 1627,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1564,
											"end": 1656,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1564,
											"end": 1656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1428,
											"end": 1556,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 1428,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1491,
											"end": 1502,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 1491,
											"end": 1508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1507,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1491,
											"end": 1508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1491,
											"end": 1508,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1491,
											"end": 1508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1491,
											"end": 1508,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1491,
											"end": 1508,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1491,
											"end": 1508,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1491,
											"end": 1508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1491,
											"end": 1508,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1491,
											"end": 1508,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1491,
											"end": 1508,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1491,
											"end": 1508,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1491,
											"end": 1508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1491,
											"end": 1508,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1491,
											"end": 1508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1508,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1491,
											"end": 1508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1491,
											"end": 1515,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1491,
											"end": 1515,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1491,
											"end": 1515,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1491,
											"end": 1515,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1491,
											"end": 1515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1491,
											"end": 1515,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1491,
											"end": 1515,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1491,
											"end": 1515,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1491,
											"end": 1515,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1491,
											"end": 1515,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1491,
											"end": 1515,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1491,
											"end": 1515,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1491,
											"end": 1515,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1491,
											"end": 1515,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1491,
											"end": 1515,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1491,
											"end": 1515,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1491,
											"end": 1515,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1543,
											"end": 1547,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1531,
											"end": 1548,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "65C84EE842EAFC291D1272A6E3D10F8C454C4288E63F5DB3F7BE2B3012F321A9"
										},
										{
											"begin": 1531,
											"end": 1548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1531,
											"end": 1548,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1531,
											"end": 1548,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1548,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1548,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1548,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1548,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1548,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 1428,
											"end": 1556,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1428,
											"end": 1556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 327,
											"end": 357,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 327,
											"end": 357,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 327,
											"end": 357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4826,
											"end": 5139,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 4826,
											"end": 5139,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4884,
											"end": 4901,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4904,
											"end": 4909,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 4904,
											"end": 4917,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4916,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4917,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4917,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4917,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4904,
											"end": 4917,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4917,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4917,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4917,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4917,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4904,
											"end": 4917,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4917,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4904,
											"end": 4917,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4884,
											"end": 4917,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4884,
											"end": 4917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4954,
											"end": 4958,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4954,
											"end": 4966,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 4954,
											"end": 4966,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4954,
											"end": 4966,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4936,
											"end": 4951,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 4936,
											"end": 4966,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4928,
											"end": 5008,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 4928,
											"end": 5008,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4928,
											"end": 5008,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4928,
											"end": 5008,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4928,
											"end": 5008,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4928,
											"end": 5008,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4928,
											"end": 5008,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4928,
											"end": 5008,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4928,
											"end": 5008,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4928,
											"end": 5008,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 4928,
											"end": 5008,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4928,
											"end": 5008,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 4928,
											"end": 5008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4928,
											"end": 5008,
											"name": "tag",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 4928,
											"end": 5008,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4928,
											"end": 5008,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4928,
											"end": 5008,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4928,
											"end": 5008,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4928,
											"end": 5008,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4928,
											"end": 5008,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4928,
											"end": 5008,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4928,
											"end": 5008,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4928,
											"end": 5008,
											"name": "tag",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 4928,
											"end": 5008,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5028,
											"end": 5032,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5028,
											"end": 5039,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 5028,
											"end": 5039,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5028,
											"end": 5039,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5028,
											"end": 5039,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5028,
											"end": 5039,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5028,
											"end": 5039,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5028,
											"end": 5039,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5028,
											"end": 5039,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5028,
											"end": 5039,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5028,
											"end": 5039,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5028,
											"end": 5039,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 5028,
											"end": 5039,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5027,
											"end": 5039,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5019,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 5019,
											"end": 5063,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5019,
											"end": 5063,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5019,
											"end": 5063,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5019,
											"end": 5063,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5019,
											"end": 5063,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5019,
											"end": 5063,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5019,
											"end": 5063,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5019,
											"end": 5063,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5019,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 5019,
											"end": 5063,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5019,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 5019,
											"end": 5063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5019,
											"end": 5063,
											"name": "tag",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 5019,
											"end": 5063,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5019,
											"end": 5063,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5019,
											"end": 5063,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5019,
											"end": 5063,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5019,
											"end": 5063,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5019,
											"end": 5063,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5019,
											"end": 5063,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5019,
											"end": 5063,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5019,
											"end": 5063,
											"name": "tag",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 5019,
											"end": 5063,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5090,
											"end": 5094,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5074,
											"end": 5078,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5074,
											"end": 5087,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 5074,
											"end": 5087,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5074,
											"end": 5087,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 5074,
											"end": 5094,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5074,
											"end": 5094,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5074,
											"end": 5094,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5074,
											"end": 5094,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5074,
											"end": 5094,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5074,
											"end": 5094,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 5074,
											"end": 5094,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 5074,
											"end": 5094,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 5074,
											"end": 5094,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5074,
											"end": 5094,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5074,
											"end": 5094,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5074,
											"end": 5094,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5074,
											"end": 5094,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5074,
											"end": 5094,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 5074,
											"end": 5094,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 5074,
											"end": 5094,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5074,
											"end": 5094,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5074,
											"end": 5094,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5110,
											"end": 5131,
											"name": "PUSH",
											"source": 11,
											"value": "AB9F35A07ACA8965FEDE1A225FF17BD92F8D63AA4EB9A61ACE1E99495E2980D"
										},
										{
											"begin": 5124,
											"end": 5130,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5110,
											"end": 5131,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5110,
											"end": 5131,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5110,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 5110,
											"end": 5131,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5110,
											"end": 5131,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5110,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 5110,
											"end": 5131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5110,
											"end": 5131,
											"name": "tag",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 5110,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5110,
											"end": 5131,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5110,
											"end": 5131,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5110,
											"end": 5131,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5110,
											"end": 5131,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5110,
											"end": 5131,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5110,
											"end": 5131,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5110,
											"end": 5131,
											"name": "LOG1",
											"source": 11
										},
										{
											"begin": 4873,
											"end": 5139,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4826,
											"end": 5139,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4826,
											"end": 5139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 804,
											"end": 833,
											"name": "tag",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 804,
											"end": 833,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 804,
											"end": 833,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 804,
											"end": 833,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 804,
											"end": 833,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 804,
											"end": 833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 754,
											"end": 797,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 754,
											"end": 797,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 754,
											"end": 797,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 754,
											"end": 797,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 754,
											"end": 797,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 754,
											"end": 797,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 754,
											"end": 797,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 754,
											"end": 797,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 754,
											"end": 797,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 754,
											"end": 797,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 754,
											"end": 797,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 754,
											"end": 797,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 754,
											"end": 797,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 754,
											"end": 797,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 754,
											"end": 797,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 754,
											"end": 797,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 754,
											"end": 797,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 754,
											"end": 797,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 754,
											"end": 797,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 754,
											"end": 797,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 754,
											"end": 797,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 754,
											"end": 797,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 754,
											"end": 797,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 754,
											"end": 797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5208,
											"end": 5215,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5228,
											"end": 5245,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5248,
											"end": 5253,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 5248,
											"end": 5261,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5254,
											"end": 5260,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5248,
											"end": 5261,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5248,
											"end": 5261,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5248,
											"end": 5261,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5248,
											"end": 5261,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5248,
											"end": 5261,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5248,
											"end": 5261,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5248,
											"end": 5261,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5248,
											"end": 5261,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5248,
											"end": 5261,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5248,
											"end": 5261,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5248,
											"end": 5261,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5228,
											"end": 5261,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5228,
											"end": 5261,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5295,
											"end": 5299,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5295,
											"end": 5307,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 5295,
											"end": 5307,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5295,
											"end": 5307,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5276,
											"end": 5291,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 5276,
											"end": 5307,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5272,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 5272,
											"end": 5414,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5331,
											"end": 5332,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5324,
											"end": 5332,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5332,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5332,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5332,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 5324,
											"end": 5332,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5272,
											"end": 5414,
											"name": "tag",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 5272,
											"end": 5414,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5387,
											"end": 5402,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 5372,
											"end": 5376,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5372,
											"end": 5384,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 5372,
											"end": 5384,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5372,
											"end": 5384,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5372,
											"end": 5402,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 5372,
											"end": 5402,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5372,
											"end": 5402,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5372,
											"end": 5402,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 5372,
											"end": 5402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5372,
											"end": 5402,
											"name": "tag",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 5372,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5365,
											"end": 5402,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5365,
											"end": 5402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5365,
											"end": 5402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "tag",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5147,
											"end": 5421,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5147,
											"end": 5421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3281,
											"end": 3802,
											"name": "tag",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 3281,
											"end": 3802,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3336,
											"end": 3353,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3356,
											"end": 3361,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 3356,
											"end": 3369,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3362,
											"end": 3368,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3356,
											"end": 3369,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3356,
											"end": 3369,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3356,
											"end": 3369,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3356,
											"end": 3369,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3356,
											"end": 3369,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3356,
											"end": 3369,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3356,
											"end": 3369,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3356,
											"end": 3369,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3356,
											"end": 3369,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3356,
											"end": 3369,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3356,
											"end": 3369,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3336,
											"end": 3369,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3336,
											"end": 3369,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3402,
											"end": 3406,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3402,
											"end": 3415,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3402,
											"end": 3415,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3402,
											"end": 3415,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3402,
											"end": 3415,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3402,
											"end": 3415,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3402,
											"end": 3415,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3402,
											"end": 3415,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3402,
											"end": 3415,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3402,
											"end": 3415,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3402,
											"end": 3415,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3402,
											"end": 3415,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3402,
											"end": 3415,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3388,
											"end": 3415,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3388,
											"end": 3415,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3388,
											"end": 3398,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3388,
											"end": 3415,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3388,
											"end": 3415,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3388,
											"end": 3415,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 3380,
											"end": 3443,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3443,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3380,
											"end": 3443,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3443,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3380,
											"end": 3443,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3443,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3443,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3380,
											"end": 3443,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 3380,
											"end": 3443,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 3380,
											"end": 3443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3443,
											"name": "tag",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 3380,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3443,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3380,
											"end": 3443,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3443,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3443,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3443,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3443,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3443,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3443,
											"name": "tag",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 3380,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3466,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3475,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 3462,
											"end": 3475,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3475,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3462,
											"end": 3475,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3475,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3475,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3475,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3462,
											"end": 3475,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3475,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3475,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3475,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 3462,
											"end": 3475,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3454,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 3454,
											"end": 3507,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3454,
											"end": 3507,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3454,
											"end": 3507,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3454,
											"end": 3507,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3454,
											"end": 3507,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3454,
											"end": 3507,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3454,
											"end": 3507,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3454,
											"end": 3507,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3454,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 3454,
											"end": 3507,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3454,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 3454,
											"end": 3507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3454,
											"end": 3507,
											"name": "tag",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 3454,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3454,
											"end": 3507,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3454,
											"end": 3507,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3454,
											"end": 3507,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3454,
											"end": 3507,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3454,
											"end": 3507,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3454,
											"end": 3507,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3454,
											"end": 3507,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3454,
											"end": 3507,
											"name": "tag",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 3454,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3527,
											"end": 3531,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3527,
											"end": 3538,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 3527,
											"end": 3538,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3527,
											"end": 3538,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3538,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3527,
											"end": 3538,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3527,
											"end": 3538,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3527,
											"end": 3538,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3527,
											"end": 3538,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3527,
											"end": 3538,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3527,
											"end": 3538,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3527,
											"end": 3538,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 3527,
											"end": 3538,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3526,
											"end": 3538,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3518,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 3518,
											"end": 3562,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3518,
											"end": 3562,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3518,
											"end": 3562,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3518,
											"end": 3562,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3518,
											"end": 3562,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3518,
											"end": 3562,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3518,
											"end": 3562,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3518,
											"end": 3562,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3518,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 3518,
											"end": 3562,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3518,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 3518,
											"end": 3562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3518,
											"end": 3562,
											"name": "tag",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 3518,
											"end": 3562,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3518,
											"end": 3562,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3518,
											"end": 3562,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3518,
											"end": 3562,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3518,
											"end": 3562,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3518,
											"end": 3562,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3518,
											"end": 3562,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3518,
											"end": 3562,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3518,
											"end": 3562,
											"name": "tag",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 3518,
											"end": 3562,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3575,
											"end": 3594,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3611,
											"end": 3615,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3611,
											"end": 3630,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 3611,
											"end": 3630,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3611,
											"end": 3630,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3597,
											"end": 3601,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3597,
											"end": 3608,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 3597,
											"end": 3608,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3597,
											"end": 3608,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3597,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 3597,
											"end": 3630,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3597,
											"end": 3630,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3597,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 3597,
											"end": 3630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3597,
											"end": 3630,
											"name": "tag",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 3597,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3575,
											"end": 3630,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3575,
											"end": 3630,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3641,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 3659,
											"end": 3669,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3671,
											"end": 3675,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3671,
											"end": 3682,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3671,
											"end": 3682,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3671,
											"end": 3682,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3671,
											"end": 3682,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3671,
											"end": 3682,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3671,
											"end": 3682,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3671,
											"end": 3682,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3671,
											"end": 3682,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3671,
											"end": 3682,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3671,
											"end": 3682,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3671,
											"end": 3682,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3671,
											"end": 3682,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3684,
											"end": 3695,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3641,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 3641,
											"end": 3696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3641,
											"end": 3696,
											"name": "tag",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 3641,
											"end": 3696,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3721,
											"end": 3725,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3707,
											"end": 3711,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3707,
											"end": 3718,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 3707,
											"end": 3718,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3707,
											"end": 3718,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3707,
											"end": 3725,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3707,
											"end": 3725,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3707,
											"end": 3725,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3707,
											"end": 3725,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3707,
											"end": 3725,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3707,
											"end": 3725,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 3707,
											"end": 3725,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3707,
											"end": 3725,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3707,
											"end": 3725,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3707,
											"end": 3725,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3707,
											"end": 3725,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3707,
											"end": 3725,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3707,
											"end": 3725,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3707,
											"end": 3725,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3707,
											"end": 3725,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 3707,
											"end": 3725,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3707,
											"end": 3725,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3707,
											"end": 3725,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 3744,
											"end": 3748,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3744,
											"end": 3759,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 3744,
											"end": 3759,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3744,
											"end": 3759,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3736,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 3736,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "tag",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3776,
											"end": 3794,
											"name": "PUSH",
											"source": 11,
											"value": "9A7851747CD7FFB3FE0A32CAF3DA48B31F27CEBE131267051640F8B72FC47186"
										},
										{
											"begin": 3787,
											"end": 3793,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3776,
											"end": 3794,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3776,
											"end": 3794,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3776,
											"end": 3794,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 3776,
											"end": 3794,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3776,
											"end": 3794,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3776,
											"end": 3794,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 3776,
											"end": 3794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3776,
											"end": 3794,
											"name": "tag",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 3776,
											"end": 3794,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3776,
											"end": 3794,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3776,
											"end": 3794,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3776,
											"end": 3794,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3776,
											"end": 3794,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3776,
											"end": 3794,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3776,
											"end": 3794,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3776,
											"end": 3794,
											"name": "LOG1",
											"source": 11
										},
										{
											"begin": 3325,
											"end": 3802,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3325,
											"end": 3802,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3281,
											"end": 3802,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3281,
											"end": 3802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 3273,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 2923,
											"end": 3273,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2979,
											"end": 2996,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2999,
											"end": 3004,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2999,
											"end": 3012,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3005,
											"end": 3011,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2999,
											"end": 3012,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2999,
											"end": 3012,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2999,
											"end": 3012,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2999,
											"end": 3012,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2999,
											"end": 3012,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2999,
											"end": 3012,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2999,
											"end": 3012,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2999,
											"end": 3012,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2999,
											"end": 3012,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2999,
											"end": 3012,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2999,
											"end": 3012,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2979,
											"end": 3012,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2979,
											"end": 3012,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3045,
											"end": 3049,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3045,
											"end": 3058,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3045,
											"end": 3058,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3045,
											"end": 3058,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3045,
											"end": 3058,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3045,
											"end": 3058,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3045,
											"end": 3058,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3045,
											"end": 3058,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3045,
											"end": 3058,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3045,
											"end": 3058,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3045,
											"end": 3058,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3045,
											"end": 3058,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3045,
											"end": 3058,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3031,
											"end": 3058,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3031,
											"end": 3058,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3031,
											"end": 3041,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3031,
											"end": 3058,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3031,
											"end": 3058,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3031,
											"end": 3058,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3023,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 3023,
											"end": 3087,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3023,
											"end": 3087,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3023,
											"end": 3087,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3023,
											"end": 3087,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3023,
											"end": 3087,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3023,
											"end": 3087,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3023,
											"end": 3087,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3023,
											"end": 3087,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3023,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 3023,
											"end": 3087,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3023,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 3023,
											"end": 3087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3023,
											"end": 3087,
											"name": "tag",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 3023,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3023,
											"end": 3087,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3023,
											"end": 3087,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3023,
											"end": 3087,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3023,
											"end": 3087,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3023,
											"end": 3087,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3023,
											"end": 3087,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3023,
											"end": 3087,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3023,
											"end": 3087,
											"name": "tag",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 3023,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3111,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3120,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 3107,
											"end": 3120,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3120,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3107,
											"end": 3120,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3120,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3120,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3120,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3107,
											"end": 3120,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3120,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3120,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3107,
											"end": 3120,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 3107,
											"end": 3120,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3106,
											"end": 3120,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3098,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 3098,
											"end": 3146,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3098,
											"end": 3146,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3098,
											"end": 3146,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3098,
											"end": 3146,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3098,
											"end": 3146,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3098,
											"end": 3146,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3098,
											"end": 3146,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3098,
											"end": 3146,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3098,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 3098,
											"end": 3146,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3098,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 3098,
											"end": 3146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3098,
											"end": 3146,
											"name": "tag",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 3098,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3098,
											"end": 3146,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3098,
											"end": 3146,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3098,
											"end": 3146,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3098,
											"end": 3146,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3098,
											"end": 3146,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3098,
											"end": 3146,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3098,
											"end": 3146,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3098,
											"end": 3146,
											"name": "tag",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 3098,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3173,
											"end": 3177,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3157,
											"end": 3161,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3157,
											"end": 3170,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 3157,
											"end": 3170,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3157,
											"end": 3170,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3157,
											"end": 3177,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3157,
											"end": 3177,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3157,
											"end": 3177,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3157,
											"end": 3177,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3157,
											"end": 3177,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3157,
											"end": 3177,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 3157,
											"end": 3177,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3157,
											"end": 3177,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3157,
											"end": 3177,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3157,
											"end": 3177,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3157,
											"end": 3177,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3157,
											"end": 3177,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3157,
											"end": 3177,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3157,
											"end": 3177,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3157,
											"end": 3177,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 3157,
											"end": 3177,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3157,
											"end": 3177,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3157,
											"end": 3177,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3188,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3202,
											"end": 3215,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3202,
											"end": 3215,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3202,
											"end": 3215,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3202,
											"end": 3215,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3202,
											"end": 3215,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3202,
											"end": 3215,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3202,
											"end": 3215,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3202,
											"end": 3215,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3202,
											"end": 3215,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3202,
											"end": 3215,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3202,
											"end": 3215,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3202,
											"end": 3215,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3217,
											"end": 3221,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3217,
											"end": 3228,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 3217,
											"end": 3228,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3217,
											"end": 3228,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3188,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 3188,
											"end": 3229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3188,
											"end": 3229,
											"name": "tag",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 3188,
											"end": 3229,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3245,
											"end": 3265,
											"name": "PUSH",
											"source": 11,
											"value": "8313F00F3154C2E8509A2EE261C618804A495403D3AC94FE5FB833AF9D13CB27"
										},
										{
											"begin": 3258,
											"end": 3264,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3245,
											"end": 3265,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3245,
											"end": 3265,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3245,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 3245,
											"end": 3265,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3245,
											"end": 3265,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3245,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 3245,
											"end": 3265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3245,
											"end": 3265,
											"name": "tag",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 3245,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3245,
											"end": 3265,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3245,
											"end": 3265,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3245,
											"end": 3265,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3245,
											"end": 3265,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3245,
											"end": 3265,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3245,
											"end": 3265,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3245,
											"end": 3265,
											"name": "LOG1",
											"source": 11
										},
										{
											"begin": 2968,
											"end": 3273,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 3273,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 3273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4406,
											"end": 4818,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 4406,
											"end": 4818,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4462,
											"end": 4479,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4482,
											"end": 4487,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 4482,
											"end": 4495,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4488,
											"end": 4494,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4482,
											"end": 4495,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4482,
											"end": 4495,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4482,
											"end": 4495,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4482,
											"end": 4495,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4482,
											"end": 4495,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4482,
											"end": 4495,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4482,
											"end": 4495,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4482,
											"end": 4495,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4482,
											"end": 4495,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4482,
											"end": 4495,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4482,
											"end": 4495,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4462,
											"end": 4495,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4462,
											"end": 4495,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4528,
											"end": 4532,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4528,
											"end": 4539,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4528,
											"end": 4539,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4528,
											"end": 4539,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4539,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4528,
											"end": 4539,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4528,
											"end": 4539,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4528,
											"end": 4539,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4528,
											"end": 4539,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4528,
											"end": 4539,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4528,
											"end": 4539,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4528,
											"end": 4539,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4528,
											"end": 4539,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4514,
											"end": 4539,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4514,
											"end": 4539,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4514,
											"end": 4524,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4514,
											"end": 4539,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4514,
											"end": 4539,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4514,
											"end": 4539,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 4506,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 4506,
											"end": 4566,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4506,
											"end": 4566,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4506,
											"end": 4566,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4506,
											"end": 4566,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4506,
											"end": 4566,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4506,
											"end": 4566,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4506,
											"end": 4566,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4506,
											"end": 4566,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4506,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 4506,
											"end": 4566,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4506,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 4506,
											"end": 4566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4506,
											"end": 4566,
											"name": "tag",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 4506,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4506,
											"end": 4566,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4506,
											"end": 4566,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4506,
											"end": 4566,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4506,
											"end": 4566,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4506,
											"end": 4566,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4506,
											"end": 4566,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4506,
											"end": 4566,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4506,
											"end": 4566,
											"name": "tag",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 4506,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4586,
											"end": 4590,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4586,
											"end": 4599,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 4586,
											"end": 4599,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4586,
											"end": 4599,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 4586,
											"end": 4599,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4586,
											"end": 4599,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4586,
											"end": 4599,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4586,
											"end": 4599,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4586,
											"end": 4599,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4586,
											"end": 4599,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4586,
											"end": 4599,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4586,
											"end": 4599,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4586,
											"end": 4599,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4585,
											"end": 4599,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4577,
											"end": 4626,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 4577,
											"end": 4626,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4577,
											"end": 4626,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4577,
											"end": 4626,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4577,
											"end": 4626,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4577,
											"end": 4626,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4577,
											"end": 4626,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4577,
											"end": 4626,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4577,
											"end": 4626,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4577,
											"end": 4626,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 4577,
											"end": 4626,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4577,
											"end": 4626,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 4577,
											"end": 4626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4577,
											"end": 4626,
											"name": "tag",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 4577,
											"end": 4626,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4577,
											"end": 4626,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4577,
											"end": 4626,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4577,
											"end": 4626,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4577,
											"end": 4626,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4577,
											"end": 4626,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4577,
											"end": 4626,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4577,
											"end": 4626,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4577,
											"end": 4626,
											"name": "tag",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 4577,
											"end": 4626,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4646,
											"end": 4650,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4646,
											"end": 4659,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 4646,
											"end": 4659,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4646,
											"end": 4659,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4646,
											"end": 4659,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4646,
											"end": 4659,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4646,
											"end": 4659,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4646,
											"end": 4659,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4646,
											"end": 4659,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4646,
											"end": 4659,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4646,
											"end": 4659,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4646,
											"end": 4659,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4646,
											"end": 4659,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4645,
											"end": 4659,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4637,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 4637,
											"end": 4694,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4637,
											"end": 4694,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4637,
											"end": 4694,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4637,
											"end": 4694,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4637,
											"end": 4694,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4637,
											"end": 4694,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4637,
											"end": 4694,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4637,
											"end": 4694,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4637,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 4637,
											"end": 4694,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4637,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 4637,
											"end": 4694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4637,
											"end": 4694,
											"name": "tag",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 4637,
											"end": 4694,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4637,
											"end": 4694,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4637,
											"end": 4694,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4637,
											"end": 4694,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4637,
											"end": 4694,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4637,
											"end": 4694,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4637,
											"end": 4694,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4637,
											"end": 4694,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4637,
											"end": 4694,
											"name": "tag",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 4637,
											"end": 4694,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4705,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 4719,
											"end": 4729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4731,
											"end": 4735,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4731,
											"end": 4742,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 4731,
											"end": 4742,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4731,
											"end": 4742,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4705,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 4705,
											"end": 4743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4705,
											"end": 4743,
											"name": "tag",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 4705,
											"end": 4743,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4770,
											"end": 4774,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4754,
											"end": 4758,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4754,
											"end": 4767,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 4754,
											"end": 4767,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4754,
											"end": 4767,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 4754,
											"end": 4774,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4754,
											"end": 4774,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4754,
											"end": 4774,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4754,
											"end": 4774,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4754,
											"end": 4774,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4754,
											"end": 4774,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4754,
											"end": 4774,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4754,
											"end": 4774,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 4754,
											"end": 4774,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4754,
											"end": 4774,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4754,
											"end": 4774,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4754,
											"end": 4774,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4754,
											"end": 4774,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4754,
											"end": 4774,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4754,
											"end": 4774,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 4754,
											"end": 4774,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4754,
											"end": 4774,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4754,
											"end": 4774,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4790,
											"end": 4810,
											"name": "PUSH",
											"source": 11,
											"value": "DB3578C2B080F19424234C3A83E34455B4B06E90BF24B62F4E13A9ED82FBF0ED"
										},
										{
											"begin": 4803,
											"end": 4809,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4790,
											"end": 4810,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4790,
											"end": 4810,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4790,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 4790,
											"end": 4810,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4790,
											"end": 4810,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4790,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 4790,
											"end": 4810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4790,
											"end": 4810,
											"name": "tag",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 4790,
											"end": 4810,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4790,
											"end": 4810,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4790,
											"end": 4810,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4790,
											"end": 4810,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4790,
											"end": 4810,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4790,
											"end": 4810,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4790,
											"end": 4810,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4790,
											"end": 4810,
											"name": "LOG1",
											"source": 11
										},
										{
											"begin": 4451,
											"end": 4818,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4406,
											"end": 4818,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4406,
											"end": 4818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4183,
											"end": 4187,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4205,
											"end": 4214,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4217,
											"end": 4218,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4205,
											"end": 4218,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4205,
											"end": 4218,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4200,
											"end": 4368,
											"name": "tag",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 4200,
											"end": 4368,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4224,
											"end": 4234,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 4224,
											"end": 4234,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4220,
											"end": 4221,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4220,
											"end": 4234,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4200,
											"end": 4368,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4200,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 4200,
											"end": 4368,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4283,
											"end": 4293,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4265,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 4260,
											"end": 4268,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4266,
											"end": 4267,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4268,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4268,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4268,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4260,
											"end": 4268,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4268,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4268,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4268,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4268,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4260,
											"end": 4268,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4268,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4260,
											"end": 4268,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4279,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 4260,
											"end": 4279,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4279,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4293,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4256,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 4256,
											"end": 4357,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4321,
											"end": 4326,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 4321,
											"end": 4329,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4327,
											"end": 4328,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4321,
											"end": 4329,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4321,
											"end": 4329,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4321,
											"end": 4329,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4321,
											"end": 4329,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4321,
											"end": 4329,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4321,
											"end": 4329,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4321,
											"end": 4329,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4321,
											"end": 4329,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4321,
											"end": 4329,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4321,
											"end": 4329,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4321,
											"end": 4329,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4321,
											"end": 4341,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 4321,
											"end": 4341,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4321,
											"end": 4341,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4321,
											"end": 4341,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4321,
											"end": 4341,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4321,
											"end": 4341,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4321,
											"end": 4341,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4321,
											"end": 4341,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4321,
											"end": 4341,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4321,
											"end": 4341,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4321,
											"end": 4341,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4321,
											"end": 4341,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4314,
											"end": 4341,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4314,
											"end": 4341,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4314,
											"end": 4341,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4314,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 4314,
											"end": 4341,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4256,
											"end": 4357,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 4256,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4236,
											"end": 4239,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4236,
											"end": 4239,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4236,
											"end": 4239,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4236,
											"end": 4239,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4236,
											"end": 4239,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4236,
											"end": 4239,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4236,
											"end": 4239,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4200,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 4200,
											"end": 4368,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4200,
											"end": 4368,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 4200,
											"end": 4368,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4200,
											"end": 4368,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4385,
											"end": 4390,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4390,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4378,
											"end": 4390,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "tag",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4398,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 710,
											"end": 747,
											"name": "tag",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 710,
											"end": 747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 710,
											"end": 747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "tag",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "tag",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "tag",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "tag",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 710,
											"end": 747,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"name": "DUP13",
											"source": 11
										},
										{
											"begin": 710,
											"end": 747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5429,
											"end": 5581,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 5429,
											"end": 5581,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5518,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 5556,
											"end": 5560,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5562,
											"end": 5564,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5566,
											"end": 5572,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5532,
											"end": 5536,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 5518,
											"end": 5555,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5518,
											"end": 5555,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5518,
											"end": 5555,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 5518,
											"end": 5555,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5518,
											"end": 5573,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5518,
											"end": 5573,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5518,
											"end": 5573,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5518,
											"end": 5573,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5518,
											"end": 5573,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5518,
											"end": 5573,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5518,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5518,
											"end": 5573,
											"name": "tag",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 5518,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5429,
											"end": 5581,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5429,
											"end": 5581,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5429,
											"end": 5581,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5429,
											"end": 5581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10599,
											"end": 10616,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10723,
											"end": 10739,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10741,
											"end": 10746,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 5,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 10687,
											"end": 10747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 5,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 5,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 4111,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 3810,
											"end": 4111,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3872,
											"end": 3881,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3884,
											"end": 3885,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3872,
											"end": 3885,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3872,
											"end": 3885,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3867,
											"end": 4104,
											"name": "tag",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 3867,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3891,
											"end": 3901,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 3891,
											"end": 3901,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3887,
											"end": 3888,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3887,
											"end": 3901,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3867,
											"end": 4104,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3867,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 3867,
											"end": 4104,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3950,
											"end": 3960,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3927,
											"end": 3932,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 3927,
											"end": 3935,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3934,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3927,
											"end": 3935,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3927,
											"end": 3935,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3927,
											"end": 3935,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3927,
											"end": 3935,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3927,
											"end": 3935,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3927,
											"end": 3935,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3927,
											"end": 3935,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3927,
											"end": 3935,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3927,
											"end": 3935,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3927,
											"end": 3935,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3927,
											"end": 3935,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3927,
											"end": 3946,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 3927,
											"end": 3946,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3927,
											"end": 3946,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3927,
											"end": 3960,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3923,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 3923,
											"end": 4093,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4004,
											"end": 4008,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3981,
											"end": 3986,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 3981,
											"end": 3989,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3987,
											"end": 3988,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3981,
											"end": 3989,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3981,
											"end": 3989,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3981,
											"end": 3989,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3981,
											"end": 3989,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3981,
											"end": 3989,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3981,
											"end": 3989,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3981,
											"end": 3989,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3981,
											"end": 3989,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3981,
											"end": 3989,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3981,
											"end": 3989,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3981,
											"end": 3989,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3981,
											"end": 4001,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 3981,
											"end": 4001,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3981,
											"end": 4001,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3981,
											"end": 4008,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3981,
											"end": 4008,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3981,
											"end": 4008,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3981,
											"end": 4008,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3981,
											"end": 4008,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3981,
											"end": 4008,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 3981,
											"end": 4008,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3981,
											"end": 4008,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3981,
											"end": 4008,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3981,
											"end": 4008,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3981,
											"end": 4008,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3981,
											"end": 4008,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3981,
											"end": 4008,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3981,
											"end": 4008,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3981,
											"end": 4008,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 3981,
											"end": 4008,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3981,
											"end": 4008,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3981,
											"end": 4008,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4032,
											"end": 4053,
											"name": "PUSH",
											"source": 11,
											"value": "3C176691CA154A2F6FE978A2A633A33EE77DBE2902E67A75400720845A4B2CE1"
										},
										{
											"begin": 4042,
											"end": 4052,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4032,
											"end": 4053,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4032,
											"end": 4053,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4032,
											"end": 4053,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 4032,
											"end": 4053,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4032,
											"end": 4053,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4032,
											"end": 4053,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 4032,
											"end": 4053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4032,
											"end": 4053,
											"name": "tag",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 4032,
											"end": 4053,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4032,
											"end": 4053,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4032,
											"end": 4053,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4032,
											"end": 4053,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4032,
											"end": 4053,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4032,
											"end": 4053,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4032,
											"end": 4053,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4032,
											"end": 4053,
											"name": "LOG1",
											"source": 11
										},
										{
											"begin": 4072,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 4072,
											"end": 4077,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3923,
											"end": 4093,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 3923,
											"end": 4093,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3903,
											"end": 3906,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3903,
											"end": 3906,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3903,
											"end": 3906,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3903,
											"end": 3906,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3903,
											"end": 3906,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3903,
											"end": 3906,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3903,
											"end": 3906,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3867,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 3867,
											"end": 4104,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3867,
											"end": 4104,
											"name": "tag",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 3867,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3867,
											"end": 4104,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3810,
											"end": 4111,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3810,
											"end": 4111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5589,
											"end": 5713,
											"name": "tag",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 5589,
											"end": 5713,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5660,
											"end": 5705,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 5694,
											"end": 5696,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5698,
											"end": 5704,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5678,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 5660,
											"end": 5693,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5660,
											"end": 5693,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5660,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 5660,
											"end": 5693,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5660,
											"end": 5705,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5660,
											"end": 5705,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5660,
											"end": 5705,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5660,
											"end": 5705,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5660,
											"end": 5705,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5660,
											"end": 5705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5660,
											"end": 5705,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 5660,
											"end": 5705,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5589,
											"end": 5713,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5589,
											"end": 5713,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5589,
											"end": 5713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 5,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 5,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 5,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7766,
											"end": 7784,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7794,
											"end": 7813,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7932,
											"end": 7936,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7929,
											"end": 7930,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7922,
											"end": 7926,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7916,
											"end": 7927,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7909,
											"end": 7913,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7903,
											"end": 7907,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7889,
											"end": 7894,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7882,
											"end": 7887,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 7877,
											"end": 7937,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 7989,
											"end": 7996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8033,
											"end": 8037,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8027,
											"end": 8038,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8078,
											"end": 8094,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8075,
											"end": 8076,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8070,
											"end": 8073,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 8124,
											"end": 8140,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8119,
											"end": 8122,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8182,
											"end": 8198,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8232,
											"end": 8233,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8226,
											"end": 8234,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7848,
											"end": 8244,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8272,
											"end": 8273,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8258,
											"end": 8268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8258,
											"end": 8273,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8325,
											"end": 8326,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8310,
											"end": 8321,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8306,
											"end": 8307,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8284,
											"end": 8289,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8382,
											"end": 8387,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 8,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 8349,
											"end": 8389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7756,
											"end": 8406,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7756,
											"end": 8406,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7686,
											"end": 8406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 12
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "tag",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1275,
											"end": 1281,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1310,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1242,
											"end": 1317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "tag",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1555,
											"end": 1556,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3691,
											"end": 3808,
											"name": "tag",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 3691,
											"end": 3808,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3800,
											"end": 3801,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3797,
											"end": 3798,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3790,
											"end": 3802,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3814,
											"end": 3931,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 3814,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3920,
											"end": 3921,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3937,
											"end": 4117,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 3937,
											"end": 4117,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3985,
											"end": 4062,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3982,
											"end": 3983,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3975,
											"end": 4063,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4082,
											"end": 4086,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 4079,
											"end": 4080,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4072,
											"end": 4087,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4106,
											"end": 4110,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4103,
											"end": 4104,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4096,
											"end": 4111,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4123,
											"end": 4404,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 4123,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4206,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 4228,
											"end": 4232,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4206,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 4206,
											"end": 4233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4206,
											"end": 4233,
											"name": "tag",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 4206,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4198,
											"end": 4204,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4194,
											"end": 4234,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4336,
											"end": 4342,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4324,
											"end": 4334,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4321,
											"end": 4343,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4288,
											"end": 4298,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4285,
											"end": 4319,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4282,
											"end": 4344,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 4279,
											"end": 4367,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4279,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 4279,
											"end": 4367,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4347,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 4347,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 4347,
											"end": 4365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4347,
											"end": 4365,
											"name": "tag",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 4347,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4279,
											"end": 4367,
											"name": "tag",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 4279,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4387,
											"end": 4397,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4383,
											"end": 4385,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4376,
											"end": 4398,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4166,
											"end": 4404,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4123,
											"end": 4404,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4123,
											"end": 4404,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4123,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4539,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 4410,
											"end": 4539,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4444,
											"end": 4450,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4471,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 4471,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 4471,
											"end": 4491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4471,
											"end": 4491,
											"name": "tag",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 4471,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4461,
											"end": 4491,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4461,
											"end": 4491,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4500,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 4528,
											"end": 4532,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4520,
											"end": 4526,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4500,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 4500,
											"end": 4533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4500,
											"end": 4533,
											"name": "tag",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 4500,
											"end": 4533,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4539,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4539,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4539,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4545,
											"end": 4853,
											"name": "tag",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 4545,
											"end": 4853,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4607,
											"end": 4611,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4697,
											"end": 4715,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4689,
											"end": 4695,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4686,
											"end": 4716,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4719,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 4719,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 4719,
											"end": 4737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4719,
											"end": 4737,
											"name": "tag",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 4719,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "tag",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4757,
											"end": 4786,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 4779,
											"end": 4785,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4757,
											"end": 4786,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 4757,
											"end": 4786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4757,
											"end": 4786,
											"name": "tag",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 4757,
											"end": 4786,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4749,
											"end": 4786,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4749,
											"end": 4786,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4841,
											"end": 4845,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4835,
											"end": 4839,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4831,
											"end": 4846,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4823,
											"end": 4846,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4823,
											"end": 4846,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4545,
											"end": 4853,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4545,
											"end": 4853,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4545,
											"end": 4853,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4545,
											"end": 4853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4859,
											"end": 5007,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 4859,
											"end": 5007,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4957,
											"end": 4963,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4952,
											"end": 4955,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4947,
											"end": 4950,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4934,
											"end": 4964,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 4998,
											"end": 4999,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4989,
											"end": 4995,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4984,
											"end": 4987,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4980,
											"end": 4996,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4973,
											"end": 5000,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4859,
											"end": 5007,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4859,
											"end": 5007,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4859,
											"end": 5007,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4859,
											"end": 5007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5013,
											"end": 5438,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 5013,
											"end": 5438,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5091,
											"end": 5096,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5116,
											"end": 5182,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 5132,
											"end": 5181,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 5174,
											"end": 5180,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5132,
											"end": 5181,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 5132,
											"end": 5181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5132,
											"end": 5181,
											"name": "tag",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 5132,
											"end": 5181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5116,
											"end": 5182,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 5116,
											"end": 5182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5116,
											"end": 5182,
											"name": "tag",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 5116,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5107,
											"end": 5182,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5107,
											"end": 5182,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5205,
											"end": 5211,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5198,
											"end": 5203,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5191,
											"end": 5212,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5243,
											"end": 5247,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5236,
											"end": 5241,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5232,
											"end": 5248,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5281,
											"end": 5284,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5272,
											"end": 5278,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5267,
											"end": 5270,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5263,
											"end": 5279,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5260,
											"end": 5285,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5257,
											"end": 5369,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5257,
											"end": 5369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 5257,
											"end": 5369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5288,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 5288,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 5288,
											"end": 5367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5288,
											"end": 5367,
											"name": "tag",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 5288,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5257,
											"end": 5369,
											"name": "tag",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 5257,
											"end": 5369,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5378,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 5425,
											"end": 5431,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5420,
											"end": 5423,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5415,
											"end": 5418,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5378,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 5378,
											"end": 5432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5378,
											"end": 5432,
											"name": "tag",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 5378,
											"end": 5432,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5097,
											"end": 5438,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5013,
											"end": 5438,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5013,
											"end": 5438,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5013,
											"end": 5438,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5013,
											"end": 5438,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5013,
											"end": 5438,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5013,
											"end": 5438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5458,
											"end": 5798,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 5458,
											"end": 5798,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5514,
											"end": 5519,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5563,
											"end": 5566,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5556,
											"end": 5560,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 5548,
											"end": 5554,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5544,
											"end": 5561,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5540,
											"end": 5567,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5530,
											"end": 5652,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 5530,
											"end": 5652,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5571,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 5571,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 5571,
											"end": 5650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5571,
											"end": 5650,
											"name": "tag",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 5571,
											"end": 5650,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5530,
											"end": 5652,
											"name": "tag",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 5530,
											"end": 5652,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5688,
											"end": 5694,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5675,
											"end": 5695,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5713,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 5788,
											"end": 5791,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5780,
											"end": 5786,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5773,
											"end": 5777,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5765,
											"end": 5771,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5761,
											"end": 5778,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5713,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 5713,
											"end": 5792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5713,
											"end": 5792,
											"name": "tag",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 5713,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5704,
											"end": 5792,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5704,
											"end": 5792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5520,
											"end": 5798,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5458,
											"end": 5798,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5458,
											"end": 5798,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5458,
											"end": 5798,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5458,
											"end": 5798,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5458,
											"end": 5798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5804,
											"end": 6749,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 5804,
											"end": 6749,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5900,
											"end": 5906,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5908,
											"end": 5914,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5916,
											"end": 5922,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5924,
											"end": 5930,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5973,
											"end": 5976,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 5961,
											"end": 5970,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5952,
											"end": 5959,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5948,
											"end": 5971,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5944,
											"end": 5977,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5941,
											"end": 6061,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5941,
											"end": 6061,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 5941,
											"end": 6061,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5980,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 5980,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 5980,
											"end": 6059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5980,
											"end": 6059,
											"name": "tag",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 5980,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5941,
											"end": 6061,
											"name": "tag",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 5941,
											"end": 6061,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6100,
											"end": 6101,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6125,
											"end": 6178,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 6170,
											"end": 6177,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6161,
											"end": 6167,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6150,
											"end": 6159,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6146,
											"end": 6168,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6125,
											"end": 6178,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 6125,
											"end": 6178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6125,
											"end": 6178,
											"name": "tag",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 6125,
											"end": 6178,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6115,
											"end": 6178,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6115,
											"end": 6178,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6071,
											"end": 6188,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6227,
											"end": 6229,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6253,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 6298,
											"end": 6305,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6289,
											"end": 6295,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6278,
											"end": 6287,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6274,
											"end": 6296,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6253,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 6253,
											"end": 6306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6253,
											"end": 6306,
											"name": "tag",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 6253,
											"end": 6306,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6243,
											"end": 6306,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6243,
											"end": 6306,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6198,
											"end": 6316,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6355,
											"end": 6357,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6381,
											"end": 6434,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 6426,
											"end": 6433,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6417,
											"end": 6423,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6406,
											"end": 6415,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6402,
											"end": 6424,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6381,
											"end": 6434,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 6381,
											"end": 6434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6381,
											"end": 6434,
											"name": "tag",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 6381,
											"end": 6434,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6371,
											"end": 6434,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6371,
											"end": 6434,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6326,
											"end": 6444,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6511,
											"end": 6513,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 6500,
											"end": 6509,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6496,
											"end": 6514,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6483,
											"end": 6515,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6542,
											"end": 6560,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6534,
											"end": 6540,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6531,
											"end": 6561,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6528,
											"end": 6645,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6528,
											"end": 6645,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 6528,
											"end": 6645,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6564,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 6564,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 6564,
											"end": 6643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6564,
											"end": 6643,
											"name": "tag",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 6564,
											"end": 6643,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6528,
											"end": 6645,
											"name": "tag",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 6528,
											"end": 6645,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6669,
											"end": 6732,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 6724,
											"end": 6731,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6715,
											"end": 6721,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6704,
											"end": 6713,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6700,
											"end": 6722,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6669,
											"end": 6732,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 6669,
											"end": 6732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6669,
											"end": 6732,
											"name": "tag",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 6669,
											"end": 6732,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6659,
											"end": 6732,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6659,
											"end": 6732,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6454,
											"end": 6742,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5804,
											"end": 6749,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5804,
											"end": 6749,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 5804,
											"end": 6749,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5804,
											"end": 6749,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 5804,
											"end": 6749,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5804,
											"end": 6749,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5804,
											"end": 6749,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5804,
											"end": 6749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6755,
											"end": 7374,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 6755,
											"end": 7374,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6832,
											"end": 6838,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6840,
											"end": 6846,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6848,
											"end": 6854,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6897,
											"end": 6899,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 6885,
											"end": 6894,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6876,
											"end": 6883,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6872,
											"end": 6895,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6868,
											"end": 6900,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6865,
											"end": 6984,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6865,
											"end": 6984,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 6865,
											"end": 6984,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6903,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 6903,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 6903,
											"end": 6982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6903,
											"end": 6982,
											"name": "tag",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 6903,
											"end": 6982,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6865,
											"end": 6984,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 6865,
											"end": 6984,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7023,
											"end": 7024,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7048,
											"end": 7101,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 7093,
											"end": 7100,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7084,
											"end": 7090,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7073,
											"end": 7082,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 7069,
											"end": 7091,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7048,
											"end": 7101,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 7048,
											"end": 7101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7048,
											"end": 7101,
											"name": "tag",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 7048,
											"end": 7101,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7038,
											"end": 7101,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7038,
											"end": 7101,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6994,
											"end": 7111,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7150,
											"end": 7152,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7176,
											"end": 7229,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 7221,
											"end": 7228,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7212,
											"end": 7218,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7201,
											"end": 7210,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 7197,
											"end": 7219,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7176,
											"end": 7229,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 7176,
											"end": 7229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7176,
											"end": 7229,
											"name": "tag",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 7176,
											"end": 7229,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7166,
											"end": 7229,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7166,
											"end": 7229,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7121,
											"end": 7239,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7278,
											"end": 7280,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7304,
											"end": 7357,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 7349,
											"end": 7356,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7340,
											"end": 7346,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7329,
											"end": 7338,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 7325,
											"end": 7347,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7304,
											"end": 7357,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 7304,
											"end": 7357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7304,
											"end": 7357,
											"name": "tag",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 7304,
											"end": 7357,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7294,
											"end": 7357,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7294,
											"end": 7357,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7249,
											"end": 7367,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6755,
											"end": 7374,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6755,
											"end": 7374,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6755,
											"end": 7374,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6755,
											"end": 7374,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6755,
											"end": 7374,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6755,
											"end": 7374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7380,
											"end": 7466,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 7380,
											"end": 7466,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7415,
											"end": 7422,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7455,
											"end": 7459,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 7448,
											"end": 7453,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7444,
											"end": 7460,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7433,
											"end": 7460,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7433,
											"end": 7460,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7380,
											"end": 7466,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7380,
											"end": 7466,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7380,
											"end": 7466,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7380,
											"end": 7466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7472,
											"end": 7584,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 7472,
											"end": 7584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7555,
											"end": 7577,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 7571,
											"end": 7576,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7555,
											"end": 7577,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 7555,
											"end": 7577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7555,
											"end": 7577,
											"name": "tag",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 7555,
											"end": 7577,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7550,
											"end": 7553,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7543,
											"end": 7578,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7472,
											"end": 7584,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7472,
											"end": 7584,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7472,
											"end": 7584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7590,
											"end": 7804,
											"name": "tag",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 7590,
											"end": 7804,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7679,
											"end": 7683,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7719,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7706,
											"end": 7715,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7702,
											"end": 7720,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7694,
											"end": 7720,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7694,
											"end": 7720,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7730,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 7794,
											"end": 7795,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7783,
											"end": 7792,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7779,
											"end": 7796,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7770,
											"end": 7776,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7730,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 7730,
											"end": 7797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7730,
											"end": 7797,
											"name": "tag",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 7730,
											"end": 7797,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7590,
											"end": 7804,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7590,
											"end": 7804,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7590,
											"end": 7804,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7590,
											"end": 7804,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7590,
											"end": 7804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7810,
											"end": 8139,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 7810,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7869,
											"end": 7875,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7918,
											"end": 7920,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7906,
											"end": 7915,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7897,
											"end": 7904,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7893,
											"end": 7916,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7889,
											"end": 7921,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7886,
											"end": 8005,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7886,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 7886,
											"end": 8005,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7924,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 7924,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 7924,
											"end": 8003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7924,
											"end": 8003,
											"name": "tag",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 7924,
											"end": 8003,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7886,
											"end": 8005,
											"name": "tag",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 7886,
											"end": 8005,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8044,
											"end": 8045,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8069,
											"end": 8122,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 8114,
											"end": 8121,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8105,
											"end": 8111,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8094,
											"end": 8103,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8090,
											"end": 8112,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8069,
											"end": 8122,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 8069,
											"end": 8122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8069,
											"end": 8122,
											"name": "tag",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 8069,
											"end": 8122,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8059,
											"end": 8122,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8059,
											"end": 8122,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8015,
											"end": 8132,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7810,
											"end": 8139,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7810,
											"end": 8139,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7810,
											"end": 8139,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7810,
											"end": 8139,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7810,
											"end": 8139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8145,
											"end": 8474,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 8145,
											"end": 8474,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8204,
											"end": 8210,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8253,
											"end": 8255,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8241,
											"end": 8250,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8232,
											"end": 8239,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8228,
											"end": 8251,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8224,
											"end": 8256,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8221,
											"end": 8340,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8221,
											"end": 8340,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 8221,
											"end": 8340,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8259,
											"end": 8338,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 8259,
											"end": 8338,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 8259,
											"end": 8338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8259,
											"end": 8338,
											"name": "tag",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 8259,
											"end": 8338,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8221,
											"end": 8340,
											"name": "tag",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 8221,
											"end": 8340,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8379,
											"end": 8380,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8404,
											"end": 8457,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 8449,
											"end": 8456,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8440,
											"end": 8446,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8429,
											"end": 8438,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8425,
											"end": 8447,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8404,
											"end": 8457,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 8404,
											"end": 8457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8404,
											"end": 8457,
											"name": "tag",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 8404,
											"end": 8457,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8394,
											"end": 8457,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8394,
											"end": 8457,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8350,
											"end": 8467,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8145,
											"end": 8474,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8145,
											"end": 8474,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8145,
											"end": 8474,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8145,
											"end": 8474,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8145,
											"end": 8474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8480,
											"end": 8598,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 8480,
											"end": 8598,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8567,
											"end": 8591,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 8585,
											"end": 8590,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8567,
											"end": 8591,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 8567,
											"end": 8591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8567,
											"end": 8591,
											"name": "tag",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 8567,
											"end": 8591,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8562,
											"end": 8565,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8555,
											"end": 8592,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8480,
											"end": 8598,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8480,
											"end": 8598,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8480,
											"end": 8598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8604,
											"end": 8826,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 8604,
											"end": 8826,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8697,
											"end": 8701,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8735,
											"end": 8737,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8724,
											"end": 8733,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8720,
											"end": 8738,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8712,
											"end": 8738,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8712,
											"end": 8738,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8748,
											"end": 8819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 8816,
											"end": 8817,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8805,
											"end": 8814,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8801,
											"end": 8818,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8792,
											"end": 8798,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8748,
											"end": 8819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 8748,
											"end": 8819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8748,
											"end": 8819,
											"name": "tag",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 8748,
											"end": 8819,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8604,
											"end": 8826,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8604,
											"end": 8826,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8604,
											"end": 8826,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8604,
											"end": 8826,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8604,
											"end": 8826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8832,
											"end": 9306,
											"name": "tag",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 8832,
											"end": 9306,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8900,
											"end": 8906,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8908,
											"end": 8914,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8957,
											"end": 8959,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8945,
											"end": 8954,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8936,
											"end": 8943,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8932,
											"end": 8955,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8928,
											"end": 8960,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8925,
											"end": 9044,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8925,
											"end": 9044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 8925,
											"end": 9044,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8963,
											"end": 9042,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 8963,
											"end": 9042,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 8963,
											"end": 9042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8963,
											"end": 9042,
											"name": "tag",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 8963,
											"end": 9042,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8925,
											"end": 9044,
											"name": "tag",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 8925,
											"end": 9044,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9083,
											"end": 9084,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9108,
											"end": 9161,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 9153,
											"end": 9160,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9144,
											"end": 9150,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9133,
											"end": 9142,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9129,
											"end": 9151,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9108,
											"end": 9161,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 9108,
											"end": 9161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9108,
											"end": 9161,
											"name": "tag",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 9108,
											"end": 9161,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9098,
											"end": 9161,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9098,
											"end": 9161,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9171,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9210,
											"end": 9212,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9236,
											"end": 9289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 9281,
											"end": 9288,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9272,
											"end": 9278,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9261,
											"end": 9270,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9257,
											"end": 9279,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9236,
											"end": 9289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 9236,
											"end": 9289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9236,
											"end": 9289,
											"name": "tag",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 9236,
											"end": 9289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9226,
											"end": 9289,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9226,
											"end": 9289,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9181,
											"end": 9299,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8832,
											"end": 9306,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8832,
											"end": 9306,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8832,
											"end": 9306,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8832,
											"end": 9306,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8832,
											"end": 9306,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8832,
											"end": 9306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9312,
											"end": 10800,
											"name": "tag",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 9312,
											"end": 10800,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9715,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9749,
											"end": 9752,
											"name": "PUSH",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 9738,
											"end": 9747,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9734,
											"end": 9753,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9726,
											"end": 9753,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9726,
											"end": 9753,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9763,
											"end": 9834,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 9831,
											"end": 9832,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9820,
											"end": 9829,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9816,
											"end": 9833,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9807,
											"end": 9813,
											"name": "DUP16",
											"source": 12
										},
										{
											"begin": 9763,
											"end": 9834,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 9763,
											"end": 9834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9763,
											"end": 9834,
											"name": "tag",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 9763,
											"end": 9834,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9844,
											"end": 9916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 9912,
											"end": 9914,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9901,
											"end": 9910,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9897,
											"end": 9915,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9888,
											"end": 9894,
											"name": "DUP15",
											"source": 12
										},
										{
											"begin": 9844,
											"end": 9916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 9844,
											"end": 9916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9844,
											"end": 9916,
											"name": "tag",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 9844,
											"end": 9916,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9926,
											"end": 9998,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 9994,
											"end": 9996,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9983,
											"end": 9992,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9979,
											"end": 9997,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9970,
											"end": 9976,
											"name": "DUP14",
											"source": 12
										},
										{
											"begin": 9926,
											"end": 9998,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 9926,
											"end": 9998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9926,
											"end": 9998,
											"name": "tag",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 9926,
											"end": 9998,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10008,
											"end": 10080,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 10076,
											"end": 10078,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 10065,
											"end": 10074,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10061,
											"end": 10079,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10052,
											"end": 10058,
											"name": "DUP13",
											"source": 12
										},
										{
											"begin": 10008,
											"end": 10080,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 10008,
											"end": 10080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10008,
											"end": 10080,
											"name": "tag",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 10008,
											"end": 10080,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10090,
											"end": 10163,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 10158,
											"end": 10161,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 10147,
											"end": 10156,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10143,
											"end": 10162,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10134,
											"end": 10140,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 10090,
											"end": 10163,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 10090,
											"end": 10163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10090,
											"end": 10163,
											"name": "tag",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 10090,
											"end": 10163,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10173,
											"end": 10246,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 10241,
											"end": 10244,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 10230,
											"end": 10239,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10226,
											"end": 10245,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10217,
											"end": 10223,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 10173,
											"end": 10246,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 10173,
											"end": 10246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10173,
											"end": 10246,
											"name": "tag",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 10173,
											"end": 10246,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10256,
											"end": 10323,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 10318,
											"end": 10321,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 10307,
											"end": 10316,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10303,
											"end": 10322,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10294,
											"end": 10300,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 10256,
											"end": 10323,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 10256,
											"end": 10323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10256,
											"end": 10323,
											"name": "tag",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 10256,
											"end": 10323,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10333,
											"end": 10400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 10395,
											"end": 10398,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 10384,
											"end": 10393,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10380,
											"end": 10399,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10371,
											"end": 10377,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 10333,
											"end": 10400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 10333,
											"end": 10400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10333,
											"end": 10400,
											"name": "tag",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 10333,
											"end": 10400,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10410,
											"end": 10477,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 10472,
											"end": 10475,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 10461,
											"end": 10470,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10457,
											"end": 10476,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10448,
											"end": 10454,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 10410,
											"end": 10477,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 10410,
											"end": 10477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10410,
											"end": 10477,
											"name": "tag",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 10410,
											"end": 10477,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10487,
											"end": 10560,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 10555,
											"end": 10558,
											"name": "PUSH",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 10544,
											"end": 10553,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10540,
											"end": 10559,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10531,
											"end": 10537,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10487,
											"end": 10560,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 10487,
											"end": 10560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10487,
											"end": 10560,
											"name": "tag",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 10487,
											"end": 10560,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 10633,
											"end": 10636,
											"name": "PUSH",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 10622,
											"end": 10631,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10618,
											"end": 10637,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10608,
											"end": 10615,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 10570,
											"end": 10638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "tag",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10686,
											"end": 10695,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10680,
											"end": 10684,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10676,
											"end": 10696,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10670,
											"end": 10673,
											"name": "PUSH",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 10659,
											"end": 10668,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10655,
											"end": 10674,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10648,
											"end": 10697,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10714,
											"end": 10793,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 10788,
											"end": 10792,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10778,
											"end": 10785,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10714,
											"end": 10793,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 10714,
											"end": 10793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10714,
											"end": 10793,
											"name": "tag",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 10714,
											"end": 10793,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10706,
											"end": 10793,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10706,
											"end": 10793,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9312,
											"end": 10800,
											"name": "SWAP14",
											"source": 12
										},
										{
											"begin": 9312,
											"end": 10800,
											"name": "SWAP13",
											"source": 12
										},
										{
											"begin": 9312,
											"end": 10800,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9312,
											"end": 10800,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9312,
											"end": 10800,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9312,
											"end": 10800,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9312,
											"end": 10800,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9312,
											"end": 10800,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9312,
											"end": 10800,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9312,
											"end": 10800,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9312,
											"end": 10800,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9312,
											"end": 10800,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9312,
											"end": 10800,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9312,
											"end": 10800,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9312,
											"end": 10800,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9312,
											"end": 10800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10806,
											"end": 10986,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 10806,
											"end": 10986,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10854,
											"end": 10931,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10851,
											"end": 10852,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10844,
											"end": 10932,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10951,
											"end": 10955,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 10948,
											"end": 10949,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10941,
											"end": 10956,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10975,
											"end": 10979,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10972,
											"end": 10973,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10965,
											"end": 10980,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10992,
											"end": 11312,
											"name": "tag",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 10992,
											"end": 11312,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11036,
											"end": 11042,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11073,
											"end": 11074,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 11067,
											"end": 11071,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11063,
											"end": 11075,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 11053,
											"end": 11075,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11053,
											"end": 11075,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11120,
											"end": 11121,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 11114,
											"end": 11118,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11110,
											"end": 11122,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 11141,
											"end": 11159,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11131,
											"end": 11212,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 11131,
											"end": 11212,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11197,
											"end": 11201,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 11189,
											"end": 11195,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11185,
											"end": 11202,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 11175,
											"end": 11202,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11175,
											"end": 11202,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11131,
											"end": 11212,
											"name": "tag",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 11131,
											"end": 11212,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11259,
											"end": 11261,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11251,
											"end": 11257,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11248,
											"end": 11262,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 11228,
											"end": 11246,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11225,
											"end": 11263,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11222,
											"end": 11306,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 11222,
											"end": 11306,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11278,
											"end": 11296,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 11278,
											"end": 11296,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 11278,
											"end": 11296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11278,
											"end": 11296,
											"name": "tag",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 11278,
											"end": 11296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11222,
											"end": 11306,
											"name": "tag",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 11222,
											"end": 11306,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11043,
											"end": 11312,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10992,
											"end": 11312,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10992,
											"end": 11312,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10992,
											"end": 11312,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10992,
											"end": 11312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11318,
											"end": 11497,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 11318,
											"end": 11497,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11458,
											"end": 11489,
											"name": "PUSH",
											"source": 12,
											"value": "426F72726F776572206D757374206265204B5943207665726966696564000000"
										},
										{
											"begin": 11454,
											"end": 11455,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11446,
											"end": 11452,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11442,
											"end": 11456,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11435,
											"end": 11490,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11318,
											"end": 11497,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11318,
											"end": 11497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11503,
											"end": 11869,
											"name": "tag",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 11503,
											"end": 11869,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11645,
											"end": 11648,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11666,
											"end": 11733,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 11730,
											"end": 11732,
											"name": "PUSH",
											"source": 12,
											"value": "1D"
										},
										{
											"begin": 11725,
											"end": 11728,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11666,
											"end": 11733,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 11666,
											"end": 11733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11666,
											"end": 11733,
											"name": "tag",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 11666,
											"end": 11733,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11659,
											"end": 11733,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11659,
											"end": 11733,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11742,
											"end": 11835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 11831,
											"end": 11834,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11742,
											"end": 11835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 11742,
											"end": 11835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11742,
											"end": 11835,
											"name": "tag",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 11742,
											"end": 11835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11860,
											"end": 11862,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11855,
											"end": 11858,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11851,
											"end": 11863,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11844,
											"end": 11863,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11844,
											"end": 11863,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11503,
											"end": 11869,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11503,
											"end": 11869,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11503,
											"end": 11869,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11503,
											"end": 11869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11875,
											"end": 12294,
											"name": "tag",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 11875,
											"end": 12294,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12041,
											"end": 12045,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12079,
											"end": 12081,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12068,
											"end": 12077,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12064,
											"end": 12082,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12056,
											"end": 12082,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12056,
											"end": 12082,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12128,
											"end": 12137,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12122,
											"end": 12126,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12118,
											"end": 12138,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12114,
											"end": 12115,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12103,
											"end": 12112,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12099,
											"end": 12116,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12092,
											"end": 12139,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12156,
											"end": 12287,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 12282,
											"end": 12286,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12156,
											"end": 12287,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 12156,
											"end": 12287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12156,
											"end": 12287,
											"name": "tag",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 12156,
											"end": 12287,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12148,
											"end": 12287,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12148,
											"end": 12287,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11875,
											"end": 12294,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11875,
											"end": 12294,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11875,
											"end": 12294,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11875,
											"end": 12294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12300,
											"end": 12468,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 12300,
											"end": 12468,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12440,
											"end": 12460,
											"name": "PUSH",
											"source": 12,
											"value": "496E73756666696369656E742066756E64730000000000000000000000000000"
										},
										{
											"begin": 12436,
											"end": 12437,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12428,
											"end": 12434,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12424,
											"end": 12438,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12417,
											"end": 12461,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12300,
											"end": 12468,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12300,
											"end": 12468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12474,
											"end": 12840,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 12474,
											"end": 12840,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12616,
											"end": 12619,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12637,
											"end": 12704,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 12701,
											"end": 12703,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 12696,
											"end": 12699,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12637,
											"end": 12704,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 12637,
											"end": 12704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12637,
											"end": 12704,
											"name": "tag",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 12637,
											"end": 12704,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12630,
											"end": 12704,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12630,
											"end": 12704,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12713,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 12802,
											"end": 12805,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12713,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 12713,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12713,
											"end": 12806,
											"name": "tag",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 12713,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12831,
											"end": 12833,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12826,
											"end": 12829,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12822,
											"end": 12834,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12815,
											"end": 12834,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12815,
											"end": 12834,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12474,
											"end": 12840,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12474,
											"end": 12840,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12474,
											"end": 12840,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12474,
											"end": 12840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12846,
											"end": 13265,
											"name": "tag",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 12846,
											"end": 13265,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13012,
											"end": 13016,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13050,
											"end": 13052,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13039,
											"end": 13048,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13035,
											"end": 13053,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13027,
											"end": 13053,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13027,
											"end": 13053,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13099,
											"end": 13108,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13093,
											"end": 13097,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13089,
											"end": 13109,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13085,
											"end": 13086,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13074,
											"end": 13083,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13070,
											"end": 13087,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13063,
											"end": 13110,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13127,
											"end": 13258,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 13253,
											"end": 13257,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13127,
											"end": 13258,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 13127,
											"end": 13258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13127,
											"end": 13258,
											"name": "tag",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 13127,
											"end": 13258,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13119,
											"end": 13258,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13119,
											"end": 13258,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12846,
											"end": 13265,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12846,
											"end": 13265,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12846,
											"end": 13265,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12846,
											"end": 13265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13271,
											"end": 13444,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 13271,
											"end": 13444,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13411,
											"end": 13436,
											"name": "PUSH",
											"source": 12,
											"value": "416C6C6F77616E6365206973206E6F7420656E6F756768000000000000000000"
										},
										{
											"begin": 13407,
											"end": 13408,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13399,
											"end": 13405,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13395,
											"end": 13409,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13388,
											"end": 13437,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13271,
											"end": 13444,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13271,
											"end": 13444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13450,
											"end": 13816,
											"name": "tag",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 13450,
											"end": 13816,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13592,
											"end": 13595,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13613,
											"end": 13680,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 13677,
											"end": 13679,
											"name": "PUSH",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 13672,
											"end": 13675,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13613,
											"end": 13680,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 13613,
											"end": 13680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13613,
											"end": 13680,
											"name": "tag",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 13613,
											"end": 13680,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13606,
											"end": 13680,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13606,
											"end": 13680,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13689,
											"end": 13782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 13778,
											"end": 13781,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13689,
											"end": 13782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 13689,
											"end": 13782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13689,
											"end": 13782,
											"name": "tag",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 13689,
											"end": 13782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13807,
											"end": 13809,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13802,
											"end": 13805,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13798,
											"end": 13810,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13791,
											"end": 13810,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13791,
											"end": 13810,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13450,
											"end": 13816,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13450,
											"end": 13816,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13450,
											"end": 13816,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13450,
											"end": 13816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13822,
											"end": 14241,
											"name": "tag",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 13822,
											"end": 14241,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13988,
											"end": 13992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14026,
											"end": 14028,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14015,
											"end": 14024,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14011,
											"end": 14029,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14003,
											"end": 14029,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14003,
											"end": 14029,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14075,
											"end": 14084,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14069,
											"end": 14073,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14065,
											"end": 14085,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14061,
											"end": 14062,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14050,
											"end": 14059,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14046,
											"end": 14063,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14039,
											"end": 14086,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14103,
											"end": 14234,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 14229,
											"end": 14233,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14103,
											"end": 14234,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 14103,
											"end": 14234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14103,
											"end": 14234,
											"name": "tag",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 14103,
											"end": 14234,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14095,
											"end": 14234,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14095,
											"end": 14234,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13822,
											"end": 14241,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13822,
											"end": 14241,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13822,
											"end": 14241,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13822,
											"end": 14241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14247,
											"end": 14427,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 14247,
											"end": 14427,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14295,
											"end": 14372,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14292,
											"end": 14293,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14285,
											"end": 14373,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14392,
											"end": 14396,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 14389,
											"end": 14390,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 14382,
											"end": 14397,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14416,
											"end": 14420,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 14413,
											"end": 14414,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14406,
											"end": 14421,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 14433,
											"end": 14666,
											"name": "tag",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 14433,
											"end": 14666,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14472,
											"end": 14475,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14495,
											"end": 14519,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 14513,
											"end": 14518,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14495,
											"end": 14519,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 14495,
											"end": 14519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14495,
											"end": 14519,
											"name": "tag",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 14495,
											"end": 14519,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14486,
											"end": 14519,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14486,
											"end": 14519,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14541,
											"end": 14607,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14534,
											"end": 14539,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14531,
											"end": 14608,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14528,
											"end": 14631,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 14528,
											"end": 14631,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14611,
											"end": 14629,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 14611,
											"end": 14629,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 14611,
											"end": 14629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14611,
											"end": 14629,
											"name": "tag",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 14611,
											"end": 14629,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14528,
											"end": 14631,
											"name": "tag",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 14528,
											"end": 14631,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14658,
											"end": 14659,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 14651,
											"end": 14656,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14647,
											"end": 14660,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14640,
											"end": 14660,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14640,
											"end": 14660,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14433,
											"end": 14666,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14433,
											"end": 14666,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14433,
											"end": 14666,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14433,
											"end": 14666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14672,
											"end": 15082,
											"name": "tag",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 14672,
											"end": 15082,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14712,
											"end": 14719,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14735,
											"end": 14755,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 14753,
											"end": 14754,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14735,
											"end": 14755,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 14735,
											"end": 14755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14735,
											"end": 14755,
											"name": "tag",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 14735,
											"end": 14755,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14730,
											"end": 14755,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14730,
											"end": 14755,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14769,
											"end": 14789,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 14787,
											"end": 14788,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14769,
											"end": 14789,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 14769,
											"end": 14789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14769,
											"end": 14789,
											"name": "tag",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 14769,
											"end": 14789,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14764,
											"end": 14789,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14764,
											"end": 14789,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14824,
											"end": 14825,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14821,
											"end": 14822,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14817,
											"end": 14826,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 14846,
											"end": 14876,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 14864,
											"end": 14875,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14846,
											"end": 14876,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 14846,
											"end": 14876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14846,
											"end": 14876,
											"name": "tag",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 14846,
											"end": 14876,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14835,
											"end": 14876,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14835,
											"end": 14876,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15025,
											"end": 15026,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15016,
											"end": 15023,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15012,
											"end": 15027,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 15009,
											"end": 15010,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15006,
											"end": 15028,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 14986,
											"end": 14987,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14979,
											"end": 14988,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14959,
											"end": 15042,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 14936,
											"end": 15075,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 14936,
											"end": 15075,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15055,
											"end": 15073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 15055,
											"end": 15073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 15055,
											"end": 15073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15055,
											"end": 15073,
											"name": "tag",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 15055,
											"end": 15073,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14936,
											"end": 15075,
											"name": "tag",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 14936,
											"end": 15075,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14720,
											"end": 15082,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14672,
											"end": 15082,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14672,
											"end": 15082,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14672,
											"end": 15082,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14672,
											"end": 15082,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14672,
											"end": 15082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15088,
											"end": 15279,
											"name": "tag",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 15088,
											"end": 15279,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15128,
											"end": 15131,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15147,
											"end": 15167,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 15165,
											"end": 15166,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15147,
											"end": 15167,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 15147,
											"end": 15167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15147,
											"end": 15167,
											"name": "tag",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 15147,
											"end": 15167,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15142,
											"end": 15167,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15142,
											"end": 15167,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15181,
											"end": 15201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "549"
										},
										{
											"begin": 15199,
											"end": 15200,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15181,
											"end": 15201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 15181,
											"end": 15201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15181,
											"end": 15201,
											"name": "tag",
											"source": 12,
											"value": "549"
										},
										{
											"begin": 15181,
											"end": 15201,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15176,
											"end": 15201,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15176,
											"end": 15201,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15224,
											"end": 15225,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15221,
											"end": 15222,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15217,
											"end": 15226,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15210,
											"end": 15226,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15210,
											"end": 15226,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15245,
											"end": 15248,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15242,
											"end": 15243,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15239,
											"end": 15249,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 15236,
											"end": 15272,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15236,
											"end": 15272,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 15236,
											"end": 15272,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15252,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 15252,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 15252,
											"end": 15270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15252,
											"end": 15270,
											"name": "tag",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 15252,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15236,
											"end": 15272,
											"name": "tag",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 15236,
											"end": 15272,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15088,
											"end": 15279,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15088,
											"end": 15279,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15088,
											"end": 15279,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15088,
											"end": 15279,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15088,
											"end": 15279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15285,
											"end": 15426,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 15285,
											"end": 15426,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15334,
											"end": 15338,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15357,
											"end": 15360,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15349,
											"end": 15360,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15349,
											"end": 15360,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15380,
											"end": 15383,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15377,
											"end": 15378,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15370,
											"end": 15384,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15414,
											"end": 15418,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15411,
											"end": 15412,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15401,
											"end": 15419,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 15393,
											"end": 15419,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15393,
											"end": 15419,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15285,
											"end": 15426,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15285,
											"end": 15426,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15285,
											"end": 15426,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15285,
											"end": 15426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15432,
											"end": 15525,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 15432,
											"end": 15525,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15469,
											"end": 15475,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15516,
											"end": 15518,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15511,
											"end": 15513,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 15504,
											"end": 15509,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15500,
											"end": 15514,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15496,
											"end": 15519,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 15486,
											"end": 15519,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15486,
											"end": 15519,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15432,
											"end": 15525,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15432,
											"end": 15525,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15432,
											"end": 15525,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15432,
											"end": 15525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15531,
											"end": 15638,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 15531,
											"end": 15638,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15575,
											"end": 15583,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15625,
											"end": 15630,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15619,
											"end": 15623,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15615,
											"end": 15631,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 15594,
											"end": 15631,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15594,
											"end": 15631,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15531,
											"end": 15638,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15531,
											"end": 15638,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15531,
											"end": 15638,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15531,
											"end": 15638,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15531,
											"end": 15638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15644,
											"end": 16037,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 15644,
											"end": 16037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15713,
											"end": 15719,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15763,
											"end": 15764,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 15751,
											"end": 15761,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15747,
											"end": 15765,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 15786,
											"end": 15883,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "556"
										},
										{
											"begin": 15816,
											"end": 15882,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15805,
											"end": 15814,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15786,
											"end": 15883,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 15786,
											"end": 15883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15786,
											"end": 15883,
											"name": "tag",
											"source": 12,
											"value": "556"
										},
										{
											"begin": 15786,
											"end": 15883,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15904,
											"end": 15943,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 15934,
											"end": 15942,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 15923,
											"end": 15932,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15904,
											"end": 15943,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 15904,
											"end": 15943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15904,
											"end": 15943,
											"name": "tag",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 15904,
											"end": 15943,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15892,
											"end": 15943,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 15892,
											"end": 15943,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15976,
											"end": 15980,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15972,
											"end": 15981,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 15965,
											"end": 15970,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15961,
											"end": 15982,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 15952,
											"end": 15982,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 15952,
											"end": 15982,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16025,
											"end": 16029,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16015,
											"end": 16023,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 16011,
											"end": 16030,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 16004,
											"end": 16009,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16001,
											"end": 16031,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 15991,
											"end": 16031,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15991,
											"end": 16031,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15720,
											"end": 16037,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15720,
											"end": 16037,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15644,
											"end": 16037,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 15644,
											"end": 16037,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15644,
											"end": 16037,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15644,
											"end": 16037,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15644,
											"end": 16037,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15644,
											"end": 16037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16043,
											"end": 16103,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 16043,
											"end": 16103,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16071,
											"end": 16074,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16092,
											"end": 16097,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16085,
											"end": 16097,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16085,
											"end": 16097,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16043,
											"end": 16103,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16043,
											"end": 16103,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16043,
											"end": 16103,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16043,
											"end": 16103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16109,
											"end": 16251,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 16109,
											"end": 16251,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16159,
											"end": 16168,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16192,
											"end": 16245,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 16210,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "561"
										},
										{
											"begin": 16219,
											"end": 16243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 16237,
											"end": 16242,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16219,
											"end": 16243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 16219,
											"end": 16243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16219,
											"end": 16243,
											"name": "tag",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 16219,
											"end": 16243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16210,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 16210,
											"end": 16244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16210,
											"end": 16244,
											"name": "tag",
											"source": 12,
											"value": "561"
										},
										{
											"begin": 16210,
											"end": 16244,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16192,
											"end": 16245,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 16192,
											"end": 16245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16192,
											"end": 16245,
											"name": "tag",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 16192,
											"end": 16245,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16179,
											"end": 16245,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16179,
											"end": 16245,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16109,
											"end": 16251,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16109,
											"end": 16251,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16109,
											"end": 16251,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16109,
											"end": 16251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16257,
											"end": 16332,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 16257,
											"end": 16332,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16300,
											"end": 16303,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16321,
											"end": 16326,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16314,
											"end": 16326,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16314,
											"end": 16326,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16257,
											"end": 16332,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16257,
											"end": 16332,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16257,
											"end": 16332,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16257,
											"end": 16332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16338,
											"end": 16607,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 16338,
											"end": 16607,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16448,
											"end": 16487,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "565"
										},
										{
											"begin": 16479,
											"end": 16486,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16448,
											"end": 16487,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 16448,
											"end": 16487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16448,
											"end": 16487,
											"name": "tag",
											"source": 12,
											"value": "565"
										},
										{
											"begin": 16448,
											"end": 16487,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16509,
											"end": 16600,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "566"
										},
										{
											"begin": 16558,
											"end": 16599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "567"
										},
										{
											"begin": 16582,
											"end": 16598,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16558,
											"end": 16599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 16558,
											"end": 16599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16558,
											"end": 16599,
											"name": "tag",
											"source": 12,
											"value": "567"
										},
										{
											"begin": 16558,
											"end": 16599,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16550,
											"end": 16556,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16543,
											"end": 16547,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16537,
											"end": 16548,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 16509,
											"end": 16600,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 16509,
											"end": 16600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16509,
											"end": 16600,
											"name": "tag",
											"source": 12,
											"value": "566"
										},
										{
											"begin": 16509,
											"end": 16600,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16503,
											"end": 16507,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16496,
											"end": 16601,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 16414,
											"end": 16607,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16338,
											"end": 16607,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16338,
											"end": 16607,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16338,
											"end": 16607,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16338,
											"end": 16607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16613,
											"end": 16686,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 16613,
											"end": 16686,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16658,
											"end": 16661,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16613,
											"end": 16686,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16613,
											"end": 16686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16692,
											"end": 16881,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 16692,
											"end": 16881,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16769,
											"end": 16801,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 16769,
											"end": 16801,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 16769,
											"end": 16801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16769,
											"end": 16801,
											"name": "tag",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 16769,
											"end": 16801,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16810,
											"end": 16875,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 16868,
											"end": 16874,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16860,
											"end": 16866,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16854,
											"end": 16858,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16810,
											"end": 16875,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 16810,
											"end": 16875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16810,
											"end": 16875,
											"name": "tag",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 16810,
											"end": 16875,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16745,
											"end": 16881,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16692,
											"end": 16881,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16692,
											"end": 16881,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16692,
											"end": 16881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16887,
											"end": 17073,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 16887,
											"end": 17073,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16947,
											"end": 17067,
											"name": "tag",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 16947,
											"end": 17067,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16964,
											"end": 16967,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16957,
											"end": 16962,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16954,
											"end": 16968,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 16947,
											"end": 17067,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 16947,
											"end": 17067,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 16947,
											"end": 17067,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17018,
											"end": 17057,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 17055,
											"end": 17056,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17048,
											"end": 17053,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17018,
											"end": 17057,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 17018,
											"end": 17057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17018,
											"end": 17057,
											"name": "tag",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 17018,
											"end": 17057,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16991,
											"end": 16992,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 16984,
											"end": 16989,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16980,
											"end": 16993,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16971,
											"end": 16993,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16971,
											"end": 16993,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16947,
											"end": 17067,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 16947,
											"end": 17067,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16947,
											"end": 17067,
											"name": "tag",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 16947,
											"end": 17067,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16887,
											"end": 17073,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16887,
											"end": 17073,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16887,
											"end": 17073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17079,
											"end": 17622,
											"name": "tag",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 17079,
											"end": 17622,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17180,
											"end": 17182,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 17175,
											"end": 17178,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17172,
											"end": 17183,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 17169,
											"end": 17615,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17169,
											"end": 17615,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 17169,
											"end": 17615,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17214,
											"end": 17252,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "579"
										},
										{
											"begin": 17246,
											"end": 17251,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17214,
											"end": 17252,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 17214,
											"end": 17252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17214,
											"end": 17252,
											"name": "tag",
											"source": 12,
											"value": "579"
										},
										{
											"begin": 17214,
											"end": 17252,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17298,
											"end": 17327,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "580"
										},
										{
											"begin": 17316,
											"end": 17326,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17298,
											"end": 17327,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 17298,
											"end": 17327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17298,
											"end": 17327,
											"name": "tag",
											"source": 12,
											"value": "580"
										},
										{
											"begin": 17298,
											"end": 17327,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17288,
											"end": 17296,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17284,
											"end": 17328,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17481,
											"end": 17483,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17469,
											"end": 17479,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17466,
											"end": 17484,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 17463,
											"end": 17512,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17463,
											"end": 17512,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 17463,
											"end": 17512,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17502,
											"end": 17510,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17487,
											"end": 17510,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17487,
											"end": 17510,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17463,
											"end": 17512,
											"name": "tag",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 17463,
											"end": 17512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17525,
											"end": 17605,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 17581,
											"end": 17603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 17599,
											"end": 17602,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17581,
											"end": 17603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 17581,
											"end": 17603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17581,
											"end": 17603,
											"name": "tag",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 17581,
											"end": 17603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17571,
											"end": 17579,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17567,
											"end": 17604,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17554,
											"end": 17565,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17525,
											"end": 17605,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 17525,
											"end": 17605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17525,
											"end": 17605,
											"name": "tag",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 17525,
											"end": 17605,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17184,
											"end": 17615,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17184,
											"end": 17615,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17169,
											"end": 17615,
											"name": "tag",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 17169,
											"end": 17615,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17079,
											"end": 17622,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17079,
											"end": 17622,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17079,
											"end": 17622,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17079,
											"end": 17622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17628,
											"end": 17745,
											"name": "tag",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 17628,
											"end": 17745,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17682,
											"end": 17690,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17732,
											"end": 17737,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17726,
											"end": 17730,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17722,
											"end": 17738,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 17701,
											"end": 17738,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17701,
											"end": 17738,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17628,
											"end": 17745,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17628,
											"end": 17745,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17628,
											"end": 17745,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17628,
											"end": 17745,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17628,
											"end": 17745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17751,
											"end": 17920,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 17751,
											"end": 17920,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17795,
											"end": 17801,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17828,
											"end": 17879,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 17876,
											"end": 17877,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17872,
											"end": 17878,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 17864,
											"end": 17869,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17861,
											"end": 17862,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 17857,
											"end": 17870,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 17828,
											"end": 17879,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 17828,
											"end": 17879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17828,
											"end": 17879,
											"name": "tag",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 17828,
											"end": 17879,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17824,
											"end": 17880,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 17909,
											"end": 17913,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17903,
											"end": 17907,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17899,
											"end": 17914,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 17889,
											"end": 17914,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17889,
											"end": 17914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17802,
											"end": 17920,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17751,
											"end": 17920,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17751,
											"end": 17920,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17751,
											"end": 17920,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17751,
											"end": 17920,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17751,
											"end": 17920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17925,
											"end": 18220,
											"name": "tag",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 17925,
											"end": 18220,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18001,
											"end": 18005,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18147,
											"end": 18176,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "588"
										},
										{
											"begin": 18172,
											"end": 18175,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18166,
											"end": 18170,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18147,
											"end": 18176,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 18147,
											"end": 18176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18147,
											"end": 18176,
											"name": "tag",
											"source": 12,
											"value": "588"
										},
										{
											"begin": 18147,
											"end": 18176,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18139,
											"end": 18176,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18139,
											"end": 18176,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18209,
											"end": 18212,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18206,
											"end": 18207,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 18202,
											"end": 18213,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 18196,
											"end": 18200,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18193,
											"end": 18214,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 18185,
											"end": 18214,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18185,
											"end": 18214,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17925,
											"end": 18220,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17925,
											"end": 18220,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17925,
											"end": 18220,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17925,
											"end": 18220,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17925,
											"end": 18220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18225,
											"end": 19620,
											"name": "tag",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 18225,
											"end": 19620,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18342,
											"end": 18379,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 18375,
											"end": 18378,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18342,
											"end": 18379,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 18342,
											"end": 18379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18342,
											"end": 18379,
											"name": "tag",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 18342,
											"end": 18379,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18444,
											"end": 18462,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18436,
											"end": 18442,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18433,
											"end": 18463,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 18430,
											"end": 18486,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 18430,
											"end": 18486,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "591"
										},
										{
											"begin": 18430,
											"end": 18486,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 18466,
											"end": 18484,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 18466,
											"end": 18484,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 18466,
											"end": 18484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18466,
											"end": 18484,
											"name": "tag",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 18466,
											"end": 18484,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18430,
											"end": 18486,
											"name": "tag",
											"source": 12,
											"value": "591"
										},
										{
											"begin": 18430,
											"end": 18486,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18510,
											"end": 18548,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "593"
										},
										{
											"begin": 18542,
											"end": 18546,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18536,
											"end": 18547,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 18510,
											"end": 18548,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 18510,
											"end": 18548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18510,
											"end": 18548,
											"name": "tag",
											"source": 12,
											"value": "593"
										},
										{
											"begin": 18510,
											"end": 18548,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18595,
											"end": 18662,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "594"
										},
										{
											"begin": 18655,
											"end": 18661,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18647,
											"end": 18653,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18641,
											"end": 18645,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 18595,
											"end": 18662,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 18595,
											"end": 18662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18595,
											"end": 18662,
											"name": "tag",
											"source": 12,
											"value": "594"
										},
										{
											"begin": 18595,
											"end": 18662,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18689,
											"end": 18690,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18713,
											"end": 18717,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18700,
											"end": 18717,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18700,
											"end": 18717,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18745,
											"end": 18747,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 18737,
											"end": 18743,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18734,
											"end": 18748,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 18762,
											"end": 18763,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 18757,
											"end": 19375,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18757,
											"end": 19375,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 18757,
											"end": 19375,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "596"
										},
										{
											"begin": 18757,
											"end": 19375,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19419,
											"end": 19420,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19436,
											"end": 19442,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19433,
											"end": 19510,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 19433,
											"end": 19510,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "597"
										},
										{
											"begin": 19433,
											"end": 19510,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19485,
											"end": 19494,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19480,
											"end": 19483,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 19476,
											"end": 19495,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19470,
											"end": 19496,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 19461,
											"end": 19496,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19461,
											"end": 19496,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19433,
											"end": 19510,
											"name": "tag",
											"source": 12,
											"value": "597"
										},
										{
											"begin": 19433,
											"end": 19510,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19536,
											"end": 19603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "598"
										},
										{
											"begin": 19596,
											"end": 19602,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 19589,
											"end": 19594,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19536,
											"end": 19603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 19536,
											"end": 19603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19536,
											"end": 19603,
											"name": "tag",
											"source": 12,
											"value": "598"
										},
										{
											"begin": 19536,
											"end": 19603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19530,
											"end": 19534,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 19523,
											"end": 19604,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 19392,
											"end": 19614,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18727,
											"end": 19614,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "595"
										},
										{
											"begin": 18727,
											"end": 19614,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18757,
											"end": 19375,
											"name": "tag",
											"source": 12,
											"value": "596"
										},
										{
											"begin": 18757,
											"end": 19375,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18809,
											"end": 18813,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 18805,
											"end": 18814,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 18797,
											"end": 18803,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18793,
											"end": 18815,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 18843,
											"end": 18880,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "599"
										},
										{
											"begin": 18875,
											"end": 18879,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 18843,
											"end": 18880,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 18843,
											"end": 18880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18843,
											"end": 18880,
											"name": "tag",
											"source": 12,
											"value": "599"
										},
										{
											"begin": 18843,
											"end": 18880,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18902,
											"end": 18903,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18916,
											"end": 19124,
											"name": "tag",
											"source": 12,
											"value": "600"
										},
										{
											"begin": 18916,
											"end": 19124,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18930,
											"end": 18937,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18927,
											"end": 18928,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18924,
											"end": 18938,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 18916,
											"end": 19124,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 18916,
											"end": 19124,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "602"
										},
										{
											"begin": 18916,
											"end": 19124,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19009,
											"end": 19018,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19004,
											"end": 19007,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 19000,
											"end": 19019,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18994,
											"end": 19020,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 18986,
											"end": 18992,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18979,
											"end": 19021,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 19060,
											"end": 19061,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 19052,
											"end": 19058,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19048,
											"end": 19062,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19038,
											"end": 19062,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19038,
											"end": 19062,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19107,
											"end": 19109,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19096,
											"end": 19105,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 19092,
											"end": 19110,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19079,
											"end": 19110,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 19079,
											"end": 19110,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18953,
											"end": 18957,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18950,
											"end": 18951,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18946,
											"end": 18958,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18941,
											"end": 18958,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18941,
											"end": 18958,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18916,
											"end": 19124,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "600"
										},
										{
											"begin": 18916,
											"end": 19124,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18916,
											"end": 19124,
											"name": "tag",
											"source": 12,
											"value": "602"
										},
										{
											"begin": 18916,
											"end": 19124,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19152,
											"end": 19158,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 19143,
											"end": 19150,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19140,
											"end": 19159,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 19137,
											"end": 19316,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 19137,
											"end": 19316,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "603"
										},
										{
											"begin": 19137,
											"end": 19316,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19210,
											"end": 19219,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19205,
											"end": 19208,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 19201,
											"end": 19220,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19195,
											"end": 19221,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 19253,
											"end": 19301,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "604"
										},
										{
											"begin": 19295,
											"end": 19299,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 19287,
											"end": 19293,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 19283,
											"end": 19300,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 19272,
											"end": 19281,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19253,
											"end": 19301,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 19253,
											"end": 19301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19253,
											"end": 19301,
											"name": "tag",
											"source": 12,
											"value": "604"
										},
										{
											"begin": 19253,
											"end": 19301,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19245,
											"end": 19251,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19238,
											"end": 19302,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 19160,
											"end": 19316,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19137,
											"end": 19316,
											"name": "tag",
											"source": 12,
											"value": "603"
										},
										{
											"begin": 19137,
											"end": 19316,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19362,
											"end": 19363,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 19358,
											"end": 19359,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 19350,
											"end": 19356,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 19346,
											"end": 19360,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 19342,
											"end": 19364,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19336,
											"end": 19340,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 19329,
											"end": 19365,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 18764,
											"end": 19375,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18764,
											"end": 19375,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18764,
											"end": 19375,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18727,
											"end": 19614,
											"name": "tag",
											"source": 12,
											"value": "595"
										},
										{
											"begin": 18727,
											"end": 19614,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18727,
											"end": 19614,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18317,
											"end": 19620,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18317,
											"end": 19620,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18317,
											"end": 19620,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18225,
											"end": 19620,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18225,
											"end": 19620,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18225,
											"end": 19620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19626,
											"end": 20714,
											"name": "tag",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 19626,
											"end": 20714,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19935,
											"end": 19939,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19973,
											"end": 19976,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 19962,
											"end": 19971,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19958,
											"end": 19977,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19950,
											"end": 19977,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19950,
											"end": 19977,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19987,
											"end": 20058,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "606"
										},
										{
											"begin": 20055,
											"end": 20056,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20044,
											"end": 20053,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20040,
											"end": 20057,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20031,
											"end": 20037,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 19987,
											"end": 20058,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 19987,
											"end": 20058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19987,
											"end": 20058,
											"name": "tag",
											"source": 12,
											"value": "606"
										},
										{
											"begin": 19987,
											"end": 20058,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20068,
											"end": 20140,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "607"
										},
										{
											"begin": 20136,
											"end": 20138,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20125,
											"end": 20134,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20121,
											"end": 20139,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20112,
											"end": 20118,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 20068,
											"end": 20140,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 20068,
											"end": 20140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20068,
											"end": 20140,
											"name": "tag",
											"source": 12,
											"value": "607"
										},
										{
											"begin": 20068,
											"end": 20140,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20150,
											"end": 20222,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "608"
										},
										{
											"begin": 20218,
											"end": 20220,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 20207,
											"end": 20216,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20203,
											"end": 20221,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20194,
											"end": 20200,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 20150,
											"end": 20222,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 20150,
											"end": 20222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20150,
											"end": 20222,
											"name": "tag",
											"source": 12,
											"value": "608"
										},
										{
											"begin": 20150,
											"end": 20222,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20232,
											"end": 20304,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "609"
										},
										{
											"begin": 20300,
											"end": 20302,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 20289,
											"end": 20298,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20285,
											"end": 20303,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20276,
											"end": 20282,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 20232,
											"end": 20304,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 20232,
											"end": 20304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20232,
											"end": 20304,
											"name": "tag",
											"source": 12,
											"value": "609"
										},
										{
											"begin": 20232,
											"end": 20304,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20314,
											"end": 20387,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "610"
										},
										{
											"begin": 20382,
											"end": 20385,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 20371,
											"end": 20380,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20367,
											"end": 20386,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20358,
											"end": 20364,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 20314,
											"end": 20387,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 20314,
											"end": 20387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20314,
											"end": 20387,
											"name": "tag",
											"source": 12,
											"value": "610"
										},
										{
											"begin": 20314,
											"end": 20387,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20397,
											"end": 20470,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "611"
										},
										{
											"begin": 20465,
											"end": 20468,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 20454,
											"end": 20463,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20450,
											"end": 20469,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20441,
											"end": 20447,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 20397,
											"end": 20470,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 20397,
											"end": 20470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20397,
											"end": 20470,
											"name": "tag",
											"source": 12,
											"value": "611"
										},
										{
											"begin": 20397,
											"end": 20470,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20480,
											"end": 20553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "612"
										},
										{
											"begin": 20548,
											"end": 20551,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 20537,
											"end": 20546,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20533,
											"end": 20552,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20524,
											"end": 20530,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 20480,
											"end": 20553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 20480,
											"end": 20553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20480,
											"end": 20553,
											"name": "tag",
											"source": 12,
											"value": "612"
										},
										{
											"begin": 20480,
											"end": 20553,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20601,
											"end": 20610,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20595,
											"end": 20599,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20591,
											"end": 20611,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 20585,
											"end": 20588,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 20574,
											"end": 20583,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20570,
											"end": 20589,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20563,
											"end": 20612,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20629,
											"end": 20707,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "613"
										},
										{
											"begin": 20702,
											"end": 20706,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20693,
											"end": 20699,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20629,
											"end": 20707,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 20629,
											"end": 20707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20629,
											"end": 20707,
											"name": "tag",
											"source": 12,
											"value": "613"
										},
										{
											"begin": 20629,
											"end": 20707,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20621,
											"end": 20707,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20621,
											"end": 20707,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19626,
											"end": 20714,
											"name": "SWAP10",
											"source": 12
										},
										{
											"begin": 19626,
											"end": 20714,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 19626,
											"end": 20714,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19626,
											"end": 20714,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19626,
											"end": 20714,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19626,
											"end": 20714,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19626,
											"end": 20714,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19626,
											"end": 20714,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19626,
											"end": 20714,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19626,
											"end": 20714,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19626,
											"end": 20714,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19626,
											"end": 20714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20720,
											"end": 20944,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 20720,
											"end": 20944,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20860,
											"end": 20894,
											"name": "PUSH",
											"source": 12,
											"value": "4C6F616E206973207374696C6C2077697468696E2072657061796D656E742070"
										},
										{
											"begin": 20856,
											"end": 20857,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20848,
											"end": 20854,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20844,
											"end": 20858,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20837,
											"end": 20895,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20929,
											"end": 20936,
											"name": "PUSH",
											"source": 12,
											"value": "6572696F64000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20924,
											"end": 20926,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20916,
											"end": 20922,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20912,
											"end": 20927,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20905,
											"end": 20937,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20720,
											"end": 20944,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20720,
											"end": 20944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20950,
											"end": 21316,
											"name": "tag",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 20950,
											"end": 21316,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21092,
											"end": 21095,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21113,
											"end": 21180,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "616"
										},
										{
											"begin": 21177,
											"end": 21179,
											"name": "PUSH",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 21172,
											"end": 21175,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21113,
											"end": 21180,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 21113,
											"end": 21180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21113,
											"end": 21180,
											"name": "tag",
											"source": 12,
											"value": "616"
										},
										{
											"begin": 21113,
											"end": 21180,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21106,
											"end": 21180,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21106,
											"end": 21180,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21189,
											"end": 21282,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "617"
										},
										{
											"begin": 21278,
											"end": 21281,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21189,
											"end": 21282,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 21189,
											"end": 21282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21189,
											"end": 21282,
											"name": "tag",
											"source": 12,
											"value": "617"
										},
										{
											"begin": 21189,
											"end": 21282,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21307,
											"end": 21309,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 21302,
											"end": 21305,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21298,
											"end": 21310,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21291,
											"end": 21310,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21291,
											"end": 21310,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20950,
											"end": 21316,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20950,
											"end": 21316,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20950,
											"end": 21316,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20950,
											"end": 21316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21322,
											"end": 21741,
											"name": "tag",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 21322,
											"end": 21741,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21488,
											"end": 21492,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21526,
											"end": 21528,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21515,
											"end": 21524,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21511,
											"end": 21529,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21503,
											"end": 21529,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21503,
											"end": 21529,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21575,
											"end": 21584,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21569,
											"end": 21573,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21565,
											"end": 21585,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 21561,
											"end": 21562,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21550,
											"end": 21559,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21546,
											"end": 21563,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21539,
											"end": 21586,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21603,
											"end": 21734,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "619"
										},
										{
											"begin": 21729,
											"end": 21733,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21603,
											"end": 21734,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 21603,
											"end": 21734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21603,
											"end": 21734,
											"name": "tag",
											"source": 12,
											"value": "619"
										},
										{
											"begin": 21603,
											"end": 21734,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21595,
											"end": 21734,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21595,
											"end": 21734,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21322,
											"end": 21741,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21322,
											"end": 21741,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21322,
											"end": 21741,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21322,
											"end": 21741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21747,
											"end": 21916,
											"name": "tag",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 21747,
											"end": 21916,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21887,
											"end": 21908,
											"name": "PUSH",
											"source": 12,
											"value": "4C6F616E20616C72656164792072657061696400000000000000000000000000"
										},
										{
											"begin": 21883,
											"end": 21884,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21875,
											"end": 21881,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21871,
											"end": 21885,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21864,
											"end": 21909,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21747,
											"end": 21916,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21747,
											"end": 21916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21922,
											"end": 22288,
											"name": "tag",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 21922,
											"end": 22288,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22064,
											"end": 22067,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22085,
											"end": 22152,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "622"
										},
										{
											"begin": 22149,
											"end": 22151,
											"name": "PUSH",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 22144,
											"end": 22147,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22085,
											"end": 22152,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 22085,
											"end": 22152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22085,
											"end": 22152,
											"name": "tag",
											"source": 12,
											"value": "622"
										},
										{
											"begin": 22085,
											"end": 22152,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22078,
											"end": 22152,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22078,
											"end": 22152,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22161,
											"end": 22254,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "623"
										},
										{
											"begin": 22250,
											"end": 22253,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22161,
											"end": 22254,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 22161,
											"end": 22254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22161,
											"end": 22254,
											"name": "tag",
											"source": 12,
											"value": "623"
										},
										{
											"begin": 22161,
											"end": 22254,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22279,
											"end": 22281,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22274,
											"end": 22277,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22270,
											"end": 22282,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22263,
											"end": 22282,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22263,
											"end": 22282,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21922,
											"end": 22288,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21922,
											"end": 22288,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21922,
											"end": 22288,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21922,
											"end": 22288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22294,
											"end": 22713,
											"name": "tag",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 22294,
											"end": 22713,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22460,
											"end": 22464,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22498,
											"end": 22500,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22487,
											"end": 22496,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22483,
											"end": 22501,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22475,
											"end": 22501,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22475,
											"end": 22501,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22547,
											"end": 22556,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22541,
											"end": 22545,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22537,
											"end": 22557,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 22533,
											"end": 22534,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22522,
											"end": 22531,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22518,
											"end": 22535,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22511,
											"end": 22558,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22575,
											"end": 22706,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "625"
										},
										{
											"begin": 22701,
											"end": 22705,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22575,
											"end": 22706,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 22575,
											"end": 22706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22575,
											"end": 22706,
											"name": "tag",
											"source": 12,
											"value": "625"
										},
										{
											"begin": 22575,
											"end": 22706,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22567,
											"end": 22706,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22567,
											"end": 22706,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22294,
											"end": 22713,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22294,
											"end": 22713,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22294,
											"end": 22713,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22294,
											"end": 22713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22719,
											"end": 22913,
											"name": "tag",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 22719,
											"end": 22913,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22759,
											"end": 22763,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22779,
											"end": 22799,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "627"
										},
										{
											"begin": 22797,
											"end": 22798,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22779,
											"end": 22799,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 22779,
											"end": 22799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22779,
											"end": 22799,
											"name": "tag",
											"source": 12,
											"value": "627"
										},
										{
											"begin": 22779,
											"end": 22799,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22774,
											"end": 22799,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22774,
											"end": 22799,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22813,
											"end": 22833,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "628"
										},
										{
											"begin": 22831,
											"end": 22832,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22813,
											"end": 22833,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 22813,
											"end": 22833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22813,
											"end": 22833,
											"name": "tag",
											"source": 12,
											"value": "628"
										},
										{
											"begin": 22813,
											"end": 22833,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22808,
											"end": 22833,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 22808,
											"end": 22833,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22857,
											"end": 22858,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22854,
											"end": 22855,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22850,
											"end": 22859,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 22842,
											"end": 22859,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22842,
											"end": 22859,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22881,
											"end": 22882,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22875,
											"end": 22879,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22872,
											"end": 22883,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 22869,
											"end": 22906,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 22869,
											"end": 22906,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "629"
										},
										{
											"begin": 22869,
											"end": 22906,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 22886,
											"end": 22904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "630"
										},
										{
											"begin": 22886,
											"end": 22904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 22886,
											"end": 22904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22886,
											"end": 22904,
											"name": "tag",
											"source": 12,
											"value": "630"
										},
										{
											"begin": 22886,
											"end": 22904,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22869,
											"end": 22906,
											"name": "tag",
											"source": 12,
											"value": "629"
										},
										{
											"begin": 22869,
											"end": 22906,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22719,
											"end": 22913,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 22719,
											"end": 22913,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22719,
											"end": 22913,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22719,
											"end": 22913,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22719,
											"end": 22913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22919,
											"end": 23092,
											"name": "tag",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 22919,
											"end": 23092,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23059,
											"end": 23084,
											"name": "PUSH",
											"source": 12,
											"value": "4F6E6C7920626F72726F7765722063616E207265706179000000000000000000"
										},
										{
											"begin": 23055,
											"end": 23056,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23047,
											"end": 23053,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23043,
											"end": 23057,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23036,
											"end": 23085,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22919,
											"end": 23092,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22919,
											"end": 23092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23098,
											"end": 23464,
											"name": "tag",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 23098,
											"end": 23464,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23240,
											"end": 23243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23261,
											"end": 23328,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "633"
										},
										{
											"begin": 23325,
											"end": 23327,
											"name": "PUSH",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 23320,
											"end": 23323,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23261,
											"end": 23328,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 23261,
											"end": 23328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23261,
											"end": 23328,
											"name": "tag",
											"source": 12,
											"value": "633"
										},
										{
											"begin": 23261,
											"end": 23328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23254,
											"end": 23328,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23254,
											"end": 23328,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23337,
											"end": 23430,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "634"
										},
										{
											"begin": 23426,
											"end": 23429,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23337,
											"end": 23430,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 23337,
											"end": 23430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23337,
											"end": 23430,
											"name": "tag",
											"source": 12,
											"value": "634"
										},
										{
											"begin": 23337,
											"end": 23430,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23455,
											"end": 23457,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 23450,
											"end": 23453,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23446,
											"end": 23458,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23439,
											"end": 23458,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23439,
											"end": 23458,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23098,
											"end": 23464,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23098,
											"end": 23464,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23098,
											"end": 23464,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23098,
											"end": 23464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23470,
											"end": 23889,
											"name": "tag",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 23470,
											"end": 23889,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23636,
											"end": 23640,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23674,
											"end": 23676,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 23663,
											"end": 23672,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23659,
											"end": 23677,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23651,
											"end": 23677,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23651,
											"end": 23677,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23723,
											"end": 23732,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23717,
											"end": 23721,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23713,
											"end": 23733,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 23709,
											"end": 23710,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23698,
											"end": 23707,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23694,
											"end": 23711,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23687,
											"end": 23734,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23751,
											"end": 23882,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "636"
										},
										{
											"begin": 23877,
											"end": 23881,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23751,
											"end": 23882,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 23751,
											"end": 23882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23751,
											"end": 23882,
											"name": "tag",
											"source": 12,
											"value": "636"
										},
										{
											"begin": 23751,
											"end": 23882,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23743,
											"end": 23882,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23743,
											"end": 23882,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23470,
											"end": 23889,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23470,
											"end": 23889,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23470,
											"end": 23889,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23470,
											"end": 23889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23895,
											"end": 24072,
											"name": "tag",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 23895,
											"end": 24072,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24035,
											"end": 24064,
											"name": "PUSH",
											"source": 12,
											"value": "4C6F616E206D7573742062652061636365707465642066697273740000000000"
										},
										{
											"begin": 24031,
											"end": 24032,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24023,
											"end": 24029,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24019,
											"end": 24033,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24012,
											"end": 24065,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23895,
											"end": 24072,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23895,
											"end": 24072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24078,
											"end": 24444,
											"name": "tag",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 24078,
											"end": 24444,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24220,
											"end": 24223,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24241,
											"end": 24308,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "639"
										},
										{
											"begin": 24305,
											"end": 24307,
											"name": "PUSH",
											"source": 12,
											"value": "1B"
										},
										{
											"begin": 24300,
											"end": 24303,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24241,
											"end": 24308,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 24241,
											"end": 24308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24241,
											"end": 24308,
											"name": "tag",
											"source": 12,
											"value": "639"
										},
										{
											"begin": 24241,
											"end": 24308,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24234,
											"end": 24308,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24234,
											"end": 24308,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24317,
											"end": 24410,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "640"
										},
										{
											"begin": 24406,
											"end": 24409,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24317,
											"end": 24410,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 24317,
											"end": 24410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24317,
											"end": 24410,
											"name": "tag",
											"source": 12,
											"value": "640"
										},
										{
											"begin": 24317,
											"end": 24410,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24435,
											"end": 24437,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 24430,
											"end": 24433,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24426,
											"end": 24438,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24419,
											"end": 24438,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24419,
											"end": 24438,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24078,
											"end": 24444,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24078,
											"end": 24444,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24078,
											"end": 24444,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24078,
											"end": 24444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24450,
											"end": 24869,
											"name": "tag",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 24450,
											"end": 24869,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24616,
											"end": 24620,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24654,
											"end": 24656,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 24643,
											"end": 24652,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24639,
											"end": 24657,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24631,
											"end": 24657,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24631,
											"end": 24657,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24703,
											"end": 24712,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24697,
											"end": 24701,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24693,
											"end": 24713,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 24689,
											"end": 24690,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24678,
											"end": 24687,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24674,
											"end": 24691,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24667,
											"end": 24714,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 24731,
											"end": 24862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "642"
										},
										{
											"begin": 24857,
											"end": 24861,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24731,
											"end": 24862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 24731,
											"end": 24862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24731,
											"end": 24862,
											"name": "tag",
											"source": 12,
											"value": "642"
										},
										{
											"begin": 24731,
											"end": 24862,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24723,
											"end": 24862,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24723,
											"end": 24862,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24450,
											"end": 24869,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24450,
											"end": 24869,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24450,
											"end": 24869,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24450,
											"end": 24869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24875,
											"end": 25049,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 24875,
											"end": 25049,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25015,
											"end": 25041,
											"name": "PUSH",
											"source": 12,
											"value": "4F6E6C7920626F72726F7765722063616E206163636570740000000000000000"
										},
										{
											"begin": 25011,
											"end": 25012,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25003,
											"end": 25009,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24999,
											"end": 25013,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24992,
											"end": 25042,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 24875,
											"end": 25049,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24875,
											"end": 25049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25055,
											"end": 25421,
											"name": "tag",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 25055,
											"end": 25421,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25197,
											"end": 25200,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25218,
											"end": 25285,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "645"
										},
										{
											"begin": 25282,
											"end": 25284,
											"name": "PUSH",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 25277,
											"end": 25280,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25218,
											"end": 25285,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 25218,
											"end": 25285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25218,
											"end": 25285,
											"name": "tag",
											"source": 12,
											"value": "645"
										},
										{
											"begin": 25218,
											"end": 25285,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25211,
											"end": 25285,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25211,
											"end": 25285,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25294,
											"end": 25387,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "646"
										},
										{
											"begin": 25383,
											"end": 25386,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25294,
											"end": 25387,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 25294,
											"end": 25387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25294,
											"end": 25387,
											"name": "tag",
											"source": 12,
											"value": "646"
										},
										{
											"begin": 25294,
											"end": 25387,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25412,
											"end": 25414,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 25407,
											"end": 25410,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25403,
											"end": 25415,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25396,
											"end": 25415,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25396,
											"end": 25415,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25055,
											"end": 25421,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25055,
											"end": 25421,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25055,
											"end": 25421,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25055,
											"end": 25421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25427,
											"end": 25846,
											"name": "tag",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 25427,
											"end": 25846,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25593,
											"end": 25597,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25631,
											"end": 25633,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 25620,
											"end": 25629,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25616,
											"end": 25634,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25608,
											"end": 25634,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25608,
											"end": 25634,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25680,
											"end": 25689,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25674,
											"end": 25678,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25670,
											"end": 25690,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 25666,
											"end": 25667,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25655,
											"end": 25664,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25651,
											"end": 25668,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25644,
											"end": 25691,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 25708,
											"end": 25839,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "648"
										},
										{
											"begin": 25834,
											"end": 25838,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25708,
											"end": 25839,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 25708,
											"end": 25839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25708,
											"end": 25839,
											"name": "tag",
											"source": 12,
											"value": "648"
										},
										{
											"begin": 25708,
											"end": 25839,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25700,
											"end": 25839,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25700,
											"end": 25839,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25427,
											"end": 25846,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25427,
											"end": 25846,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25427,
											"end": 25846,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25427,
											"end": 25846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25852,
											"end": 26023,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 25852,
											"end": 26023,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25992,
											"end": 26015,
											"name": "PUSH",
											"source": 12,
											"value": "4C6F616E20616C72656164792061636365707465640000000000000000000000"
										},
										{
											"begin": 25988,
											"end": 25989,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25980,
											"end": 25986,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25976,
											"end": 25990,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25969,
											"end": 26016,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 25852,
											"end": 26023,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25852,
											"end": 26023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26029,
											"end": 26395,
											"name": "tag",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 26029,
											"end": 26395,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26171,
											"end": 26174,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26192,
											"end": 26259,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "651"
										},
										{
											"begin": 26256,
											"end": 26258,
											"name": "PUSH",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 26251,
											"end": 26254,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 26192,
											"end": 26259,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 26192,
											"end": 26259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26192,
											"end": 26259,
											"name": "tag",
											"source": 12,
											"value": "651"
										},
										{
											"begin": 26192,
											"end": 26259,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26185,
											"end": 26259,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 26185,
											"end": 26259,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26268,
											"end": 26361,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "652"
										},
										{
											"begin": 26357,
											"end": 26360,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26268,
											"end": 26361,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 26268,
											"end": 26361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26268,
											"end": 26361,
											"name": "tag",
											"source": 12,
											"value": "652"
										},
										{
											"begin": 26268,
											"end": 26361,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26386,
											"end": 26388,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 26381,
											"end": 26384,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26377,
											"end": 26389,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26370,
											"end": 26389,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26370,
											"end": 26389,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26029,
											"end": 26395,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 26029,
											"end": 26395,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26029,
											"end": 26395,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26029,
											"end": 26395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26401,
											"end": 26820,
											"name": "tag",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 26401,
											"end": 26820,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26567,
											"end": 26571,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26605,
											"end": 26607,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 26594,
											"end": 26603,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26590,
											"end": 26608,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26582,
											"end": 26608,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26582,
											"end": 26608,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26654,
											"end": 26663,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26648,
											"end": 26652,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26644,
											"end": 26664,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 26640,
											"end": 26641,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26629,
											"end": 26638,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 26625,
											"end": 26642,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26618,
											"end": 26665,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 26682,
											"end": 26813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "654"
										},
										{
											"begin": 26808,
											"end": 26812,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26682,
											"end": 26813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 26682,
											"end": 26813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26682,
											"end": 26813,
											"name": "tag",
											"source": 12,
											"value": "654"
										},
										{
											"begin": 26682,
											"end": 26813,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26674,
											"end": 26813,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26674,
											"end": 26813,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26401,
											"end": 26820,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 26401,
											"end": 26820,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26401,
											"end": 26820,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26401,
											"end": 26820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26826,
											"end": 26998,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 26826,
											"end": 26998,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26966,
											"end": 26990,
											"name": "PUSH",
											"source": 12,
											"value": "4F6E6C79206C656E6465722063616E2063616E63656C00000000000000000000"
										},
										{
											"begin": 26962,
											"end": 26963,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26954,
											"end": 26960,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26950,
											"end": 26964,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26943,
											"end": 26991,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 26826,
											"end": 26998,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26826,
											"end": 26998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27004,
											"end": 27370,
											"name": "tag",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 27004,
											"end": 27370,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27146,
											"end": 27149,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27167,
											"end": 27234,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "657"
										},
										{
											"begin": 27231,
											"end": 27233,
											"name": "PUSH",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 27226,
											"end": 27229,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 27167,
											"end": 27234,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 27167,
											"end": 27234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27167,
											"end": 27234,
											"name": "tag",
											"source": 12,
											"value": "657"
										},
										{
											"begin": 27167,
											"end": 27234,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27160,
											"end": 27234,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27160,
											"end": 27234,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27243,
											"end": 27336,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "658"
										},
										{
											"begin": 27332,
											"end": 27335,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27243,
											"end": 27336,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 27243,
											"end": 27336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27243,
											"end": 27336,
											"name": "tag",
											"source": 12,
											"value": "658"
										},
										{
											"begin": 27243,
											"end": 27336,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27361,
											"end": 27363,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 27356,
											"end": 27359,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27352,
											"end": 27364,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27345,
											"end": 27364,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27345,
											"end": 27364,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27004,
											"end": 27370,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27004,
											"end": 27370,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27004,
											"end": 27370,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27004,
											"end": 27370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27376,
											"end": 27795,
											"name": "tag",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 27376,
											"end": 27795,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27542,
											"end": 27546,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27580,
											"end": 27582,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 27569,
											"end": 27578,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27565,
											"end": 27583,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27557,
											"end": 27583,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27557,
											"end": 27583,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27629,
											"end": 27638,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 27623,
											"end": 27627,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 27619,
											"end": 27639,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 27615,
											"end": 27616,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27604,
											"end": 27613,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 27600,
											"end": 27617,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27593,
											"end": 27640,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 27657,
											"end": 27788,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "660"
										},
										{
											"begin": 27783,
											"end": 27787,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 27657,
											"end": 27788,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 27657,
											"end": 27788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27657,
											"end": 27788,
											"name": "tag",
											"source": 12,
											"value": "660"
										},
										{
											"begin": 27657,
											"end": 27788,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27649,
											"end": 27788,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27649,
											"end": 27788,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27376,
											"end": 27795,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27376,
											"end": 27795,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27376,
											"end": 27795,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27376,
											"end": 27795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27801,
											"end": 27973,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 27801,
											"end": 27973,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27941,
											"end": 27965,
											"name": "PUSH",
											"source": 12,
											"value": "4C6F616E20616C72656164792063616E63656C6C656400000000000000000000"
										},
										{
											"begin": 27937,
											"end": 27938,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27929,
											"end": 27935,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27925,
											"end": 27939,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27918,
											"end": 27966,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 27801,
											"end": 27973,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27801,
											"end": 27973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27979,
											"end": 28345,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 27979,
											"end": 28345,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28121,
											"end": 28124,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28142,
											"end": 28209,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "663"
										},
										{
											"begin": 28206,
											"end": 28208,
											"name": "PUSH",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 28201,
											"end": 28204,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 28142,
											"end": 28209,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 28142,
											"end": 28209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28142,
											"end": 28209,
											"name": "tag",
											"source": 12,
											"value": "663"
										},
										{
											"begin": 28142,
											"end": 28209,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28135,
											"end": 28209,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 28135,
											"end": 28209,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28218,
											"end": 28311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "664"
										},
										{
											"begin": 28307,
											"end": 28310,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28218,
											"end": 28311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 28218,
											"end": 28311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28218,
											"end": 28311,
											"name": "tag",
											"source": 12,
											"value": "664"
										},
										{
											"begin": 28218,
											"end": 28311,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28336,
											"end": 28338,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 28331,
											"end": 28334,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28327,
											"end": 28339,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28320,
											"end": 28339,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28320,
											"end": 28339,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27979,
											"end": 28345,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27979,
											"end": 28345,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27979,
											"end": 28345,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27979,
											"end": 28345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28351,
											"end": 28770,
											"name": "tag",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 28351,
											"end": 28770,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28517,
											"end": 28521,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28555,
											"end": 28557,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 28544,
											"end": 28553,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28540,
											"end": 28558,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28532,
											"end": 28558,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28532,
											"end": 28558,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28604,
											"end": 28613,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 28598,
											"end": 28602,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 28594,
											"end": 28614,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 28590,
											"end": 28591,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28579,
											"end": 28588,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 28575,
											"end": 28592,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28568,
											"end": 28615,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 28632,
											"end": 28763,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "666"
										},
										{
											"begin": 28758,
											"end": 28762,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 28632,
											"end": 28763,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 28632,
											"end": 28763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28632,
											"end": 28763,
											"name": "tag",
											"source": 12,
											"value": "666"
										},
										{
											"begin": 28632,
											"end": 28763,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28624,
											"end": 28763,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28624,
											"end": 28763,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28351,
											"end": 28770,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 28351,
											"end": 28770,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28351,
											"end": 28770,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28351,
											"end": 28770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28776,
											"end": 28956,
											"name": "tag",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 28776,
											"end": 28956,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28916,
											"end": 28948,
											"name": "PUSH",
											"source": 12,
											"value": "43616E6E6F742063616E63656C20616E206163636570746564206C6F616E0000"
										},
										{
											"begin": 28912,
											"end": 28913,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28904,
											"end": 28910,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28900,
											"end": 28914,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28893,
											"end": 28949,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 28776,
											"end": 28956,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28776,
											"end": 28956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28962,
											"end": 29328,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 28962,
											"end": 29328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29104,
											"end": 29107,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29125,
											"end": 29192,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "669"
										},
										{
											"begin": 29189,
											"end": 29191,
											"name": "PUSH",
											"source": 12,
											"value": "1E"
										},
										{
											"begin": 29184,
											"end": 29187,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 29125,
											"end": 29192,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 29125,
											"end": 29192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29125,
											"end": 29192,
											"name": "tag",
											"source": 12,
											"value": "669"
										},
										{
											"begin": 29125,
											"end": 29192,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29118,
											"end": 29192,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 29118,
											"end": 29192,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29201,
											"end": 29294,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "670"
										},
										{
											"begin": 29290,
											"end": 29293,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29201,
											"end": 29294,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 29201,
											"end": 29294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29201,
											"end": 29294,
											"name": "tag",
											"source": 12,
											"value": "670"
										},
										{
											"begin": 29201,
											"end": 29294,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29319,
											"end": 29321,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 29314,
											"end": 29317,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29310,
											"end": 29322,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 29303,
											"end": 29322,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29303,
											"end": 29322,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28962,
											"end": 29328,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 28962,
											"end": 29328,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28962,
											"end": 29328,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28962,
											"end": 29328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29334,
											"end": 29753,
											"name": "tag",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 29334,
											"end": 29753,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29500,
											"end": 29504,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29538,
											"end": 29540,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 29527,
											"end": 29536,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29523,
											"end": 29541,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 29515,
											"end": 29541,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29515,
											"end": 29541,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29587,
											"end": 29596,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 29581,
											"end": 29585,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 29577,
											"end": 29597,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 29573,
											"end": 29574,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29562,
											"end": 29571,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 29558,
											"end": 29575,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 29551,
											"end": 29598,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 29615,
											"end": 29746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "672"
										},
										{
											"begin": 29741,
											"end": 29745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 29615,
											"end": 29746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 29615,
											"end": 29746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29615,
											"end": 29746,
											"name": "tag",
											"source": 12,
											"value": "672"
										},
										{
											"begin": 29615,
											"end": 29746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29607,
											"end": 29746,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29607,
											"end": 29746,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29334,
											"end": 29753,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 29334,
											"end": 29753,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29334,
											"end": 29753,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29334,
											"end": 29753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29759,
											"end": 30201,
											"name": "tag",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 29759,
											"end": 30201,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29908,
											"end": 29912,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29946,
											"end": 29948,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 29935,
											"end": 29944,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29931,
											"end": 29949,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 29923,
											"end": 29949,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29923,
											"end": 29949,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29959,
											"end": 30030,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "674"
										},
										{
											"begin": 30027,
											"end": 30028,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 30016,
											"end": 30025,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 30012,
											"end": 30029,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 30003,
											"end": 30009,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 29959,
											"end": 30030,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 29959,
											"end": 30030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29959,
											"end": 30030,
											"name": "tag",
											"source": 12,
											"value": "674"
										},
										{
											"begin": 29959,
											"end": 30030,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30040,
											"end": 30112,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "675"
										},
										{
											"begin": 30108,
											"end": 30110,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 30097,
											"end": 30106,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 30093,
											"end": 30111,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 30084,
											"end": 30090,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 30040,
											"end": 30112,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 30040,
											"end": 30112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 30040,
											"end": 30112,
											"name": "tag",
											"source": 12,
											"value": "675"
										},
										{
											"begin": 30040,
											"end": 30112,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30122,
											"end": 30194,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "676"
										},
										{
											"begin": 30190,
											"end": 30192,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 30179,
											"end": 30188,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 30175,
											"end": 30193,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 30166,
											"end": 30172,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 30122,
											"end": 30194,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 30122,
											"end": 30194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 30122,
											"end": 30194,
											"name": "tag",
											"source": 12,
											"value": "676"
										},
										{
											"begin": 30122,
											"end": 30194,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29759,
											"end": 30201,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 29759,
											"end": 30201,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 29759,
											"end": 30201,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29759,
											"end": 30201,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29759,
											"end": 30201,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29759,
											"end": 30201,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29759,
											"end": 30201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 30207,
											"end": 30649,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 30207,
											"end": 30649,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30356,
											"end": 30360,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 30394,
											"end": 30396,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 30383,
											"end": 30392,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 30379,
											"end": 30397,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 30371,
											"end": 30397,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 30371,
											"end": 30397,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30407,
											"end": 30478,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "678"
										},
										{
											"begin": 30475,
											"end": 30476,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 30464,
											"end": 30473,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 30460,
											"end": 30477,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 30451,
											"end": 30457,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 30407,
											"end": 30478,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 30407,
											"end": 30478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 30407,
											"end": 30478,
											"name": "tag",
											"source": 12,
											"value": "678"
										},
										{
											"begin": 30407,
											"end": 30478,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30488,
											"end": 30560,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "679"
										},
										{
											"begin": 30556,
											"end": 30558,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 30545,
											"end": 30554,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 30541,
											"end": 30559,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 30532,
											"end": 30538,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 30488,
											"end": 30560,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 30488,
											"end": 30560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 30488,
											"end": 30560,
											"name": "tag",
											"source": 12,
											"value": "679"
										},
										{
											"begin": 30488,
											"end": 30560,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30570,
											"end": 30642,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "680"
										},
										{
											"begin": 30638,
											"end": 30640,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 30627,
											"end": 30636,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 30623,
											"end": 30641,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 30614,
											"end": 30620,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 30570,
											"end": 30642,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 30570,
											"end": 30642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 30570,
											"end": 30642,
											"name": "tag",
											"source": 12,
											"value": "680"
										},
										{
											"begin": 30570,
											"end": 30642,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30207,
											"end": 30649,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 30207,
											"end": 30649,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 30207,
											"end": 30649,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30207,
											"end": 30649,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30207,
											"end": 30649,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30207,
											"end": 30649,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30207,
											"end": 30649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 30655,
											"end": 30987,
											"name": "tag",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 30655,
											"end": 30987,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30776,
											"end": 30780,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 30814,
											"end": 30816,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 30803,
											"end": 30812,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 30799,
											"end": 30817,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 30791,
											"end": 30817,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 30791,
											"end": 30817,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30827,
											"end": 30898,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "682"
										},
										{
											"begin": 30895,
											"end": 30896,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 30884,
											"end": 30893,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 30880,
											"end": 30897,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 30871,
											"end": 30877,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 30827,
											"end": 30898,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 30827,
											"end": 30898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 30827,
											"end": 30898,
											"name": "tag",
											"source": 12,
											"value": "682"
										},
										{
											"begin": 30827,
											"end": 30898,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30908,
											"end": 30980,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "683"
										},
										{
											"begin": 30976,
											"end": 30978,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 30965,
											"end": 30974,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 30961,
											"end": 30979,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 30952,
											"end": 30958,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 30908,
											"end": 30980,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 30908,
											"end": 30980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 30908,
											"end": 30980,
											"name": "tag",
											"source": 12,
											"value": "683"
										},
										{
											"begin": 30908,
											"end": 30980,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30655,
											"end": 30987,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 30655,
											"end": 30987,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 30655,
											"end": 30987,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30655,
											"end": 30987,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30655,
											"end": 30987,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30655,
											"end": 30987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"main.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"acceptLoan(uint256)": "adfbe22f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"cancelLoan(uint256)": "bdbfa3de",
							"checkDefault(uint256)": "759135a1",
							"decimals()": "313ce567",
							"isNFTBurned(uint256)": "c2fdbdad",
							"issueLoan(address,uint256,uint256,string)": "1a2ff598",
							"kycVerified(address)": "a5410a66",
							"loans(uint256)": "e1ec3c68",
							"name()": "06fdde03",
							"nextLoanId()": "87c51459",
							"nextTokenId()": "75794a3c",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"repayLoan(uint256)": "ab7b1c89",
							"symbol()": "95d89b41",
							"timeUntilDue(uint256)": "a6f5b3b3",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"verifyKYC(address)": "38d16011"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"DefaultedLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"KYCVerified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"LoanAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"LoanCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"interestAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nftTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dueDate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"terms\",\"type\":\"string\"}],\"name\":\"LoanIssued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"LoanRepaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nftTokenId\",\"type\":\"uint256\"}],\"name\":\"NFTBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"acceptLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"cancelLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"checkDefault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftTokenId\",\"type\":\"uint256\"}],\"name\":\"isNFTBurned\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"terms\",\"type\":\"string\"}],\"name\":\"issueLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"kycVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loans\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dueDate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"repaid\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"accepted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"canceled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"nftTokenId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isNFTBurned\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"terms\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextLoanId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"repayLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"timeUntilDue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"verifyKYC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"main.sol\":\"CreditToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"main.sol\":{\"keccak256\":\"0x9091c697b8d33782f13e5052ed3ed173990e2c30115c82b07791844e3f3bc428\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://61312b6a20059babb601abf4885149d1563df9841ae1646300ffd2452867fa41\",\"dweb:/ipfs/QmRRSuHzGVysfrfoFatPiURpkuXDT9EYQM9CFbWpAykuBU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 397,
								"contract": "main.sol:CreditToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 403,
								"contract": "main.sol:CreditToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 405,
								"contract": "main.sol:CreditToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 407,
								"contract": "main.sol:CreditToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 409,
								"contract": "main.sol:CreditToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "main.sol:CreditToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1460,
								"contract": "main.sol:CreditToken",
								"label": "nextTokenId",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1490,
								"contract": "main.sol:CreditToken",
								"label": "loans",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_struct(Loan)1485_storage)"
							},
							{
								"astId": 1494,
								"contract": "main.sol:CreditToken",
								"label": "kycVerified",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1497,
								"contract": "main.sol:CreditToken",
								"label": "nextLoanId",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(Loan)1485_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct CreditToken.Loan)",
								"numberOfBytes": "32",
								"value": "t_struct(Loan)1485_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Loan)1485_storage": {
								"encoding": "inplace",
								"label": "struct CreditToken.Loan",
								"members": [
									{
										"astId": 1462,
										"contract": "main.sol:CreditToken",
										"label": "borrower",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1464,
										"contract": "main.sol:CreditToken",
										"label": "lender",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 1466,
										"contract": "main.sol:CreditToken",
										"label": "amount",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1468,
										"contract": "main.sol:CreditToken",
										"label": "interestAmount",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1470,
										"contract": "main.sol:CreditToken",
										"label": "loanDuration",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1472,
										"contract": "main.sol:CreditToken",
										"label": "dueDate",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1474,
										"contract": "main.sol:CreditToken",
										"label": "repaid",
										"offset": 0,
										"slot": "6",
										"type": "t_bool"
									},
									{
										"astId": 1476,
										"contract": "main.sol:CreditToken",
										"label": "accepted",
										"offset": 1,
										"slot": "6",
										"type": "t_bool"
									},
									{
										"astId": 1478,
										"contract": "main.sol:CreditToken",
										"label": "canceled",
										"offset": 2,
										"slot": "6",
										"type": "t_bool"
									},
									{
										"astId": 1480,
										"contract": "main.sol:CreditToken",
										"label": "nftTokenId",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 1482,
										"contract": "main.sol:CreditToken",
										"label": "isNFTBurned",
										"offset": 0,
										"slot": "8",
										"type": "t_bool"
									},
									{
										"astId": 1484,
										"contract": "main.sol:CreditToken",
										"label": "terms",
										"offset": 0,
										"slot": "9",
										"type": "t_string_storage"
									}
								],
								"numberOfBytes": "320"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1432
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1433,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1432,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1432,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1432
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1414,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1414,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							1444
						],
						"IERC20": [
							967
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 967,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1444,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 967,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1444,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								1444,
								967
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								901,
								910
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1444
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 1445,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1444,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							967
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 968,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 967,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							374
						],
						"IERC20Errors": [
							279
						],
						"IERC721Errors": [
							327
						]
					},
					"id": 375,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:4",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 279,
							"linearizedBaseContracts": [
								279
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 249,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "654:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "670:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "687:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:4"
									},
									"src": "623:80:4"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 254,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "891:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:4"
									},
									"src": "866:41:4"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 259,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "1104:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:4"
									},
									"src": "1077:45:4"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:4",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 268,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1511:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1528:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1547:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:4"
									},
									"src": "1478:85:4"
								},
								{
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 273,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "1775:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:4"
									},
									"src": "1748:45:4"
								},
								{
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:4",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 278,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2025:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:4"
									},
									"src": "1999:43:4"
								}
							],
							"scope": 375,
							"src": "280:1764:4",
							"usedErrors": [
								249,
								254,
								259,
								268,
								273,
								278
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 280,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:4",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 327,
							"linearizedBaseContracts": [
								327
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:4",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 285,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "2469:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:4"
									},
									"src": "2444:40:4"
								},
								{
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:4",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 290,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "2656:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:4"
									},
									"src": "2627:46:4"
								},
								{
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:4",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 299,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "3000:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "3016:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "3033:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:4"
									},
									"src": "2973:75:4"
								},
								{
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 304,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "3237:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:4"
									},
									"src": "3211:42:4"
								},
								{
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 309,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "3451:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:4"
									},
									"src": "3423:46:4"
								},
								{
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 316,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "3760:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "3778:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:4"
									},
									"src": "3727:68:4"
								},
								{
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 321,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "4008:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:4"
									},
									"src": "3980:46:4"
								},
								{
									"documentation": {
										"id": 322,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 326,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "4262:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:4"
									},
									"src": "4234:46:4"
								}
							],
							"scope": 375,
							"src": "2190:2092:4",
							"usedErrors": [
								285,
								290,
								299,
								304,
								309,
								316,
								321,
								326
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 328,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:4",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 374,
							"linearizedBaseContracts": [
								374
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 339,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "4860:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "4876:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "4893:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "4909:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:4"
									},
									"src": "4827:99:4"
								},
								{
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 344,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "5116:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:4"
									},
									"src": "5089:43:4"
								},
								{
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 349,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "5331:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:4"
									},
									"src": "5302:47:4"
								},
								{
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 356,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "5651:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "5669:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:4"
									},
									"src": "5616:68:4"
								},
								{
									"documentation": {
										"id": 357,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 361,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "5898:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:4"
									},
									"src": "5869:47:4"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 366,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "6153:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:4"
									},
									"src": "6124:47:4"
								},
								{
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:4",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 373,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "6494:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "6513:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:4"
									},
									"src": "6462:73:4"
								}
							],
							"scope": 375,
							"src": "4430:2107:4",
							"usedErrors": [
								339,
								344,
								349,
								356,
								361,
								366,
								373
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1432
						],
						"ERC20": [
							889
						],
						"IERC20": [
							967
						],
						"IERC20Errors": [
							279
						],
						"IERC20Metadata": [
							993
						]
					},
					"id": 890,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 376,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 378,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 890,
							"sourceUnit": 968,
							"src": "131:36:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 377,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 967,
										"src": "139:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 380,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 890,
							"sourceUnit": 994,
							"src": "168:63:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 379,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 993,
										"src": "176:14:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 382,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 890,
							"sourceUnit": 1433,
							"src": "232:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 381,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1432,
										"src": "240:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 890,
							"sourceUnit": 375,
							"src": "281:65:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 383,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 279,
										"src": "289:12:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 386,
										"name": "Context",
										"nameLocations": [
											"1133:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1432,
										"src": "1133:7:5"
									},
									"id": 387,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:5"
								},
								{
									"baseName": {
										"id": 388,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 967,
										"src": "1142:6:5"
									},
									"id": 389,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:5"
								},
								{
									"baseName": {
										"id": 390,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 993,
										"src": "1150:14:5"
									},
									"id": 391,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:5"
								},
								{
									"baseName": {
										"id": 392,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 279,
										"src": "1166:12:5"
									},
									"id": 393,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:5"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 385,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:5",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 889,
							"linearizedBaseContracts": [
								889,
								279,
								993,
								967,
								1432
							],
							"name": "ERC20",
							"nameLocation": "1124:5:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 397,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 889,
									"src": "1185:53:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 396,
										"keyName": "account",
										"keyNameLocation": "1201:7:5",
										"keyType": {
											"id": 394,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 395,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 403,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 889,
									"src": "1245:83:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 402,
										"keyName": "account",
										"keyNameLocation": "1261:7:5",
										"keyType": {
											"id": 398,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 401,
											"keyName": "spender",
											"keyNameLocation": "1288:7:5",
											"keyType": {
												"id": 399,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 400,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 405,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 889,
									"src": "1335:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 404,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 407,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 889,
									"src": "1370:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 406,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 409,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 889,
									"src": "1396:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 408,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "1657:57:5",
										"statements": [
											{
												"expression": {
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 417,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "1667:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 418,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "1675:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:5"
											},
											{
												"expression": {
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 421,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "1690:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 422,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "1700:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:5"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:5",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 426,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "1613:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 411,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "1634:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 413,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:5"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:5"
									},
									"scope": 889,
									"src": "1601:113:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										980
									],
									"body": {
										"id": 434,
										"nodeType": "Block",
										"src": "1839:29:5",
										"statements": [
											{
												"expression": {
													"id": 432,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 407,
													"src": "1856:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 431,
												"id": 433,
												"nodeType": "Return",
												"src": "1849:12:5"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:5"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "1824:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 429,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:5"
									},
									"scope": 889,
									"src": "1779:89:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										986
									],
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "2043:31:5",
										"statements": [
											{
												"expression": {
													"id": 441,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 409,
													"src": "2060:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 440,
												"id": 442,
												"nodeType": "Return",
												"src": "2053:14:5"
											}
										]
									},
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:5",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:5"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "2028:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 438,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:5"
									},
									"scope": 889,
									"src": "1981:93:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										992
									],
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "2763:26:5",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 449,
												"id": 451,
												"nodeType": "Return",
												"src": "2773:9:5"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:5",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:5"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "2756:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 447,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:5"
									},
									"scope": 889,
									"src": "2707:82:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										916
									],
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "2910:36:5",
										"statements": [
											{
												"expression": {
													"id": 459,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 405,
													"src": "2927:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 458,
												"id": 460,
												"nodeType": "Return",
												"src": "2920:19:5"
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:5",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:5"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "2901:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:5"
									},
									"scope": 889,
									"src": "2849:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										924
									],
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "3078:42:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 470,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "3095:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 472,
													"indexExpression": {
														"id": 471,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "3105:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 469,
												"id": 473,
												"nodeType": "Return",
												"src": "3088:25:5"
											}
										]
									},
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:5",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "3023:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:5"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "3069:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:5"
									},
									"scope": 889,
									"src": "3004:116:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										934
									],
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "3390:103:5",
										"statements": [
											{
												"assignments": [
													486
												],
												"declarations": [
													{
														"constant": false,
														"id": 486,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 498,
														"src": "3400:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 485,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 489,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 487,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "3416:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 491,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "3448:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 492,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "3455:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 493,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "3459:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 490,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "3438:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 484,
												"id": 497,
												"nodeType": "Return",
												"src": "3475:11:5"
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:5",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "3333:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "3345:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:5"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "3384:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 482,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:5"
									},
									"scope": 889,
									"src": "3315:178:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										944
									],
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "3640:51:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 509,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "3657:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 511,
														"indexExpression": {
															"id": 510,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "3669:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 513,
													"indexExpression": {
														"id": 512,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "3676:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 508,
												"id": 514,
												"nodeType": "Return",
												"src": "3650:34:5"
											}
										]
									},
									"documentation": {
										"id": 500,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:5",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "3570:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "3585:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:5"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "3631:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:5"
									},
									"scope": 889,
									"src": "3551:140:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										954
									],
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "4077:107:5",
										"statements": [
											{
												"assignments": [
													527
												],
												"declarations": [
													{
														"constant": false,
														"id": 527,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 539,
														"src": "4087:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 526,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 530,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 528,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "4103:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 532,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "4134:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "4141:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "4150:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 531,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															780,
															840
														],
														"referencedDeclaration": 780,
														"src": "4125:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 525,
												"id": 538,
												"nodeType": "Return",
												"src": "4166:11:5"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:5",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "4015:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "4032:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:5"
									},
									"returnParameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "4071:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 523,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:5"
									},
									"scope": 889,
									"src": "3998:186:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										966
									],
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "4869:151:5",
										"statements": [
											{
												"assignments": [
													553
												],
												"declarations": [
													{
														"constant": false,
														"id": 553,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 571,
														"src": "4879:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 552,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 556,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 554,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "4897:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 558,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "4935:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 559,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "4941:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 560,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "4950:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 557,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "4919:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 564,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "4976:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 565,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "4982:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 566,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "4986:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 563,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "4966:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 551,
												"id": 570,
												"nodeType": "Return",
												"src": "5002:11:5"
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:5",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "4798:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "4812:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "4824:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:5"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "4863:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 549,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:5"
									},
									"scope": 889,
									"src": "4776:244:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "5462:231:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 582,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "5476:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 583,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 596,
												"nodeType": "IfStatement",
												"src": "5472:86:5",
												"trueBody": {
													"id": 595,
													"nodeType": "Block",
													"src": "5496:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 591,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 590,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 589,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 588,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "5517:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 594,
															"nodeType": "RevertStatement",
															"src": "5510:37:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 597,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "5571:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 598,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 611,
												"nodeType": "IfStatement",
												"src": "5567:86:5",
												"trueBody": {
													"id": 610,
													"nodeType": "Block",
													"src": "5589:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 606,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 604,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 603,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "5610:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 609,
															"nodeType": "RevertStatement",
															"src": "5603:39:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 613,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "5670:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 614,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "5676:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 615,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "5680:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 612,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "5662:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:5"
											}
										]
									},
									"documentation": {
										"id": 573,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "5412:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "5426:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "5438:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:5"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:5"
									},
									"scope": 889,
									"src": "5393:300:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "6083:1032:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 629,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "6097:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 630,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 633,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 666,
													"nodeType": "Block",
													"src": "6271:362:5",
													"statements": [
														{
															"assignments": [
																641
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 641,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 666,
																	"src": "6285:19:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 640,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 645,
															"initialValue": {
																"baseExpression": {
																	"id": 642,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 397,
																	"src": "6307:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 644,
																"indexExpression": {
																	"id": 643,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 622,
																	"src": "6317:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 646,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 641,
																	"src": "6340:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 647,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "6354:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 656,
															"nodeType": "IfStatement",
															"src": "6336:115:5",
															"trueBody": {
																"id": 655,
																"nodeType": "Block",
																"src": "6361:90:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 650,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 622,
																					"src": "6411:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 651,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 641,
																					"src": "6417:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 652,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 626,
																					"src": "6430:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 649,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 249,
																				"src": "6386:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 653,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 654,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:5"
																	}
																]
															}
														},
														{
															"id": 665,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:5",
															"statements": [
																{
																	"expression": {
																		"id": 663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 657,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 397,
																				"src": "6571:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 659,
																			"indexExpression": {
																				"id": 658,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 622,
																				"src": "6581:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 662,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 660,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 641,
																				"src": "6589:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 661,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 626,
																				"src": "6603:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 664,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:5"
																}
															]
														}
													]
												},
												"id": 667,
												"nodeType": "IfStatement",
												"src": "6093:540:5",
												"trueBody": {
													"id": 639,
													"nodeType": "Block",
													"src": "6117:148:5",
													"statements": [
														{
															"expression": {
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 635,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "6233:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 636,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "6249:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 638,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 668,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "6647:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 669,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 672,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "6862:206:5",
													"statements": [
														{
															"id": 686,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:5",
															"statements": [
																{
																	"expression": {
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 680,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 397,
																				"src": "7021:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 682,
																			"indexExpression": {
																				"id": 681,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 624,
																				"src": "7031:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 683,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 626,
																			"src": "7038:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 685,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:5"
																}
															]
														}
													]
												},
												"id": 688,
												"nodeType": "IfStatement",
												"src": "6643:425:5",
												"trueBody": {
													"id": 679,
													"nodeType": "Block",
													"src": "6665:191:5",
													"statements": [
														{
															"id": 678,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:5",
															"statements": [
																{
																	"expression": {
																		"id": 676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 674,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 405,
																			"src": "6810:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 675,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 626,
																			"src": "6826:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 677,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:5"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 690,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "7092:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 691,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "7098:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 692,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "7102:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 689,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "7083:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 694,
												"nodeType": "EmitStatement",
												"src": "7078:30:5"
											}
										]
									},
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:5",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "6025:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "6039:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "6051:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:5"
									},
									"returnParameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:5"
									},
									"scope": 889,
									"src": "6008:1107:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "7514:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 704,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 699,
														"src": "7528:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 705,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 708,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 718,
												"nodeType": "IfStatement",
												"src": "7524:91:5",
												"trueBody": {
													"id": 717,
													"nodeType": "Block",
													"src": "7551:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 713,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 712,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 711,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 710,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "7572:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 716,
															"nodeType": "RevertStatement",
															"src": "7565:39:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 720,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 724,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "7644:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 725,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "7653:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 719,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "7624:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 727,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:5"
											}
										]
									},
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:5",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "7473:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "7490:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:5"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:5"
									},
									"scope": 889,
									"src": "7458:208:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "8040:150:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 737,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 732,
														"src": "8054:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 738,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 741,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 751,
												"nodeType": "IfStatement",
												"src": "8050:89:5",
												"trueBody": {
													"id": 750,
													"nodeType": "Block",
													"src": "8077:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 746,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 744,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 743,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "8098:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 749,
															"nodeType": "RevertStatement",
															"src": "8091:37:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 753,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "8156:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 755,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 754,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 758,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "8177:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 752,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "8148:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:5"
											}
										]
									},
									"documentation": {
										"id": 730,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:5",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "7999:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "8016:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:5"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:5"
									},
									"scope": 889,
									"src": "7984:206:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "8800:54:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 773,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "8819:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 774,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "8826:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 775,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "8835:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 772,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															780,
															840
														],
														"referencedDeclaration": 840,
														"src": "8810:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:5"
											}
										]
									},
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:5",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "8744:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "8759:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "8776:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:5"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:5"
									},
									"scope": 889,
									"src": "8726:128:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 839,
										"nodeType": "Block",
										"src": "9799:334:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 792,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "9813:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 793,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 796,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 806,
												"nodeType": "IfStatement",
												"src": "9809:89:5",
												"trueBody": {
													"id": 805,
													"nodeType": "Block",
													"src": "9834:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 801,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 799,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 798,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 273,
																	"src": "9855:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 804,
															"nodeType": "RevertStatement",
															"src": "9848:39:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 807,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "9911:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 808,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 811,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 821,
												"nodeType": "IfStatement",
												"src": "9907:90:5",
												"trueBody": {
													"id": 820,
													"nodeType": "Block",
													"src": "9934:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 816,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 815,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 814,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 813,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "9955:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 819,
															"nodeType": "RevertStatement",
															"src": "9948:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 822,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "10006:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 825,
															"indexExpression": {
																"id": 823,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 783,
																"src": "10018:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 826,
														"indexExpression": {
															"id": 824,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "10025:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 827,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "10036:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 829,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:5"
											},
											{
												"condition": {
													"id": 830,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 789,
													"src": "10055:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 838,
												"nodeType": "IfStatement",
												"src": "10051:76:5",
												"trueBody": {
													"id": 837,
													"nodeType": "Block",
													"src": "10066:61:5",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 832,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 783,
																		"src": "10094:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 833,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 785,
																		"src": "10101:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 834,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 787,
																		"src": "10110:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 831,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "10085:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 836,
															"nodeType": "EmitStatement",
															"src": "10080:36:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:5",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "9719:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "9734:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "9751:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "9766:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 788,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:5"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:5"
									},
									"scope": 889,
									"src": "9701:432:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "10504:387:5",
										"statements": [
											{
												"assignments": [
													851
												],
												"declarations": [
													{
														"constant": false,
														"id": 851,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:5",
														"nodeType": "VariableDeclaration",
														"scope": 887,
														"src": "10514:24:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 850,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 856,
												"initialValue": {
													"arguments": [
														{
															"id": 853,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "10551:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 854,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 845,
															"src": "10558:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 852,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "10541:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 857,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "10580:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 859,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 858,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 862,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 886,
												"nodeType": "IfStatement",
												"src": "10576:309:5",
												"trueBody": {
													"id": 885,
													"nodeType": "Block",
													"src": "10618:267:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 864,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 851,
																	"src": "10636:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 865,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 847,
																	"src": "10655:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 874,
															"nodeType": "IfStatement",
															"src": "10632:130:5",
															"trueBody": {
																"id": 873,
																"nodeType": "Block",
																"src": "10662:100:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 868,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 845,
																					"src": "10714:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 869,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 851,
																					"src": "10723:16:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 870,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 847,
																					"src": "10741:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 867,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 268,
																				"src": "10687:26:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 871,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 872,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:5"
																	}
																]
															}
														},
														{
															"id": 884,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:5",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 876,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 843,
																				"src": "10812:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 877,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 845,
																				"src": "10819:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 880,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 878,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 851,
																					"src": "10828:16:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 879,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 847,
																					"src": "10847:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 881,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 875,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				780,
																				840
																			],
																			"referencedDeclaration": 840,
																			"src": "10803:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 883,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:5"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 841,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:5",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "10440:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "10455:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "10472:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:5"
									},
									"returnParameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:5"
									},
									"scope": 889,
									"src": "10415:476:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 890,
							"src": "1106:9787:5",
							"usedErrors": [
								249,
								254,
								259,
								268,
								273,
								278
							],
							"usedEvents": [
								901,
								910
							]
						}
					],
					"src": "105:10789:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							967
						]
					},
					"id": 968,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 891,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 892,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:6",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 967,
							"linearizedBaseContracts": [
								967
							],
							"name": "IERC20",
							"nameLocation": "214:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 893,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 901,
									"name": "Transfer",
									"nameLocation": "396:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "405:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "427:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "447:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:6"
									},
									"src": "390:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 910,
									"name": "Approval",
									"nameLocation": "627:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "636:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "659:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:6"
									},
									"src": "621:78:6"
								},
								{
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:6",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 916,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:6"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "821:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:6"
									},
									"scope": 967,
									"src": "775:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 917,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:6",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 924,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "931:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:6"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "971:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:6"
									},
									"scope": 967,
									"src": "912:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 925,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:6",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 934,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1222:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1234:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:6"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1267:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 931,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:6"
									},
									"scope": 967,
									"src": "1204:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 935,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 944,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "1567:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "1582:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:6"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "1622:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:6"
									},
									"scope": 967,
									"src": "1548:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:6",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 954,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "2326:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "2343:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:6"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "2376:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 951,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:6"
									},
									"scope": 967,
									"src": "2309:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 955,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:6",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 966,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "2712:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "2726:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "2738:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:6"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "2771:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 963,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:6"
									},
									"scope": 967,
									"src": "2690:87:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 968,
							"src": "204:2575:6",
							"usedErrors": [],
							"usedEvents": [
								901,
								910
							]
						}
					],
					"src": "106:2674:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							967
						],
						"IERC20Metadata": [
							993
						]
					},
					"id": 994,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 969,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 971,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 994,
							"sourceUnit": 968,
							"src": "151:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 970,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 967,
										"src": "159:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 973,
										"name": "IERC20",
										"nameLocations": [
											"306:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 967,
										"src": "306:6:7"
									},
									"id": 974,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:7"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 972,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:7",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 993,
							"linearizedBaseContracts": [
								993,
								967
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 975,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:7",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 980,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:7"
									},
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "417:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 977,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:7"
									},
									"scope": 993,
									"src": "378:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 981,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:7",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 986,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:7"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "540:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 983,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:7"
									},
									"scope": 993,
									"src": "499:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 987,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:7",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 992,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:7"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "674:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 989,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:7"
									},
									"scope": 993,
									"src": "631:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 994,
							"src": "278:405:7",
							"usedErrors": [],
							"usedEvents": [
								901,
								910
							]
						}
					],
					"src": "125:559:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							967
						],
						"SafeERC20": [
							1402
						]
					},
					"id": 1403,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 995,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 997,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1403,
							"sourceUnit": 968,
							"src": "141:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 996,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 967,
										"src": "149:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 999,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1403,
							"sourceUnit": 230,
							"src": "179:58:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 998,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1000,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:8",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1402,
							"linearizedBaseContracts": [
								1402
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1001,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:8",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 1005,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "823:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1002,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:8"
									},
									"src": "792:46:8"
								},
								{
									"documentation": {
										"id": 1006,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:8",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 1014,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "959:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "976:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "1002:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:8"
									},
									"src": "920:109:8"
								},
								{
									"body": {
										"id": 1037,
										"nodeType": "Block",
										"src": "1291:88:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1026,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "1321:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$967",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1029,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1018,
																		"src": "1343:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$967",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:8",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 934,
																	"src": "1343:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1031,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1020,
																			"src": "1360:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1032,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1022,
																			"src": "1364:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1033,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 1027,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1028,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:8",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$967",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1025,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "1301:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1036,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:8"
											}
										]
									},
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:8",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 1038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "1241:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$967",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1017,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1016,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 967,
														"src": "1241:6:8"
													},
													"referencedDeclaration": 967,
													"src": "1241:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$967",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "1255:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "1267:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:8"
									},
									"returnParameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:8"
									},
									"scope": 1402,
									"src": "1219:160:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1064,
										"nodeType": "Block",
										"src": "1708:98:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1052,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "1738:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$967",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1055,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1042,
																		"src": "1760:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$967",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:8",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 966,
																	"src": "1760:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1057,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1044,
																			"src": "1781:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1058,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1046,
																			"src": "1787:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1059,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1048,
																			"src": "1791:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1060,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 1053,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:8",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$967",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1051,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "1718:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1063,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:8"
											}
										]
									},
									"documentation": {
										"id": 1039,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:8",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 1065,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "1644:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$967",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1041,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1040,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 967,
														"src": "1644:6:8"
													},
													"referencedDeclaration": 967,
													"src": "1644:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$967",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "1658:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "1672:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "1684:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:8"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:8"
									},
									"scope": 1402,
									"src": "1618:188:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "2548:139:8",
										"statements": [
											{
												"assignments": [
													1077
												],
												"declarations": [
													{
														"constant": false,
														"id": 1077,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2566:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 1095,
														"src": "2558:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1076,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2558:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1086,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1082,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2605:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1402",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1402",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2597:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1080,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2597:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2597:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1084,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "2612:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1078,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "2581:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$967",
																"typeString": "contract IERC20"
															}
														},
														"id": 1079,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2587:9:8",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "2581:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2581:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2558:62:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1088,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "2643:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$967",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1089,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "2650:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1090,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1077,
																"src": "2659:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1091,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1073,
																"src": "2674:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2659:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$967",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1087,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "2630:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2630:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1094,
												"nodeType": "ExpressionStatement",
												"src": "2630:50:8"
											}
										]
									},
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "1812:645:8",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 1096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2471:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2500:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "2493:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$967",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1068,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1067,
														"name": "IERC20",
														"nameLocations": [
															"2493:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 967,
														"src": "2493:6:8"
													},
													"referencedDeclaration": 967,
													"src": "2493:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$967",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2515:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "2507:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2532:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "2524:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2492:46:8"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2548:0:8"
									},
									"scope": 1402,
									"src": "2462:225:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1138,
										"nodeType": "Block",
										"src": "3453:370:8",
										"statements": [
											{
												"id": 1137,
												"nodeType": "UncheckedBlock",
												"src": "3463:354:8",
												"statements": [
													{
														"assignments": [
															1108
														],
														"declarations": [
															{
																"constant": false,
																"id": 1108,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3495:16:8",
																"nodeType": "VariableDeclaration",
																"scope": 1137,
																"src": "3487:24:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1107,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3487:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1117,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1113,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3538:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1402",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1402",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3530:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1111,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3530:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3530:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1115,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1102,
																	"src": "3545:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1109,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1100,
																	"src": "3514:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$967",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3520:9:8",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 944,
																"src": "3514:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3514:39:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3487:66:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1118,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1108,
																"src": "3571:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1119,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "3590:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3571:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1128,
														"nodeType": "IfStatement",
														"src": "3567:160:8",
														"trueBody": {
															"id": 1127,
															"nodeType": "Block",
															"src": "3609:118:8",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 1122,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1102,
																				"src": "3667:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1123,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1108,
																				"src": "3676:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1124,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1104,
																				"src": "3694:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1121,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1014,
																			"src": "3634:32:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 1125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3634:78:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1126,
																	"nodeType": "RevertStatement",
																	"src": "3627:85:8"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1130,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1100,
																	"src": "3753:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$967",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1131,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1102,
																	"src": "3760:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1132,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1108,
																		"src": "3769:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1133,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1104,
																		"src": "3788:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3769:36:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$967",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1129,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1186,
																"src": "3740:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3740:66:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1136,
														"nodeType": "ExpressionStatement",
														"src": "3740:66:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1097,
										"nodeType": "StructuredDocumentation",
										"src": "2693:657:8",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 1139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3364:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3393:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "3386:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$967",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1099,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1098,
														"name": "IERC20",
														"nameLocations": [
															"3386:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 967,
														"src": "3386:6:8"
													},
													"referencedDeclaration": 967,
													"src": "3386:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$967",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3408:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "3400:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3400:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3425:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "3417:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3417:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:58:8"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3453:0:8"
									},
									"scope": 1402,
									"src": "3355:468:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1185,
										"nodeType": "Block",
										"src": "4477:303:8",
										"statements": [
											{
												"assignments": [
													1151
												],
												"declarations": [
													{
														"constant": false,
														"id": 1151,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4500:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 1185,
														"src": "4487:25:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1150,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4487:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1160,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1154,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1143,
																"src": "4530:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$967",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4536:7:8",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 954,
															"src": "4530:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 1156,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1145,
																	"src": "4546:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1157,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "4555:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1158,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4545:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 1152,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4515:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4519:10:8",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4515:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4515:47:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4487:75:8"
											},
											{
												"condition": {
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4577:45:8",
													"subExpression": {
														"arguments": [
															{
																"id": 1162,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1143,
																"src": "4602:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$967",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 1163,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1151,
																"src": "4609:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$967",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1161,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1401,
															"src": "4578:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 1164,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4578:44:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1184,
												"nodeType": "IfStatement",
												"src": "4573:201:8",
												"trueBody": {
													"id": 1183,
													"nodeType": "Block",
													"src": "4624:150:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1167,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1143,
																		"src": "4658:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$967",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1170,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1143,
																					"src": "4680:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$967",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1171,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4686:7:8",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 954,
																				"src": "4680:13:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1172,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1145,
																						"src": "4696:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 1173,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4705:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 1174,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4695:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 1168,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4665:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4669:10:8",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4665:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4665:43:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$967",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1166,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1360,
																	"src": "4638:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4638:71:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1177,
															"nodeType": "ExpressionStatement",
															"src": "4638:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1179,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1143,
																		"src": "4743:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$967",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 1180,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1151,
																		"src": "4750:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$967",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1178,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1360,
																	"src": "4723:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4723:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1182,
															"nodeType": "ExpressionStatement",
															"src": "4723:40:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1140,
										"nodeType": "StructuredDocumentation",
										"src": "3829:566:8",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 1186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4409:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4429:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "4422:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$967",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1142,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1141,
														"name": "IERC20",
														"nameLocations": [
															"4422:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 967,
														"src": "4422:6:8"
													},
													"referencedDeclaration": 967,
													"src": "4422:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$967",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4444:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "4436:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4436:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4461:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "4453:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4421:46:8"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4477:0:8"
									},
									"scope": 1402,
									"src": "4400:380:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1228,
										"nodeType": "Block",
										"src": "5227:219:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1199,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1192,
																"src": "5241:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5244:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5241:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5249:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5241:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1202,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5259:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5241:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5327:39:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 1213,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1192,
																	"src": "5350:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1214,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1194,
																	"src": "5354:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1215,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "5361:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1211,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1190,
																	"src": "5328:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5334:15:8",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "5328:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5328:38:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1226,
													"nodeType": "IfStatement",
													"src": "5323:117:8",
													"trueBody": {
														"id": 1225,
														"nodeType": "Block",
														"src": "5368:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1221,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1190,
																					"src": "5422:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1220,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5414:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1219,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5414:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5414:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1218,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1005,
																		"src": "5389:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5389:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1224,
																"nodeType": "RevertStatement",
																"src": "5382:47:8"
															}
														]
													}
												},
												"id": 1227,
												"nodeType": "IfStatement",
												"src": "5237:203:8",
												"trueBody": {
													"id": 1210,
													"nodeType": "Block",
													"src": "5262:55:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1205,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1190,
																		"src": "5289:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1206,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1192,
																		"src": "5296:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1207,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1194,
																		"src": "5300:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1204,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1038,
																	"src": "5276:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5276:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1209,
															"nodeType": "ExpressionStatement",
															"src": "5276:30:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1187,
										"nodeType": "StructuredDocumentation",
										"src": "4786:333:8",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 1229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5133:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5165:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "5156:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1189,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1188,
														"name": "IERC1363",
														"nameLocations": [
															"5156:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5156:8:8"
													},
													"referencedDeclaration": 229,
													"src": "5156:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5180:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "5172:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5172:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5192:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "5184:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5184:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5212:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "5199:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1195,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5199:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5155:62:8"
									},
									"returnParameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5227:0:8"
									},
									"scope": 1402,
									"src": "5124:322:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1275,
										"nodeType": "Block",
										"src": "5965:239:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1244,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1237,
																"src": "5979:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5982:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5979:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5987:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5979:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1247,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5997:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5979:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6075:49:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 1259,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1235,
																	"src": "6102:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1260,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1237,
																	"src": "6108:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1261,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1239,
																	"src": "6112:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1262,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1241,
																	"src": "6119:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1257,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1233,
																	"src": "6076:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6082:19:8",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6076:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6076:48:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1273,
													"nodeType": "IfStatement",
													"src": "6071:127:8",
													"trueBody": {
														"id": 1272,
														"nodeType": "Block",
														"src": "6126:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1268,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1233,
																					"src": "6180:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1267,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6172:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1266,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6172:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6172:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1265,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1005,
																		"src": "6147:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6147:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1271,
																"nodeType": "RevertStatement",
																"src": "6140:47:8"
															}
														]
													}
												},
												"id": 1274,
												"nodeType": "IfStatement",
												"src": "5975:223:8",
												"trueBody": {
													"id": 1256,
													"nodeType": "Block",
													"src": "6000:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1250,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1233,
																		"src": "6031:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1251,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1235,
																		"src": "6038:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1252,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1237,
																		"src": "6044:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1253,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1239,
																		"src": "6048:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1249,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1065,
																	"src": "6014:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6014:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1255,
															"nodeType": "ExpressionStatement",
															"src": "6014:40:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1230,
										"nodeType": "StructuredDocumentation",
										"src": "5452:341:8",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 1276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5807:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5852:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "5843:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1232,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1231,
														"name": "IERC1363",
														"nameLocations": [
															"5843:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5843:8:8"
													},
													"referencedDeclaration": 229,
													"src": "5843:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5875:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "5867:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5867:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5897:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "5889:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5889:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5917:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "5909:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5909:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5945:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "5932:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1240,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5932:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5833:122:8"
									},
									"returnParameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5965:0:8"
									},
									"scope": 1402,
									"src": "5798:406:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1318,
										"nodeType": "Block",
										"src": "6971:218:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1289,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1282,
																"src": "6985:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6988:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6985:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6993:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6985:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1292,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7003:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6985:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7071:38:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 1303,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1282,
																	"src": "7093:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1304,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1284,
																	"src": "7097:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1305,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1286,
																	"src": "7104:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1301,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1280,
																	"src": "7072:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7078:14:8",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7072:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7072:37:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1316,
													"nodeType": "IfStatement",
													"src": "7067:116:8",
													"trueBody": {
														"id": 1315,
														"nodeType": "Block",
														"src": "7111:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1311,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1280,
																					"src": "7165:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1310,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7157:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1309,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7157:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1312,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7157:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1308,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1005,
																		"src": "7132:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7132:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1314,
																"nodeType": "RevertStatement",
																"src": "7125:47:8"
															}
														]
													}
												},
												"id": 1317,
												"nodeType": "IfStatement",
												"src": "6981:202:8",
												"trueBody": {
													"id": 1300,
													"nodeType": "Block",
													"src": "7006:55:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1295,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1280,
																		"src": "7033:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1296,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1282,
																		"src": "7040:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1297,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1284,
																		"src": "7044:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1294,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1186,
																	"src": "7020:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7020:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1299,
															"nodeType": "ExpressionStatement",
															"src": "7020:30:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1277,
										"nodeType": "StructuredDocumentation",
										"src": "6210:654:8",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 1319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6878:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6909:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "6900:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1279,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1278,
														"name": "IERC1363",
														"nameLocations": [
															"6900:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6900:8:8"
													},
													"referencedDeclaration": 229,
													"src": "6900:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6924:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "6916:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6916:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6936:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "6928:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6928:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6956:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "6943:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1285,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6943:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6899:62:8"
									},
									"returnParameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6971:0:8"
									},
									"scope": 1402,
									"src": "6869:320:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1359,
										"nodeType": "Block",
										"src": "7756:650:8",
										"statements": [
											{
												"assignments": [
													1329
												],
												"declarations": [
													{
														"constant": false,
														"id": 1329,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7774:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1359,
														"src": "7766:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1328,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7766:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1330,
												"nodeType": "VariableDeclarationStatement",
												"src": "7766:18:8"
											},
											{
												"assignments": [
													1332
												],
												"declarations": [
													{
														"constant": false,
														"id": 1332,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7802:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1359,
														"src": "7794:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1331,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7794:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1333,
												"nodeType": "VariableDeclarationStatement",
												"src": "7794:19:8"
											},
											{
												"AST": {
													"nativeSrc": "7848:396:8",
													"nodeType": "YulBlock",
													"src": "7848:396:8",
													"statements": [
														{
															"nativeSrc": "7862:75:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7862:75:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7882:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7882:3:8"
																		},
																		"nativeSrc": "7882:5:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7882:5:8"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7889:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7889:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7896:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7896:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7903:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7903:4:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7909:4:8",
																				"nodeType": "YulLiteral",
																				"src": "7909:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7899:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7899:3:8"
																		},
																		"nativeSrc": "7899:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7899:15:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7922:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7922:4:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7916:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "7916:5:8"
																		},
																		"nativeSrc": "7916:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7916:11:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7929:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7929:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7932:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7932:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7877:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7877:4:8"
																},
																"nativeSrc": "7877:60:8",
																"nodeType": "YulFunctionCall",
																"src": "7877:60:8"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7866:7:8",
																	"nodeType": "YulTypedName",
																	"src": "7866:7:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7998:157:8",
																"nodeType": "YulBlock",
																"src": "7998:157:8",
																"statements": [
																	{
																		"nativeSrc": "8016:22:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8016:22:8",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8033:4:8",
																					"nodeType": "YulLiteral",
																					"src": "8033:4:8",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8027:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8027:5:8"
																			},
																			"nativeSrc": "8027:11:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8027:11:8"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8020:3:8",
																				"nodeType": "YulTypedName",
																				"src": "8020:3:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8070:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8070:3:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8075:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8075:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8078:14:8",
																						"nodeType": "YulIdentifier",
																						"src": "8078:14:8"
																					},
																					"nativeSrc": "8078:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8078:16:8"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8055:14:8",
																				"nodeType": "YulIdentifier",
																				"src": "8055:14:8"
																			},
																			"nativeSrc": "8055:40:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8055:40:8"
																		},
																		"nativeSrc": "8055:40:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8055:40:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8119:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8119:3:8"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8124:14:8",
																						"nodeType": "YulIdentifier",
																						"src": "8124:14:8"
																					},
																					"nativeSrc": "8124:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8124:16:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8112:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8112:6:8"
																			},
																			"nativeSrc": "8112:29:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8112:29:8"
																		},
																		"nativeSrc": "8112:29:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8112:29:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "7989:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "7989:7:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7982:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7982:6:8"
																},
																"nativeSrc": "7982:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7982:15:8"
															},
															"nativeSrc": "7979:176:8",
															"nodeType": "YulIf",
															"src": "7979:176:8"
														},
														{
															"nativeSrc": "8168:30:8",
															"nodeType": "YulAssignment",
															"src": "8168:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8182:14:8",
																	"nodeType": "YulIdentifier",
																	"src": "8182:14:8"
																},
																"nativeSrc": "8182:16:8",
																"nodeType": "YulFunctionCall",
																"src": "8182:16:8"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8168:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "8168:10:8"
																}
															]
														},
														{
															"nativeSrc": "8211:23:8",
															"nodeType": "YulAssignment",
															"src": "8211:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8232:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8232:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8226:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8226:5:8"
																},
																"nativeSrc": "8226:8:8",
																"nodeType": "YulFunctionCall",
																"src": "8226:8:8"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8211:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "8211:11:8"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1325,
														"isOffset": false,
														"isSlot": false,
														"src": "7903:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1325,
														"isOffset": false,
														"isSlot": false,
														"src": "7922:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1329,
														"isOffset": false,
														"isSlot": false,
														"src": "8168:10:8",
														"valueSize": 1
													},
													{
														"declaration": 1332,
														"isOffset": false,
														"isSlot": false,
														"src": "8211:11:8",
														"valueSize": 1
													},
													{
														"declaration": 1323,
														"isOffset": false,
														"isSlot": false,
														"src": "7889:5:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1334,
												"nodeType": "InlineAssembly",
												"src": "7823:421:8"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1335,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "8258:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8272:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8258:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1346,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "8310:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8325:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8310:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8258:68:8",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1340,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1323,
																			"src": "8284:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$967",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$967",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8276:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1338,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8276:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8276:14:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8291:4:8",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8276:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8296:6:8",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8276:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8306:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8276:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1358,
												"nodeType": "IfStatement",
												"src": "8254:146:8",
												"trueBody": {
													"id": 1357,
													"nodeType": "Block",
													"src": "8328:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1353,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1323,
																				"src": "8382:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$967",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$967",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8374:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8374:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8374:14:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1350,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1005,
																	"src": "8349:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8349:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1356,
															"nodeType": "RevertStatement",
															"src": "8342:47:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1320,
										"nodeType": "StructuredDocumentation",
										"src": "7195:486:8",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 1360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7695:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7722:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "7715:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$967",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1322,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1321,
														"name": "IERC20",
														"nameLocations": [
															"7715:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 967,
														"src": "7715:6:8"
													},
													"referencedDeclaration": 967,
													"src": "7715:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$967",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7742:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "7729:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1324,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7729:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7714:33:8"
									},
									"returnParameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7756:0:8"
									},
									"scope": 1402,
									"src": "7686:720:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1400,
										"nodeType": "Block",
										"src": "8997:391:8",
										"statements": [
											{
												"assignments": [
													1372
												],
												"declarations": [
													{
														"constant": false,
														"id": 1372,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9012:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1400,
														"src": "9007:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1371,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9007:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1373,
												"nodeType": "VariableDeclarationStatement",
												"src": "9007:12:8"
											},
											{
												"assignments": [
													1375
												],
												"declarations": [
													{
														"constant": false,
														"id": 1375,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9037:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1400,
														"src": "9029:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1374,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9029:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1376,
												"nodeType": "VariableDeclarationStatement",
												"src": "9029:18:8"
											},
											{
												"assignments": [
													1378
												],
												"declarations": [
													{
														"constant": false,
														"id": 1378,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9065:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1400,
														"src": "9057:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1377,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9057:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1379,
												"nodeType": "VariableDeclarationStatement",
												"src": "9057:19:8"
											},
											{
												"AST": {
													"nativeSrc": "9111:174:8",
													"nodeType": "YulBlock",
													"src": "9111:174:8",
													"statements": [
														{
															"nativeSrc": "9125:71:8",
															"nodeType": "YulAssignment",
															"src": "9125:71:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9141:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9141:3:8"
																		},
																		"nativeSrc": "9141:5:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9141:5:8"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9148:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9148:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9155:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9155:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9162:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9162:4:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9168:4:8",
																				"nodeType": "YulLiteral",
																				"src": "9168:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9158:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9158:3:8"
																		},
																		"nativeSrc": "9158:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9158:15:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9181:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9181:4:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9175:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "9175:5:8"
																		},
																		"nativeSrc": "9175:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9175:11:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9188:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9188:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9191:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9191:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9136:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9136:4:8"
																},
																"nativeSrc": "9136:60:8",
																"nodeType": "YulFunctionCall",
																"src": "9136:60:8"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9125:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9125:7:8"
																}
															]
														},
														{
															"nativeSrc": "9209:30:8",
															"nodeType": "YulAssignment",
															"src": "9209:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9223:14:8",
																	"nodeType": "YulIdentifier",
																	"src": "9223:14:8"
																},
																"nativeSrc": "9223:16:8",
																"nodeType": "YulFunctionCall",
																"src": "9223:16:8"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9209:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "9209:10:8"
																}
															]
														},
														{
															"nativeSrc": "9252:23:8",
															"nodeType": "YulAssignment",
															"src": "9252:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9273:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9273:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9267:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9267:5:8"
																},
																"nativeSrc": "9267:8:8",
																"nodeType": "YulFunctionCall",
																"src": "9267:8:8"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9252:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "9252:11:8"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1366,
														"isOffset": false,
														"isSlot": false,
														"src": "9162:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1366,
														"isOffset": false,
														"isSlot": false,
														"src": "9181:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1375,
														"isOffset": false,
														"isSlot": false,
														"src": "9209:10:8",
														"valueSize": 1
													},
													{
														"declaration": 1378,
														"isOffset": false,
														"isSlot": false,
														"src": "9252:11:8",
														"valueSize": 1
													},
													{
														"declaration": 1372,
														"isOffset": false,
														"isSlot": false,
														"src": "9125:7:8",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "9148:5:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1380,
												"nodeType": "InlineAssembly",
												"src": "9086:199:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1381,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1372,
														"src": "9301:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1382,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1375,
																		"src": "9313:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9327:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9313:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1393,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1378,
																		"src": "9364:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9364:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9313:67:8",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1387,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1364,
																						"src": "9339:5:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$967",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$967",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 1386,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9331:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1385,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9331:7:8",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1388,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9331:14:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1389,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9346:4:8",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9331:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9351:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9331:26:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9360:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9331:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1397,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9312:69:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9301:80:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1370,
												"id": 1399,
												"nodeType": "Return",
												"src": "9294:87:8"
											}
										]
									},
									"documentation": {
										"id": 1361,
										"nodeType": "StructuredDocumentation",
										"src": "8412:491:8",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 1401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8917:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8948:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "8941:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$967",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1363,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1362,
														"name": "IERC20",
														"nameLocations": [
															"8941:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 967,
														"src": "8941:6:8"
													},
													"referencedDeclaration": 967,
													"src": "8941:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$967",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8968:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "8955:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1365,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8955:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8940:33:8"
									},
									"returnParameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "8991:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1368,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8991:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8990:6:8"
									},
									"scope": 1402,
									"src": "8908:480:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1403,
							"src": "698:8692:8",
							"usedErrors": [
								1005,
								1014
							],
							"usedEvents": []
						}
					],
					"src": "115:9276:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1432
						]
					},
					"id": 1433,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1404,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1405,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1432,
							"linearizedBaseContracts": [
								1432
							],
							"name": "Context",
							"nameLocation": "642:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1413,
										"nodeType": "Block",
										"src": "718:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1410,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1409,
												"id": 1412,
												"nodeType": "Return",
												"src": "728:17:9"
											}
										]
									},
									"id": 1414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:9"
									},
									"returnParameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "709:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:9"
									},
									"scope": 1432,
									"src": "656:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1422,
										"nodeType": "Block",
										"src": "825:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1419,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1418,
												"id": 1421,
												"nodeType": "Return",
												"src": "835:15:9"
											}
										]
									},
									"id": 1423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:9"
									},
									"returnParameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "809:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1416,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:9"
									},
									"scope": 1432,
									"src": "758:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1430,
										"nodeType": "Block",
										"src": "935:25:9",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1427,
												"id": 1429,
												"nodeType": "Return",
												"src": "945:8:9"
											}
										]
									},
									"id": 1431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:9"
									},
									"returnParameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "926:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:9"
									},
									"scope": 1432,
									"src": "863:97:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1433,
							"src": "624:338:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1444
						]
					},
					"id": 1445,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1434,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1435,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:10",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1444,
							"linearizedBaseContracts": [
								1444
							],
							"name": "IERC165",
							"nameLocation": "432:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1436,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "818:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1437,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:10"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "861:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:10"
									},
									"scope": 1444,
									"src": "791:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1445,
							"src": "422:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:10"
				},
				"id": 10
			},
			"main.sol": {
				"ast": {
					"absolutePath": "main.sol",
					"exportedSymbols": {
						"Context": [
							1432
						],
						"CreditToken": [
							2053
						],
						"ERC20": [
							889
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							967
						],
						"IERC20Errors": [
							279
						],
						"IERC20Metadata": [
							993
						],
						"Ownable": [
							147
						],
						"SafeERC20": [
							1402
						]
					},
					"id": 2054,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1446,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "40:23:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1447,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2054,
							"sourceUnit": 890,
							"src": "67:55:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1448,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2054,
							"sourceUnit": 148,
							"src": "124:52:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1449,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2054,
							"sourceUnit": 1403,
							"src": "178:65:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1450,
										"name": "ERC20",
										"nameLocations": [
											"271:5:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 889,
										"src": "271:5:11"
									},
									"id": 1451,
									"nodeType": "InheritanceSpecifier",
									"src": "271:5:11"
								},
								{
									"baseName": {
										"id": 1452,
										"name": "Ownable",
										"nameLocations": [
											"278:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "278:7:11"
									},
									"id": 1453,
									"nodeType": "InheritanceSpecifier",
									"src": "278:7:11"
								}
							],
							"canonicalName": "CreditToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2053,
							"linearizedBaseContracts": [
								2053,
								147,
								889,
								279,
								993,
								967,
								1432
							],
							"name": "CreditToken",
							"nameLocation": "256:11:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1457,
									"libraryName": {
										"id": 1454,
										"name": "SafeERC20",
										"nameLocations": [
											"299:9:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1402,
										"src": "299:9:11"
									},
									"nodeType": "UsingForDirective",
									"src": "293:26:11",
									"typeName": {
										"id": 1456,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1455,
											"name": "ERC20",
											"nameLocations": [
												"313:5:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 889,
											"src": "313:5:11"
										},
										"referencedDeclaration": 889,
										"src": "313:5:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$889",
											"typeString": "contract ERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "75794a3c",
									"id": 1460,
									"mutability": "mutable",
									"name": "nextTokenId",
									"nameLocation": "342:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2053,
									"src": "327:30:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1458,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "327:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1459,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "356:1:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "CreditToken.Loan",
									"id": 1485,
									"members": [
										{
											"constant": false,
											"id": 1462,
											"mutability": "mutable",
											"name": "borrower",
											"nameLocation": "397:8:11",
											"nodeType": "VariableDeclaration",
											"scope": 1485,
											"src": "389:16:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1461,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "389:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1464,
											"mutability": "mutable",
											"name": "lender",
											"nameLocation": "424:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1485,
											"src": "416:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1463,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "416:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1466,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "449:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1485,
											"src": "441:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1465,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "441:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1468,
											"mutability": "mutable",
											"name": "interestAmount",
											"nameLocation": "474:14:11",
											"nodeType": "VariableDeclaration",
											"scope": 1485,
											"src": "466:22:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1467,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "466:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1470,
											"mutability": "mutable",
											"name": "loanDuration",
											"nameLocation": "507:12:11",
											"nodeType": "VariableDeclaration",
											"scope": 1485,
											"src": "499:20:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1469,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "499:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1472,
											"mutability": "mutable",
											"name": "dueDate",
											"nameLocation": "538:7:11",
											"nodeType": "VariableDeclaration",
											"scope": 1485,
											"src": "530:15:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1471,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "530:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1474,
											"mutability": "mutable",
											"name": "repaid",
											"nameLocation": "561:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1485,
											"src": "556:11:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1473,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "556:4:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1476,
											"mutability": "mutable",
											"name": "accepted",
											"nameLocation": "583:8:11",
											"nodeType": "VariableDeclaration",
											"scope": 1485,
											"src": "578:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1475,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "578:4:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1478,
											"mutability": "mutable",
											"name": "canceled",
											"nameLocation": "607:8:11",
											"nodeType": "VariableDeclaration",
											"scope": 1485,
											"src": "602:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1477,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "602:4:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1480,
											"mutability": "mutable",
											"name": "nftTokenId",
											"nameLocation": "634:10:11",
											"nodeType": "VariableDeclaration",
											"scope": 1485,
											"src": "626:18:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1479,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "626:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1482,
											"mutability": "mutable",
											"name": "isNFTBurned",
											"nameLocation": "660:11:11",
											"nodeType": "VariableDeclaration",
											"scope": 1485,
											"src": "655:16:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1481,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "655:4:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1484,
											"mutability": "mutable",
											"name": "terms",
											"nameLocation": "689:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1485,
											"src": "682:12:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1483,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "682:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Loan",
									"nameLocation": "373:4:11",
									"nodeType": "StructDefinition",
									"scope": 2053,
									"src": "366:336:11",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e1ec3c68",
									"id": 1490,
									"mutability": "mutable",
									"name": "loans",
									"nameLocation": "742:5:11",
									"nodeType": "VariableDeclaration",
									"scope": 2053,
									"src": "710:37:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$1485_storage_$",
										"typeString": "mapping(uint256 => struct CreditToken.Loan)"
									},
									"typeName": {
										"id": 1489,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1486,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "718:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "710:24:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$1485_storage_$",
											"typeString": "mapping(uint256 => struct CreditToken.Loan)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1488,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1487,
												"name": "Loan",
												"nameLocations": [
													"729:4:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1485,
												"src": "729:4:11"
											},
											"referencedDeclaration": 1485,
											"src": "729:4:11",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Loan_$1485_storage_ptr",
												"typeString": "struct CreditToken.Loan"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a5410a66",
									"id": 1494,
									"mutability": "mutable",
									"name": "kycVerified",
									"nameLocation": "786:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2053,
									"src": "754:43:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1493,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1491,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "762:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "754:24:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1492,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "773:4:11",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "87c51459",
									"id": 1497,
									"mutability": "mutable",
									"name": "nextLoanId",
									"nameLocation": "819:10:11",
									"nodeType": "VariableDeclaration",
									"scope": 2053,
									"src": "804:29:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1495,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "804:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1496,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "832:1:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "065f30d94790e6e129604916065477a26eebb0e2a87f79e6b05b21a0f662d947",
									"id": 1515,
									"name": "LoanIssued",
									"nameLocation": "848:10:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"indexed": false,
												"mutability": "mutable",
												"name": "loanId",
												"nameLocation": "867:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "859:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1501,
												"indexed": false,
												"mutability": "mutable",
												"name": "borrower",
												"nameLocation": "883:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "875:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1503,
												"indexed": false,
												"mutability": "mutable",
												"name": "lender",
												"nameLocation": "901:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "893:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1505,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "917:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "909:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "909:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1507,
												"indexed": false,
												"mutability": "mutable",
												"name": "interestAmount",
												"nameLocation": "933:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "925:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "925:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1509,
												"indexed": false,
												"mutability": "mutable",
												"name": "nftTokenId",
												"nameLocation": "957:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "949:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "949:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1511,
												"indexed": false,
												"mutability": "mutable",
												"name": "dueDate",
												"nameLocation": "977:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "969:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"indexed": false,
												"mutability": "mutable",
												"name": "terms",
												"nameLocation": "993:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "986:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1512,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "986:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "858:141:11"
									},
									"src": "842:158:11"
								},
								{
									"anonymous": false,
									"eventSelector": "8313f00f3154c2e8509a2ee261c618804a495403d3ac94fe5fb833af9d13cb27",
									"id": 1519,
									"name": "LoanAccepted",
									"nameLocation": "1012:12:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"indexed": false,
												"mutability": "mutable",
												"name": "loanId",
												"nameLocation": "1033:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "1025:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1025:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1024:16:11"
									},
									"src": "1006:35:11"
								},
								{
									"anonymous": false,
									"eventSelector": "9a7851747cd7ffb3fe0a32caf3da48b31f27cebe131267051640f8b72fc47186",
									"id": 1523,
									"name": "LoanRepaid",
									"nameLocation": "1053:10:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"indexed": false,
												"mutability": "mutable",
												"name": "loanId",
												"nameLocation": "1072:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "1064:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1064:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1063:16:11"
									},
									"src": "1047:33:11"
								},
								{
									"anonymous": false,
									"eventSelector": "db3578c2b080f19424234c3a83e34455b4b06e90bf24b62f4e13a9ed82fbf0ed",
									"id": 1527,
									"name": "LoanCanceled",
									"nameLocation": "1092:12:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"indexed": false,
												"mutability": "mutable",
												"name": "loanId",
												"nameLocation": "1113:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "1105:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1105:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1104:16:11"
									},
									"src": "1086:35:11"
								},
								{
									"anonymous": false,
									"eventSelector": "0ab9f35a07aca8965fede1a225ff17bd92f8d63aa4eb9a61ace1e99495e2980d",
									"id": 1531,
									"name": "DefaultedLoan",
									"nameLocation": "1133:13:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"indexed": false,
												"mutability": "mutable",
												"name": "loanId",
												"nameLocation": "1155:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "1147:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1147:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1146:16:11"
									},
									"src": "1127:36:11"
								},
								{
									"anonymous": false,
									"eventSelector": "65c84ee842eafc291d1272a6e3d10f8c454c4288e63f5db3f7be2b3012f321a9",
									"id": 1535,
									"name": "KYCVerified",
									"nameLocation": "1175:11:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1203:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1187:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:22:11"
									},
									"src": "1169:40:11"
								},
								{
									"anonymous": false,
									"eventSelector": "3c176691ca154a2f6fe978a2a633a33ee77dbe2902e67a75400720845a4b2ce1",
									"id": 1539,
									"name": "NFTBurned",
									"nameLocation": "1221:9:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"indexed": false,
												"mutability": "mutable",
												"name": "nftTokenId",
												"nameLocation": "1239:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "1231:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1231:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1230:20:11"
									},
									"src": "1215:36:11"
								},
								{
									"body": {
										"id": 1560,
										"nodeType": "Block",
										"src": "1321:99:11",
										"statements": [
											{
												"assignments": [
													1551
												],
												"declarations": [
													{
														"constant": false,
														"id": 1551,
														"mutability": "mutable",
														"name": "initialSupply",
														"nameLocation": "1340:13:11",
														"nodeType": "VariableDeclaration",
														"scope": 1560,
														"src": "1332:21:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1550,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1332:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1553,
												"initialValue": {
													"hexValue": "315f3030305f3030305f303030",
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1356:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000_by_1",
														"typeString": "int_const 1000000000"
													},
													"value": "1_000_000_000"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1332:37:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1555,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1386:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1390:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1386:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1557,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1551,
															"src": "1398:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1554,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 729,
														"src": "1380:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1380:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1559,
												"nodeType": "ExpressionStatement",
												"src": "1380:32:11"
											}
										]
									},
									"id": 1561,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "437265646974546f6b656e",
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1279:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_2408983a666213f7104ef7de34ed73987cda8468fb7a9e705d4a31cdc087e443",
														"typeString": "literal_string \"CreditToken\""
													},
													"value": "CreditToken"
												},
												{
													"hexValue": "435244",
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1294:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_4349f8479d61b549adfc4d16a68067f03d46a10a0ca9ffc0ec6b88e068be2290",
														"typeString": "literal_string \"CRD\""
													},
													"value": "CRD"
												}
											],
											"id": 1544,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1541,
												"name": "ERC20",
												"nameLocations": [
													"1273:5:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 889,
												"src": "1273:5:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1273:27:11"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1546,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1309:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1313:6:11",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1309:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1548,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1545,
												"name": "Ownable",
												"nameLocations": [
													"1301:7:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1301:7:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1301:19:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1270:2:11"
									},
									"returnParameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1321:0:11"
									},
									"scope": 2053,
									"src": "1259:161:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1578,
										"nodeType": "Block",
										"src": "1480:76:11",
										"statements": [
											{
												"expression": {
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1568,
															"name": "kycVerified",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "1491:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1570,
														"indexExpression": {
															"id": 1569,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1563,
															"src": "1503:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1491:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1571,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1511:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1491:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1573,
												"nodeType": "ExpressionStatement",
												"src": "1491:24:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1575,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1563,
															"src": "1543:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1574,
														"name": "KYCVerified",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1535,
														"src": "1531:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:17:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1577,
												"nodeType": "EmitStatement",
												"src": "1526:22:11"
											}
										]
									},
									"functionSelector": "38d16011",
									"id": 1579,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1566,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1565,
												"name": "onlyOwner",
												"nameLocations": [
													"1470:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1470:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1470:9:11"
										}
									],
									"name": "verifyKYC",
									"nameLocation": "1437:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1455:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "1447:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1447:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1446:14:11"
									},
									"returnParameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1480:0:11"
									},
									"scope": 2053,
									"src": "1428:128:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										453
									],
									"body": {
										"id": 1587,
										"nodeType": "Block",
										"src": "1629:27:11",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1585,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1647:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1584,
												"id": 1586,
												"nodeType": "Return",
												"src": "1640:8:11"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1573:8:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1581,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1604:8:11"
									},
									"parameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1581:2:11"
									},
									"returnParameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "1622:5:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1582,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1622:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:7:11"
									},
									"scope": 2053,
									"src": "1564:92:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1702,
										"nodeType": "Block",
										"src": "1832:1083:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1602,
																"name": "kycVerified",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1494,
																"src": "1851:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1604,
															"indexExpression": {
																"id": 1603,
																"name": "borrower",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1590,
																"src": "1863:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1851:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426f72726f776572206d757374206265204b5943207665726966696564",
															"id": 1605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1874:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_012f6a3f83e4cc86f0cf1682e12d7740f32dd3e177b248400863dc8750bb6121",
																"typeString": "literal_string \"Borrower must be KYC verified\""
															},
															"value": "Borrower must be KYC verified"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_012f6a3f83e4cc86f0cf1682e12d7740f32dd3e177b248400863dc8750bb6121",
																"typeString": "literal_string \"Borrower must be KYC verified\""
															}
														],
														"id": 1601,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1843:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1843:63:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1607,
												"nodeType": "ExpressionStatement",
												"src": "1843:63:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1610,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1935:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1939:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1935:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1609,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "1925:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1925:21:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1613,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1592,
																"src": "1950:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1925:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742066756e6473",
															"id": 1615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1958:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																"typeString": "literal_string \"Insufficient funds\""
															},
															"value": "Insufficient funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																"typeString": "literal_string \"Insufficient funds\""
															}
														],
														"id": 1608,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1917:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1917:62:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1617,
												"nodeType": "ExpressionStatement",
												"src": "1917:62:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1620,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2008:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2012:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2008:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1624,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2028:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_CreditToken_$2053",
																					"typeString": "contract CreditToken"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_CreditToken_$2053",
																					"typeString": "contract CreditToken"
																				}
																			],
																			"id": 1623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2020:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1622,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2020:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2020:13:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1619,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 516,
																	"src": "1998:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 1626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1998:36:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1627,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1592,
																"src": "2038:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1998:46:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c6c6f77616e6365206973206e6f7420656e6f756768",
															"id": 1629,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2046:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e8ace920544dc1be56db4376a060214d1b3ad04505f6a4258960ceec2ae8d913",
																"typeString": "literal_string \"Allowance is not enough\""
															},
															"value": "Allowance is not enough"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e8ace920544dc1be56db4376a060214d1b3ad04505f6a4258960ceec2ae8d913",
																"typeString": "literal_string \"Allowance is not enough\""
															}
														],
														"id": 1618,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1990:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1990:82:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1631,
												"nodeType": "ExpressionStatement",
												"src": "1990:82:11"
											},
											{
												"assignments": [
													1633
												],
												"declarations": [
													{
														"constant": false,
														"id": 1633,
														"mutability": "mutable",
														"name": "loanDuration",
														"nameLocation": "2093:12:11",
														"nodeType": "VariableDeclaration",
														"scope": 1702,
														"src": "2085:20:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1632,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2085:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1635,
												"initialValue": {
													"hexValue": "3330",
													"id": 1634,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2108:2:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_30_by_1",
														"typeString": "int_const 30"
													},
													"value": "30"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2085:25:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1637,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2139:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2143:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2139:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1641,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2159:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CreditToken_$2053",
																		"typeString": "contract CreditToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CreditToken_$2053",
																		"typeString": "contract CreditToken"
																	}
																],
																"id": 1640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2151:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1639,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2151:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2151:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1643,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "2166:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1636,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2033,
														"src": "2121:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2121:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1645,
												"nodeType": "ExpressionStatement",
												"src": "2121:52:11"
											},
											{
												"assignments": [
													1647
												],
												"declarations": [
													{
														"constant": false,
														"id": 1647,
														"mutability": "mutable",
														"name": "nftTokenId",
														"nameLocation": "2192:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1702,
														"src": "2184:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1646,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2184:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1650,
												"initialValue": {
													"id": 1649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "2205:13:11",
													"subExpression": {
														"id": 1648,
														"name": "nextTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1460,
														"src": "2205:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2184:34:11"
											},
											{
												"assignments": [
													1652
												],
												"declarations": [
													{
														"constant": false,
														"id": 1652,
														"mutability": "mutable",
														"name": "loanId",
														"nameLocation": "2237:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1702,
														"src": "2229:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1651,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2229:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1655,
												"initialValue": {
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "2246:12:11",
													"subExpression": {
														"id": 1653,
														"name": "nextLoanId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1497,
														"src": "2246:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2229:29:11"
											},
											{
												"expression": {
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1656,
															"name": "loans",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "2271:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$1485_storage_$",
																"typeString": "mapping(uint256 => struct CreditToken.Loan storage ref)"
															}
														},
														"id": 1658,
														"indexExpression": {
															"id": 1657,
															"name": "loanId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1652,
															"src": "2277:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2271:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Loan_$1485_storage",
															"typeString": "struct CreditToken.Loan storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1660,
																"name": "borrower",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1590,
																"src": "2317:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"id": 1661,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2348:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2352:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2348:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1663,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1592,
																"src": "2381:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1664,
																"name": "interestAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1594,
																"src": "2418:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1665,
																"name": "loanDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1633,
																"src": "2461:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1666,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2497:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2503:9:11",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2497:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1670,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1668,
																				"name": "loanDuration",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1633,
																				"src": "2516:12:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1669,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2531:6:11",
																				"subdenomination": "days",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_86400_by_1",
																					"typeString": "int_const 86400"
																				},
																				"value": "1"
																			},
																			"src": "2516:21:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1671,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2515:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2497:41:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "66616c7365",
																"id": 1673,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2561:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "66616c7365",
																"id": 1674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2591:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "66616c7365",
																"id": 1675,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2621:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"id": 1676,
																"name": "nftTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1647,
																"src": "2653:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "66616c7365",
																"id": 1677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2691:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"id": 1678,
																"name": "terms",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "2718:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"id": 1659,
															"name": "Loan",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "2287:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Loan_$1485_storage_ptr_$",
																"typeString": "type(struct CreditToken.Loan storage pointer)"
															}
														},
														"id": 1679,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"2307:8:11",
															"2340:6:11",
															"2373:6:11",
															"2402:14:11",
															"2447:12:11",
															"2488:7:11",
															"2553:6:11",
															"2581:8:11",
															"2611:8:11",
															"2641:10:11",
															"2678:11:11",
															"2711:5:11"
														],
														"names": [
															"borrower",
															"lender",
															"amount",
															"interestAmount",
															"loanDuration",
															"dueDate",
															"repaid",
															"accepted",
															"canceled",
															"nftTokenId",
															"isNFTBurned",
															"terms"
														],
														"nodeType": "FunctionCall",
														"src": "2287:448:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Loan_$1485_memory_ptr",
															"typeString": "struct CreditToken.Loan memory"
														}
													},
													"src": "2271:464:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Loan_$1485_storage",
														"typeString": "struct CreditToken.Loan storage ref"
													}
												},
												"id": 1681,
												"nodeType": "ExpressionStatement",
												"src": "2271:464:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1683,
															"name": "loanId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1652,
															"src": "2764:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1684,
															"name": "borrower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "2772:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1685,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2782:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2786:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2782:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1687,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "2794:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1688,
															"name": "interestAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1594,
															"src": "2802:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1689,
															"name": "nftTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1647,
															"src": "2818:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1690,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2830:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2836:9:11",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2830:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1692,
																			"name": "loanDuration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1633,
																			"src": "2849:12:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1693,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2864:6:11",
																			"subdenomination": "days",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_86400_by_1",
																				"typeString": "int_const 86400"
																			},
																			"value": "1"
																		},
																		"src": "2849:21:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1695,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2848:23:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2830:41:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1697,
															"name": "terms",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "2873:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1682,
														"name": "LoanIssued",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1515,
														"src": "2753:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,address,address,uint256,uint256,uint256,uint256,string memory)"
														}
													},
													"id": 1698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2753:126:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1699,
												"nodeType": "EmitStatement",
												"src": "2748:131:11"
											},
											{
												"expression": {
													"id": 1700,
													"name": "nftTokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1647,
													"src": "2897:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1600,
												"id": 1701,
												"nodeType": "Return",
												"src": "2890:17:11"
											}
										]
									},
									"functionSelector": "1a2ff598",
									"id": 1703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "issueLoan",
									"nameLocation": "1673:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "borrower",
												"nameLocation": "1701:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "1693:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1693:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1728:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "1720:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1720:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "interestAmount",
												"nameLocation": "1753:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "1745:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1745:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "terms",
												"nameLocation": "1792:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "1778:19:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1595,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1778:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:122:11"
									},
									"returnParameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "1823:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1823:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1822:9:11"
									},
									"scope": 2053,
									"src": "1664:1251:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1748,
										"nodeType": "Block",
										"src": "2968:305:11",
										"statements": [
											{
												"assignments": [
													1710
												],
												"declarations": [
													{
														"constant": false,
														"id": 1710,
														"mutability": "mutable",
														"name": "loan",
														"nameLocation": "2992:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 1748,
														"src": "2979:17:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Loan_$1485_storage_ptr",
															"typeString": "struct CreditToken.Loan"
														},
														"typeName": {
															"id": 1709,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1708,
																"name": "Loan",
																"nameLocations": [
																	"2979:4:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1485,
																"src": "2979:4:11"
															},
															"referencedDeclaration": 1485,
															"src": "2979:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Loan_$1485_storage_ptr",
																"typeString": "struct CreditToken.Loan"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1714,
												"initialValue": {
													"baseExpression": {
														"id": 1711,
														"name": "loans",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1490,
														"src": "2999:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$1485_storage_$",
															"typeString": "mapping(uint256 => struct CreditToken.Loan storage ref)"
														}
													},
													"id": 1713,
													"indexExpression": {
														"id": 1712,
														"name": "loanId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1705,
														"src": "3005:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2999:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Loan_$1485_storage",
														"typeString": "struct CreditToken.Loan storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2979:33:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1716,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3031:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3035:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3031:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1718,
																	"name": "loan",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1710,
																	"src": "3045:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Loan_$1485_storage_ptr",
																		"typeString": "struct CreditToken.Loan storage pointer"
																	}
																},
																"id": 1719,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3050:8:11",
																"memberName": "borrower",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1462,
																"src": "3045:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3031:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920626f72726f7765722063616e20616363657074",
															"id": 1721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3060:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4d80d3094575a659c46b7e44006980a5dd7955bb1e180e936b9bc133c4f8218f",
																"typeString": "literal_string \"Only borrower can accept\""
															},
															"value": "Only borrower can accept"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4d80d3094575a659c46b7e44006980a5dd7955bb1e180e936b9bc133c4f8218f",
																"typeString": "literal_string \"Only borrower can accept\""
															}
														],
														"id": 1715,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3023:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3023:64:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1723,
												"nodeType": "ExpressionStatement",
												"src": "3023:64:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3106:14:11",
															"subExpression": {
																"expression": {
																	"id": 1725,
																	"name": "loan",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1710,
																	"src": "3107:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Loan_$1485_storage_ptr",
																		"typeString": "struct CreditToken.Loan storage pointer"
																	}
																},
																"id": 1726,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3112:8:11",
																"memberName": "accepted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1476,
																"src": "3107:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6f616e20616c7265616479206163636570746564",
															"id": 1728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3122:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3fff4684e62df955459aa4d38296cd5485059b1bcadaa915955ad9bd719f3844",
																"typeString": "literal_string \"Loan already accepted\""
															},
															"value": "Loan already accepted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3fff4684e62df955459aa4d38296cd5485059b1bcadaa915955ad9bd719f3844",
																"typeString": "literal_string \"Loan already accepted\""
															}
														],
														"id": 1724,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3098:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3098:48:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1730,
												"nodeType": "ExpressionStatement",
												"src": "3098:48:11"
											},
											{
												"expression": {
													"id": 1735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1731,
															"name": "loan",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1710,
															"src": "3157:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Loan_$1485_storage_ptr",
																"typeString": "struct CreditToken.Loan storage pointer"
															}
														},
														"id": 1733,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3162:8:11",
														"memberName": "accepted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1476,
														"src": "3157:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1734,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3173:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3157:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1736,
												"nodeType": "ExpressionStatement",
												"src": "3157:20:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1738,
																"name": "loan",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1710,
																"src": "3202:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Loan_$1485_storage_ptr",
																	"typeString": "struct CreditToken.Loan storage pointer"
																}
															},
															"id": 1739,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3207:8:11",
															"memberName": "borrower",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1462,
															"src": "3202:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1740,
																"name": "loan",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1710,
																"src": "3217:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Loan_$1485_storage_ptr",
																	"typeString": "struct CreditToken.Loan storage pointer"
																}
															},
															"id": 1741,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3222:6:11",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1466,
															"src": "3217:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1737,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2052,
														"src": "3188:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3188:41:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1743,
												"nodeType": "ExpressionStatement",
												"src": "3188:41:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1745,
															"name": "loanId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1705,
															"src": "3258:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1744,
														"name": "LoanAccepted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1519,
														"src": "3245:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3245:20:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1747,
												"nodeType": "EmitStatement",
												"src": "3240:25:11"
											}
										]
									},
									"functionSelector": "adfbe22f",
									"id": 1749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "acceptLoan",
									"nameLocation": "2932:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "loanId",
												"nameLocation": "2951:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "2943:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2943:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2942:16:11"
									},
									"returnParameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2968:0:11"
									},
									"scope": 2053,
									"src": "2923:350:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1814,
										"nodeType": "Block",
										"src": "3325:477:11",
										"statements": [
											{
												"assignments": [
													1756
												],
												"declarations": [
													{
														"constant": false,
														"id": 1756,
														"mutability": "mutable",
														"name": "loan",
														"nameLocation": "3349:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 1814,
														"src": "3336:17:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Loan_$1485_storage_ptr",
															"typeString": "struct CreditToken.Loan"
														},
														"typeName": {
															"id": 1755,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1754,
																"name": "Loan",
																"nameLocations": [
																	"3336:4:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1485,
																"src": "3336:4:11"
															},
															"referencedDeclaration": 1485,
															"src": "3336:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Loan_$1485_storage_ptr",
																"typeString": "struct CreditToken.Loan"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1760,
												"initialValue": {
													"baseExpression": {
														"id": 1757,
														"name": "loans",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1490,
														"src": "3356:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$1485_storage_$",
															"typeString": "mapping(uint256 => struct CreditToken.Loan storage ref)"
														}
													},
													"id": 1759,
													"indexExpression": {
														"id": 1758,
														"name": "loanId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1751,
														"src": "3362:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3356:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Loan_$1485_storage",
														"typeString": "struct CreditToken.Loan storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3336:33:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1762,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3388:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3392:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3388:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1764,
																	"name": "loan",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1756,
																	"src": "3402:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Loan_$1485_storage_ptr",
																		"typeString": "struct CreditToken.Loan storage pointer"
																	}
																},
																"id": 1765,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3407:8:11",
																"memberName": "borrower",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1462,
																"src": "3402:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3388:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920626f72726f7765722063616e207265706179",
															"id": 1767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3417:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ea61514b076355fd74cc868f0a530b4816a48e9424c44b3218f6eaf917d3d18e",
																"typeString": "literal_string \"Only borrower can repay\""
															},
															"value": "Only borrower can repay"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ea61514b076355fd74cc868f0a530b4816a48e9424c44b3218f6eaf917d3d18e",
																"typeString": "literal_string \"Only borrower can repay\""
															}
														],
														"id": 1761,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3380:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3380:63:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1769,
												"nodeType": "ExpressionStatement",
												"src": "3380:63:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1771,
																"name": "loan",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1756,
																"src": "3462:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Loan_$1485_storage_ptr",
																	"typeString": "struct CreditToken.Loan storage pointer"
																}
															},
															"id": 1772,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3467:8:11",
															"memberName": "accepted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1476,
															"src": "3462:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6f616e206d757374206265206163636570746564206669727374",
															"id": 1773,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3477:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ee10fd3130e11f66c5668ce4a72b75e62fb1c6c3bf42e0daa0866d6aebb323c9",
																"typeString": "literal_string \"Loan must be accepted first\""
															},
															"value": "Loan must be accepted first"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ee10fd3130e11f66c5668ce4a72b75e62fb1c6c3bf42e0daa0866d6aebb323c9",
																"typeString": "literal_string \"Loan must be accepted first\""
															}
														],
														"id": 1770,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3454:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3454:53:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1775,
												"nodeType": "ExpressionStatement",
												"src": "3454:53:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3526:12:11",
															"subExpression": {
																"expression": {
																	"id": 1777,
																	"name": "loan",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1756,
																	"src": "3527:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Loan_$1485_storage_ptr",
																		"typeString": "struct CreditToken.Loan storage pointer"
																	}
																},
																"id": 1778,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3532:6:11",
																"memberName": "repaid",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1474,
																"src": "3527:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6f616e20616c726561647920726570616964",
															"id": 1780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3540:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a088ab1f5c37ff63830f8ba110e314fea69e930646a4a57be513c9eb44c36474",
																"typeString": "literal_string \"Loan already repaid\""
															},
															"value": "Loan already repaid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a088ab1f5c37ff63830f8ba110e314fea69e930646a4a57be513c9eb44c36474",
																"typeString": "literal_string \"Loan already repaid\""
															}
														],
														"id": 1776,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3518:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3518:44:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1782,
												"nodeType": "ExpressionStatement",
												"src": "3518:44:11"
											},
											{
												"assignments": [
													1784
												],
												"declarations": [
													{
														"constant": false,
														"id": 1784,
														"mutability": "mutable",
														"name": "totalAmount",
														"nameLocation": "3583:11:11",
														"nodeType": "VariableDeclaration",
														"scope": 1814,
														"src": "3575:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1783,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3575:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1790,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1785,
															"name": "loan",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1756,
															"src": "3597:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Loan_$1485_storage_ptr",
																"typeString": "struct CreditToken.Loan storage pointer"
															}
														},
														"id": 1786,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3602:6:11",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1466,
														"src": "3597:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"expression": {
															"id": 1787,
															"name": "loan",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1756,
															"src": "3611:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Loan_$1485_storage_ptr",
																"typeString": "struct CreditToken.Loan storage pointer"
															}
														},
														"id": 1788,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3616:14:11",
														"memberName": "interestAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1468,
														"src": "3611:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3597:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3575:55:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1792,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3659:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3663:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3659:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1794,
																"name": "loan",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1756,
																"src": "3671:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Loan_$1485_storage_ptr",
																	"typeString": "struct CreditToken.Loan storage pointer"
																}
															},
															"id": 1795,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3676:6:11",
															"memberName": "lender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1464,
															"src": "3671:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1796,
															"name": "totalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1784,
															"src": "3684:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1791,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2033,
														"src": "3641:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3641:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1798,
												"nodeType": "ExpressionStatement",
												"src": "3641:55:11"
											},
											{
												"expression": {
													"id": 1803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1799,
															"name": "loan",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1756,
															"src": "3707:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Loan_$1485_storage_ptr",
																"typeString": "struct CreditToken.Loan storage pointer"
															}
														},
														"id": 1801,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3712:6:11",
														"memberName": "repaid",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1474,
														"src": "3707:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1802,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3721:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3707:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1804,
												"nodeType": "ExpressionStatement",
												"src": "3707:18:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1806,
																"name": "loan",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1756,
																"src": "3744:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Loan_$1485_storage_ptr",
																	"typeString": "struct CreditToken.Loan storage pointer"
																}
															},
															"id": 1807,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3749:10:11",
															"memberName": "nftTokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1480,
															"src": "3744:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1805,
														"name": "burnNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "3736:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3736:24:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1809,
												"nodeType": "ExpressionStatement",
												"src": "3736:24:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1811,
															"name": "loanId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1751,
															"src": "3787:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1810,
														"name": "LoanRepaid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1523,
														"src": "3776:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3776:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1813,
												"nodeType": "EmitStatement",
												"src": "3771:23:11"
											}
										]
									},
									"functionSelector": "ab7b1c89",
									"id": 1815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "repayLoan",
									"nameLocation": "3290:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "loanId",
												"nameLocation": "3308:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "3300:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3300:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3299:16:11"
									},
									"returnParameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3325:0:11"
									},
									"scope": 2053,
									"src": "3281:521:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1852,
										"nodeType": "Block",
										"src": "3856:255:11",
										"statements": [
											{
												"body": {
													"id": 1850,
													"nodeType": "Block",
													"src": "3908:196:11",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1830,
																			"name": "loans",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1490,
																			"src": "3927:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$1485_storage_$",
																				"typeString": "mapping(uint256 => struct CreditToken.Loan storage ref)"
																			}
																		},
																		"id": 1832,
																		"indexExpression": {
																			"id": 1831,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1821,
																			"src": "3933:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3927:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Loan_$1485_storage",
																			"typeString": "struct CreditToken.Loan storage ref"
																		}
																	},
																	"id": 1833,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3936:10:11",
																	"memberName": "nftTokenId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1480,
																	"src": "3927:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1834,
																	"name": "nftTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1817,
																	"src": "3950:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3927:33:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1849,
															"nodeType": "IfStatement",
															"src": "3923:170:11",
															"trueBody": {
																"id": 1848,
																"nodeType": "Block",
																"src": "3962:131:11",
																"statements": [
																	{
																		"expression": {
																			"id": 1841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 1836,
																						"name": "loans",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1490,
																						"src": "3981:5:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$1485_storage_$",
																							"typeString": "mapping(uint256 => struct CreditToken.Loan storage ref)"
																						}
																					},
																					"id": 1838,
																					"indexExpression": {
																						"id": 1837,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1821,
																						"src": "3987:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3981:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Loan_$1485_storage",
																						"typeString": "struct CreditToken.Loan storage ref"
																					}
																				},
																				"id": 1839,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "3990:11:11",
																				"memberName": "isNFTBurned",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1482,
																				"src": "3981:20:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 1840,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4004:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "3981:27:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1842,
																		"nodeType": "ExpressionStatement",
																		"src": "3981:27:11"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1844,
																					"name": "nftTokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1817,
																					"src": "4042:10:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1843,
																				"name": "NFTBurned",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1539,
																				"src": "4032:9:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 1845,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4032:21:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1846,
																		"nodeType": "EmitStatement",
																		"src": "4027:26:11"
																	},
																	{
																		"id": 1847,
																		"nodeType": "Break",
																		"src": "4072:5:11"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1824,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1821,
														"src": "3887:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1825,
														"name": "nextLoanId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1497,
														"src": "3891:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3887:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1851,
												"initializationExpression": {
													"assignments": [
														1821
													],
													"declarations": [
														{
															"constant": false,
															"id": 1821,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3880:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 1851,
															"src": "3872:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1820,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3872:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1823,
													"initialValue": {
														"hexValue": "31",
														"id": 1822,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3884:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3872:13:11"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3903:3:11",
														"subExpression": {
															"id": 1827,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1821,
															"src": "3903:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1829,
													"nodeType": "ExpressionStatement",
													"src": "3903:3:11"
												},
												"nodeType": "ForStatement",
												"src": "3867:237:11"
											}
										]
									},
									"id": 1853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnNFT",
									"nameLocation": "3819:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "nftTokenId",
												"nameLocation": "3835:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "3827:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3827:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3826:20:11"
									},
									"returnParameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3856:0:11"
									},
									"scope": 2053,
									"src": "3810:301:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1887,
										"nodeType": "Block",
										"src": "4189:209:11",
										"statements": [
											{
												"body": {
													"id": 1883,
													"nodeType": "Block",
													"src": "4241:127:11",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1870,
																			"name": "loans",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1490,
																			"src": "4260:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$1485_storage_$",
																				"typeString": "mapping(uint256 => struct CreditToken.Loan storage ref)"
																			}
																		},
																		"id": 1872,
																		"indexExpression": {
																			"id": 1871,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1861,
																			"src": "4266:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4260:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Loan_$1485_storage",
																			"typeString": "struct CreditToken.Loan storage ref"
																		}
																	},
																	"id": 1873,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4269:10:11",
																	"memberName": "nftTokenId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1480,
																	"src": "4260:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1874,
																	"name": "nftTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1855,
																	"src": "4283:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4260:33:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1882,
															"nodeType": "IfStatement",
															"src": "4256:101:11",
															"trueBody": {
																"id": 1881,
																"nodeType": "Block",
																"src": "4295:62:11",
																"statements": [
																	{
																		"expression": {
																			"expression": {
																				"baseExpression": {
																					"id": 1876,
																					"name": "loans",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1490,
																					"src": "4321:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$1485_storage_$",
																						"typeString": "mapping(uint256 => struct CreditToken.Loan storage ref)"
																					}
																				},
																				"id": 1878,
																				"indexExpression": {
																					"id": 1877,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1861,
																					"src": "4327:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4321:8:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Loan_$1485_storage",
																					"typeString": "struct CreditToken.Loan storage ref"
																				}
																			},
																			"id": 1879,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4330:11:11",
																			"memberName": "isNFTBurned",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1482,
																			"src": "4321:20:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"functionReturnParameters": 1859,
																		"id": 1880,
																		"nodeType": "Return",
																		"src": "4314:27:11"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1864,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1861,
														"src": "4220:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1865,
														"name": "nextLoanId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1497,
														"src": "4224:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4220:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1884,
												"initializationExpression": {
													"assignments": [
														1861
													],
													"declarations": [
														{
															"constant": false,
															"id": 1861,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4213:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 1884,
															"src": "4205:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1860,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4205:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1863,
													"initialValue": {
														"hexValue": "31",
														"id": 1862,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4217:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4205:13:11"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1868,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4236:3:11",
														"subExpression": {
															"id": 1867,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1861,
															"src": "4236:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1869,
													"nodeType": "ExpressionStatement",
													"src": "4236:3:11"
												},
												"nodeType": "ForStatement",
												"src": "4200:168:11"
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 1885,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4385:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 1859,
												"id": 1886,
												"nodeType": "Return",
												"src": "4378:12:11"
											}
										]
									},
									"functionSelector": "c2fdbdad",
									"id": 1888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isNFTBurned",
									"nameLocation": "4128:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "nftTokenId",
												"nameLocation": "4148:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "4140:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4140:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4139:20:11"
									},
									"returnParameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "4183:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1857,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4183:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4182:6:11"
									},
									"scope": 2053,
									"src": "4119:279:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1940,
										"nodeType": "Block",
										"src": "4451:367:11",
										"statements": [
											{
												"assignments": [
													1895
												],
												"declarations": [
													{
														"constant": false,
														"id": 1895,
														"mutability": "mutable",
														"name": "loan",
														"nameLocation": "4475:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 1940,
														"src": "4462:17:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Loan_$1485_storage_ptr",
															"typeString": "struct CreditToken.Loan"
														},
														"typeName": {
															"id": 1894,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1893,
																"name": "Loan",
																"nameLocations": [
																	"4462:4:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1485,
																"src": "4462:4:11"
															},
															"referencedDeclaration": 1485,
															"src": "4462:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Loan_$1485_storage_ptr",
																"typeString": "struct CreditToken.Loan"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1899,
												"initialValue": {
													"baseExpression": {
														"id": 1896,
														"name": "loans",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1490,
														"src": "4482:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$1485_storage_$",
															"typeString": "mapping(uint256 => struct CreditToken.Loan storage ref)"
														}
													},
													"id": 1898,
													"indexExpression": {
														"id": 1897,
														"name": "loanId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1890,
														"src": "4488:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4482:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Loan_$1485_storage",
														"typeString": "struct CreditToken.Loan storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4462:33:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1901,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4514:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4518:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4514:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1903,
																	"name": "loan",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1895,
																	"src": "4528:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Loan_$1485_storage_ptr",
																		"typeString": "struct CreditToken.Loan storage pointer"
																	}
																},
																"id": 1904,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4533:6:11",
																"memberName": "lender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1464,
																"src": "4528:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4514:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206c656e6465722063616e2063616e63656c",
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4541:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_105e73626a7e497364218351d5a4f17588827e87508fa24d8078e82a25737496",
																"typeString": "literal_string \"Only lender can cancel\""
															},
															"value": "Only lender can cancel"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_105e73626a7e497364218351d5a4f17588827e87508fa24d8078e82a25737496",
																"typeString": "literal_string \"Only lender can cancel\""
															}
														],
														"id": 1900,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4506:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4506:60:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1908,
												"nodeType": "ExpressionStatement",
												"src": "4506:60:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4585:14:11",
															"subExpression": {
																"expression": {
																	"id": 1910,
																	"name": "loan",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1895,
																	"src": "4586:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Loan_$1485_storage_ptr",
																		"typeString": "struct CreditToken.Loan storage pointer"
																	}
																},
																"id": 1911,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4591:8:11",
																"memberName": "canceled",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1478,
																"src": "4586:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6f616e20616c72656164792063616e63656c6c6564",
															"id": 1913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4601:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6311301fb3b87173647430fa47d57a08f88ecb228c291c7a22b64d3d67bfd616",
																"typeString": "literal_string \"Loan already cancelled\""
															},
															"value": "Loan already cancelled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6311301fb3b87173647430fa47d57a08f88ecb228c291c7a22b64d3d67bfd616",
																"typeString": "literal_string \"Loan already cancelled\""
															}
														],
														"id": 1909,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4577:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4577:49:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1915,
												"nodeType": "ExpressionStatement",
												"src": "4577:49:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4645:14:11",
															"subExpression": {
																"expression": {
																	"id": 1917,
																	"name": "loan",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1895,
																	"src": "4646:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Loan_$1485_storage_ptr",
																		"typeString": "struct CreditToken.Loan storage pointer"
																	}
																},
																"id": 1918,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4651:8:11",
																"memberName": "accepted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1476,
																"src": "4646:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742063616e63656c20616e206163636570746564206c6f616e",
															"id": 1920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4661:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_83847a01f353647392b24bf89240026d74573a39de2b84d6265cef1478825a96",
																"typeString": "literal_string \"Cannot cancel an accepted loan\""
															},
															"value": "Cannot cancel an accepted loan"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_83847a01f353647392b24bf89240026d74573a39de2b84d6265cef1478825a96",
																"typeString": "literal_string \"Cannot cancel an accepted loan\""
															}
														],
														"id": 1916,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4637:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4637:57:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1922,
												"nodeType": "ExpressionStatement",
												"src": "4637:57:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1924,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4719:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4723:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4719:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1926,
																"name": "loan",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1895,
																"src": "4731:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Loan_$1485_storage_ptr",
																	"typeString": "struct CreditToken.Loan storage pointer"
																}
															},
															"id": 1927,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4736:6:11",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1466,
															"src": "4731:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1923,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2052,
														"src": "4705:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4705:38:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1929,
												"nodeType": "ExpressionStatement",
												"src": "4705:38:11"
											},
											{
												"expression": {
													"id": 1934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1930,
															"name": "loan",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1895,
															"src": "4754:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Loan_$1485_storage_ptr",
																"typeString": "struct CreditToken.Loan storage pointer"
															}
														},
														"id": 1932,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4759:8:11",
														"memberName": "canceled",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1478,
														"src": "4754:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1933,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4770:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4754:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1935,
												"nodeType": "ExpressionStatement",
												"src": "4754:20:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1937,
															"name": "loanId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1890,
															"src": "4803:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1936,
														"name": "LoanCanceled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1527,
														"src": "4790:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4790:20:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1939,
												"nodeType": "EmitStatement",
												"src": "4785:25:11"
											}
										]
									},
									"functionSelector": "bdbfa3de",
									"id": 1941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cancelLoan",
									"nameLocation": "4415:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "loanId",
												"nameLocation": "4434:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "4426:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4426:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4425:16:11"
									},
									"returnParameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4451:0:11"
									},
									"scope": 2053,
									"src": "4406:412:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1979,
										"nodeType": "Block",
										"src": "4873:266:11",
										"statements": [
											{
												"assignments": [
													1948
												],
												"declarations": [
													{
														"constant": false,
														"id": 1948,
														"mutability": "mutable",
														"name": "loan",
														"nameLocation": "4897:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 1979,
														"src": "4884:17:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Loan_$1485_storage_ptr",
															"typeString": "struct CreditToken.Loan"
														},
														"typeName": {
															"id": 1947,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1946,
																"name": "Loan",
																"nameLocations": [
																	"4884:4:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1485,
																"src": "4884:4:11"
															},
															"referencedDeclaration": 1485,
															"src": "4884:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Loan_$1485_storage_ptr",
																"typeString": "struct CreditToken.Loan"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1952,
												"initialValue": {
													"baseExpression": {
														"id": 1949,
														"name": "loans",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1490,
														"src": "4904:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$1485_storage_$",
															"typeString": "mapping(uint256 => struct CreditToken.Loan storage ref)"
														}
													},
													"id": 1951,
													"indexExpression": {
														"id": 1950,
														"name": "loanId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1943,
														"src": "4910:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4904:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Loan_$1485_storage",
														"typeString": "struct CreditToken.Loan storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4884:33:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1954,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4936:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4942:9:11",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4936:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"id": 1956,
																	"name": "loan",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1948,
																	"src": "4954:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Loan_$1485_storage_ptr",
																		"typeString": "struct CreditToken.Loan storage pointer"
																	}
																},
																"id": 1957,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4959:7:11",
																"memberName": "dueDate",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1472,
																"src": "4954:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4936:30:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6f616e206973207374696c6c2077697468696e2072657061796d656e7420706572696f64",
															"id": 1959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4968:39:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e192d299a97f125a942ab2d9468382b9cac83264907053cf28511765133e0251",
																"typeString": "literal_string \"Loan is still within repayment period\""
															},
															"value": "Loan is still within repayment period"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e192d299a97f125a942ab2d9468382b9cac83264907053cf28511765133e0251",
																"typeString": "literal_string \"Loan is still within repayment period\""
															}
														],
														"id": 1953,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4928:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4928:80:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1961,
												"nodeType": "ExpressionStatement",
												"src": "4928:80:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5027:12:11",
															"subExpression": {
																"expression": {
																	"id": 1963,
																	"name": "loan",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1948,
																	"src": "5028:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Loan_$1485_storage_ptr",
																		"typeString": "struct CreditToken.Loan storage pointer"
																	}
																},
																"id": 1964,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5033:6:11",
																"memberName": "repaid",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1474,
																"src": "5028:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6f616e20616c726561647920726570616964",
															"id": 1966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5041:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a088ab1f5c37ff63830f8ba110e314fea69e930646a4a57be513c9eb44c36474",
																"typeString": "literal_string \"Loan already repaid\""
															},
															"value": "Loan already repaid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a088ab1f5c37ff63830f8ba110e314fea69e930646a4a57be513c9eb44c36474",
																"typeString": "literal_string \"Loan already repaid\""
															}
														],
														"id": 1962,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5019:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5019:44:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1968,
												"nodeType": "ExpressionStatement",
												"src": "5019:44:11"
											},
											{
												"expression": {
													"id": 1973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1969,
															"name": "loan",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1948,
															"src": "5074:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Loan_$1485_storage_ptr",
																"typeString": "struct CreditToken.Loan storage pointer"
															}
														},
														"id": 1971,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5079:8:11",
														"memberName": "canceled",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1478,
														"src": "5074:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1972,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5090:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5074:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1974,
												"nodeType": "ExpressionStatement",
												"src": "5074:20:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1976,
															"name": "loanId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1943,
															"src": "5124:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1975,
														"name": "DefaultedLoan",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1531,
														"src": "5110:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5110:21:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1978,
												"nodeType": "EmitStatement",
												"src": "5105:26:11"
											}
										]
									},
									"functionSelector": "759135a1",
									"id": 1980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkDefault",
									"nameLocation": "4835:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "loanId",
												"nameLocation": "4856:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "4848:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4848:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4847:16:11"
									},
									"returnParameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4873:0:11"
									},
									"scope": 2053,
									"src": "4826:313:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2010,
										"nodeType": "Block",
										"src": "5217:204:11",
										"statements": [
											{
												"assignments": [
													1989
												],
												"declarations": [
													{
														"constant": false,
														"id": 1989,
														"mutability": "mutable",
														"name": "loan",
														"nameLocation": "5241:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 2010,
														"src": "5228:17:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Loan_$1485_storage_ptr",
															"typeString": "struct CreditToken.Loan"
														},
														"typeName": {
															"id": 1988,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1987,
																"name": "Loan",
																"nameLocations": [
																	"5228:4:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1485,
																"src": "5228:4:11"
															},
															"referencedDeclaration": 1485,
															"src": "5228:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Loan_$1485_storage_ptr",
																"typeString": "struct CreditToken.Loan"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1993,
												"initialValue": {
													"baseExpression": {
														"id": 1990,
														"name": "loans",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1490,
														"src": "5248:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$1485_storage_$",
															"typeString": "mapping(uint256 => struct CreditToken.Loan storage ref)"
														}
													},
													"id": 1992,
													"indexExpression": {
														"id": 1991,
														"name": "loanId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1982,
														"src": "5254:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5248:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Loan_$1485_storage",
														"typeString": "struct CreditToken.Loan storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5228:33:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1994,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5276:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1995,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5282:9:11",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "5276:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"expression": {
															"id": 1996,
															"name": "loan",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1989,
															"src": "5295:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Loan_$1485_storage_ptr",
																"typeString": "struct CreditToken.Loan storage pointer"
															}
														},
														"id": 1997,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5300:7:11",
														"memberName": "dueDate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1472,
														"src": "5295:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5276:31:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2008,
													"nodeType": "Block",
													"src": "5350:64:11",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2006,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2002,
																		"name": "loan",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1989,
																		"src": "5372:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Loan_$1485_storage_ptr",
																			"typeString": "struct CreditToken.Loan storage pointer"
																		}
																	},
																	"id": 2003,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5377:7:11",
																	"memberName": "dueDate",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1472,
																	"src": "5372:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 2004,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "5387:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5393:9:11",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "5387:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5372:30:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1986,
															"id": 2007,
															"nodeType": "Return",
															"src": "5365:37:11"
														}
													]
												},
												"id": 2009,
												"nodeType": "IfStatement",
												"src": "5272:142:11",
												"trueBody": {
													"id": 2001,
													"nodeType": "Block",
													"src": "5309:35:11",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1999,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5331:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1986,
															"id": 2000,
															"nodeType": "Return",
															"src": "5324:8:11"
														}
													]
												}
											}
										]
									},
									"functionSelector": "a6f5b3b3",
									"id": 2011,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "timeUntilDue",
									"nameLocation": "5156:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "loanId",
												"nameLocation": "5177:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "5169:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5168:16:11"
									},
									"returnParameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "5208:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5208:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5207:9:11"
									},
									"scope": 2053,
									"src": "5147:274:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2032,
										"nodeType": "Block",
										"src": "5507:74:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2027,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2013,
															"src": "5556:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2028,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2015,
															"src": "5562:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2029,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2017,
															"src": "5566:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2023,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5532:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_CreditToken_$2053",
																				"typeString": "contract CreditToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_CreditToken_$2053",
																				"typeString": "contract CreditToken"
																			}
																		],
																		"id": 2022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5524:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2021,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5524:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5524:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2020,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 889,
																"src": "5518:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$889_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 2025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5518:20:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$889",
																"typeString": "contract ERC20"
															}
														},
														"id": 2026,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5539:16:11",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1065,
														"src": "5518:37:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$967_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 2030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5518:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2031,
												"nodeType": "ExpressionStatement",
												"src": "5518:55:11"
											}
										]
									},
									"id": 2033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "5438:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5464:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2033,
												"src": "5456:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5456:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5478:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2033,
												"src": "5470:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5470:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5490:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2033,
												"src": "5482:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5482:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5455:42:11"
									},
									"returnParameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5507:0:11"
									},
									"scope": 2053,
									"src": "5429:152:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2051,
										"nodeType": "Block",
										"src": "5649:64:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2047,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2035,
															"src": "5694:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2048,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2037,
															"src": "5698:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2043,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5674:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_CreditToken_$2053",
																				"typeString": "contract CreditToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_CreditToken_$2053",
																				"typeString": "contract CreditToken"
																			}
																		],
																		"id": 2042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5666:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2041,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5666:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2044,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5666:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2040,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 889,
																"src": "5660:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$889_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 2045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5660:20:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$889",
																"typeString": "contract ERC20"
															}
														},
														"id": 2046,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5681:12:11",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1038,
														"src": "5660:33:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$967_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5660:45:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2050,
												"nodeType": "ExpressionStatement",
												"src": "5660:45:11"
											}
										]
									},
									"id": 2052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "5598:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5620:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "5612:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5612:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5632:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "5624:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5624:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5611:28:11"
									},
									"returnParameters": {
										"id": 2039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5649:0:11"
									},
									"scope": 2053,
									"src": "5589:124:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2054,
							"src": "247:5469:11",
							"usedErrors": [
								13,
								18,
								249,
								254,
								259,
								268,
								273,
								278,
								1005
							],
							"usedEvents": [
								24,
								901,
								910,
								1515,
								1519,
								1523,
								1527,
								1531,
								1535,
								1539
							]
						}
					],
					"src": "40:5678:11"
				},
				"id": 11
			}
		}
	}
}